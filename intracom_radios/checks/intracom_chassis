#!/usr/bin/python
# -*- encoding: utf-8; py-indent-offset: 4 -*-
# +------------------------------------------------------------------+
# |             ____ _               _        __  __ _  __           |
# |            / ___| |__   ___  ___| | __   |  \/  | |/ /           |
# |           | |   | '_ \ / _ \/ __| |/ /   | |\/| | ' /            |
# |           | |___| | | |  __/ (__|   <    | |  | | . \            |
# |            \____|_| |_|\___|\___|_|\_\___|_|  |_|_|\_\           |
# |                                                                  |
# | Copyright Mathias Kettner 2018             mk@mathias-kettner.de |
# +------------------------------------------------------------------+
#
# This file is part of Check_MK.
# The official homepage is at http://mathias-kettner.de/check_mk.
#
# check_mk is free software;  you can redistribute it and/or modify it
# under the  terms of the  GNU General Public License  as published by
# the Free Software Foundation in version 2.  check_mk is  distributed
# in the hope that it will be useful, but WITHOUT ANY WARRANTY;  with-
# out even the implied warranty of  MERCHANTABILITY  or  FITNESS FOR A
# PARTICULAR PURPOSE. See the  GNU General Public License for more de-
# tails. You should have  received  a copy of the  GNU  General Public
# License along with GNU Make; see the file  COPYING.  If  not,  write
# to the Free Software Foundation, Inc., 51 Franklin St,  Fifth Floor,
# Boston, MA 02110-1301 USA.

# Techfu / Greg Wildman <greg.wildman@techfu.co.za> - 2018

# Example Output
#
# ENTITY-MIB::entityPhysical (1st row)
# .1.3.6.1.2.1.47.1.1.1.1.2.1 = STRING: "Base Band Unit"
# .1.3.6.1.2.1.47.1.1.1.1.7.1 = STRING: "bbu"
# .1.3.6.1.2.1.47.1.1.1.1.8.1 = STRING: "RDF7346.a"
# .1.3.6.1.2.1.47.1.1.1.1.9.1 = STRING: "5.13"
# .1.3.6.1.2.1.47.1.1.1.1.10.1 = STRING: "6.4.0_2302_R.1.12.2.build_03"
# .1.3.6.1.2.1.47.1.1.1.1.11.1 = STRING: "321411035726"
# .1.3.6.1.2.1.47.1.1.1.1.13.1 = STRING: "Z00-654/31.31"

# [[
#   u'Base Band Unit',
#   u'bbu',
#   u'RDF7346.a',
#   u'5.13',
#   u'6.4.0_2302_R.1.12.2.build_03',
#   u'321411035726',
#   u'Z00-654/31.31'],
#  [u'BBU FPGA', u'fpga', u'', u'812080b5', u'', u'', u''],
#  [u'BBU Thermometer', u'bbu-temp', u'', u'', u'', u'', u''],
#  [u'Radio Transceiver Unit',
#   u'rfu',
#   u'000b0386',
#   u'4',
#   u'0000009a',
#   u'321411033108',
#   u'Y00-65K/55.33'],
#  [u'Modulator/Demodulator',
#   u'modem',
#   u'812080b5',
#   u'',
#   u'002001d9',
#   u'',
#   u''],
#  [u'Network Processor', u'npu', u'6.320.320.N', u'', u'', u'', u'']]


intracom_chassis_scan = lambda oid: oid(".1.3.6.1.2.1.1.2.0") == ".1.3.6.1.4.1.1807.1.2.250"

intracom_chassis_info = ( ".1.3.6.1.2.1.47.1.1.1", [  # ENTITY-MIB::entityPhysical
                                "1.2",     # entPhysicalDescr
                                "1.7",     # entPhysicalName
                                "1.8",     # entPhysicalHardwareRev
                                "1.9",     # entPhysicalFirmwareRev
                                "1.10",    # entPhysicalSoftwareRev
                                "1.11",    # entPhysicalSerialNum
                                "1.13",    # entPhysicalModelName
                                ]
                        )


def inventory_intracom_chassis(info):
    for line in info:
        descr, name, hw_rev, fw_rev, sw_rev, serial, model_name = line
        if descr == "Base Band Unit":
            yield "BBU", {}
        elif descr == "Radio Transceiver Unit":
            yield "RTU", {}
        elif descr == "Modulator/Demodulator":
            yield "Modem", {}


def check_intracom_chassis(item, params, info):
    for line in info:
        descr, name, hw_rev, fw_rev, sw_rev, serial, model_name = line
        if item == "BBU" and descr == "Base Band Unit":
            infotext = "Hardware: %s, Software: %s, Bootloader: %s, Z-Serial: %s, Z-Code: %s" % \
                       (hw_rev, sw_rev, fw_rev, serial, model_name) 
            return 0, infotext

        elif item == "RTU" and descr == "Radio Transceiver Unit":
            infotext = "Hardware: %s, Software: %s, Bootloader: %s, Y-Serial: %s, Y-Code: %s" % \
                       (hw_rev, sw_rev, fw_rev, serial, model_name) 
            return 0, infotext

        elif item == "Modem" and descr == "Modulator/Demodulator":
            infotext = "Hardware: %s, Software: %s" % (hw_rev, sw_rev)
            return 0, infotext
   
check_info["intracom_chassis"] = {
    "inventory_function"        : inventory_intracom_chassis,
    "check_function"            : check_intracom_chassis,
    "service_description"       : "Chassis %s",
    "snmp_info"                 : intracom_chassis_info,
    "snmp_scan_function"        : intracom_chassis_scan,
}

# Fin.

