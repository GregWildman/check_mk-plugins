#!/usr/bin/python
# -*- encoding: utf-8; py-indent-offset: 4 -*-
# +------------------------------------------------------------------+
# |             ____ _               _        __  __ _  __           |
# |            / ___| |__   ___  ___| | __   |  \/  | |/ /           |
# |           | |   | '_ \ / _ \/ __| |/ /   | |\/| | ' /            |
# |           | |___| | | |  __/ (__|   <    | |  | | . \            |
# |            \____|_| |_|\___|\___|_|\_\___|_|  |_|_|\_\           |
# |                                                                  |
# | Copyright Mathias Kettner 2018             mk@mathias-kettner.de |
# +------------------------------------------------------------------+
#
# This file is part of Check_MK.
# The official homepage is at http://mathias-kettner.de/check_mk.
#
# check_mk is free software;  you can redistribute it and/or modify it
# under the  terms of the  GNU General Public License  as published by
# the Free Software Foundation in version 2.  check_mk is  distributed
# in the hope that it will be useful, but WITHOUT ANY WARRANTY;  with-
# out even the implied warranty of  MERCHANTABILITY  or  FITNESS FOR A
# PARTICULAR PURPOSE. See the  GNU General Public License for more de-
# tails. You should have  received  a copy of the  GNU  General Public
# License along with GNU Make; see the file  COPYING.  If  not,  write
# to the Free Software Foundation, Inc., 51 Franklin St,  Fifth Floor,
# Boston, MA 02110-1301 USA.

# Techfu / Greg Wildman <greg.wildman@techfu.co.za> - 2018

# Example Output
#


def inventory_mikrotik_queue(info):
    for name, iface, bytes_in, bytes_out, packets_in, packets_out, pcq_in, pcq_out, \
        dropped_in, dropped_out in info:
        if name != "":
            yield name, {}

def check_mikrotik_queue(item, params, info):
    this_time = int(time.time())
    for name, iface, bytes_in, bytes_out, packets_in, packets_out, pcq_in, pcq_out, \
        dropped_in, dropped_out in info:
        if item == name:
            rate_bytes_in  = get_rate("mtxrQueueSimpleBytesIn", this_time, int(bytes_in))
            rate_bytes_out = get_rate("mtxrQueueSimpleBytesOut", this_time, int(bytes_out))
            rate_pkts_in   = get_rate("mtxrQueueSimplePacketsIn", this_time, int(packets_in))
            rate_pkts_out  = get_rate("mtxrQueueSimplePacketsOut", this_time, int(packets_out))
            rate_drop_in   = get_rate("mtxrQueueSimpleDroppedIn", this_time, int(dropped_in))
            rate_drop_out  = get_rate("mtxrQueueSimpleDroppedOut", this_time, int(dropped_out))
            rate_pcq_in    = get_rate("mtxrQueueSimplePCQIn", this_time, int(pcq_in))
            rate_pcq_out   = get_rate("mtxrQueueSimplePCQOut", this_time, int(pcq_out))

            infotext = "in: %s, out: %s " % (get_nic_speed_human_readable(rate_bytes_in*8), get_nic_speed_human_readable(rate_bytes_out*8))
            perfdata = [("in",      "%f" % rate_bytes_in),
                        ("out",     "%f" % rate_bytes_out),
                        ("inpkts",  "%f" % rate_pkts_in),
                        ("outpkts", "%f" % rate_pkts_out),
                        ("indrop",  "%f" % rate_drop_in),
                        ("outdrop", "%f" % rate_drop_out),
                        ("inpcq",   "%f" % rate_pcq_in),
                        ("outpcq",  "%f" % rate_pcq_out)]

            return 0, infotext, perfdata

check_info["mikrotik_queue"] = {
    "inventory_function"        : inventory_mikrotik_queue,
    "check_function"            : check_mikrotik_queue,
    "service_description"       : 'Simple Queue %s',
    "has_perfdata"              : True,
    "includes"                  : [ "if.include" ],
    "snmp_info"                 : (".1.3.6.1.4.1.14988.1.1.2.1", [   # MIKROTIK.MIB::mtxrQueueSimpleTable
                                          "1.2",    # mtxrQueueSimpleName
                                          "1.7",    # mtxrQueueSimpleIface
                                          "1.8",    # mtxrQueueSimpleBytesIn
                                          "1.9",    # mtxrQueueSimpleBytesOut
                                         "1.10",    # mtxrQueueSimplePacketsIn
                                         "1.11",    # mtxrQueueSimplePacketsOut
                                         "1.12",    # mtxrQueueSimplePCQQueuesIn
                                         "1.13",    # mtxrQueueSimplePCQQueuesOut
                                         "1.14",    # mtxrQueueSimpleDroppedIn
                                         "1.15",    # mtxrQueueSimpleDroppedOut
                         ]),
    "snmp_scan_function"        : lambda oid: oid(".1.3.6.1.2.1.1.2.0").startswith(".1.3.6.1.4.1.14988.1")
}

# Fin.

