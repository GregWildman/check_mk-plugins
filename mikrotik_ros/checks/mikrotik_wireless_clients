#!/usr/bin/python
# -*- encoding: utf-8; py-indent-offset: 4 -*-
# +------------------------------------------------------------------+
# |             ____ _               _        __  __ _  __           |
# |            / ___| |__   ___  ___| | __   |  \/  | |/ /           |
# |           | |   | '_ \ / _ \/ __| |/ /   | |\/| | ' /            |
# |           | |___| | | |  __/ (__|   <    | |  | | . \            |
# |            \____|_| |_|\___|\___|_|\_\___|_|  |_|_|\_\           |
# |                                                                  |
# | Copyright Mathias Kettner 2018             mk@mathias-kettner.de |
# +------------------------------------------------------------------+
#
# This file is part of Check_MK.
# The official homepage is at http://mathias-kettner.de/check_mk.
#
# check_mk is free software;  you can redistribute it and/or modify it
# under the  terms of the  GNU General Public License  as published by
# the Free Software Foundation in version 2.  check_mk is  distributed
# in the hope that it will be useful, but WITHOUT ANY WARRANTY;  with-
# out even the implied warranty of  MERCHANTABILITY  or  FITNESS FOR A
# PARTICULAR PURPOSE. See the  GNU General Public License for more de-
# tails. You should have  received  a copy of the  GNU  General Public
# License along with GNU Make; see the file  COPYING.  If  not,  write
# to the Free Software Foundation, Inc., 51 Franklin St,  Fifth Floor,
# Boston, MA 02110-1301 USA.

# Techfu / Greg Wildman <greg.wildman@techfu.co.za> - 2018

# Example Output
#
# MIKROTIK.MIB::mtxrWireless -> mtxrWlRtabTable
# SNMPv2-SMI::enterprises.14988.1.1.1.2.1.1.212.202.109.213.115.237.2 = Hex-STRING: D4 CA 6D D5 73 ED 
# SNMPv2-SMI::enterprises.14988.1.1.1.2.1.3.212.202.109.213.115.237.2 = INTEGER: -57
# SNMPv2-SMI::enterprises.14988.1.1.1.2.1.4.212.202.109.213.115.237.2 = Counter32: 523143978
# SNMPv2-SMI::enterprises.14988.1.1.1.2.1.5.212.202.109.213.115.237.2 = Counter32: 132010856
# SNMPv2-SMI::enterprises.14988.1.1.1.2.1.6.212.202.109.213.115.237.2 = Counter32: 480497
# SNMPv2-SMI::enterprises.14988.1.1.1.2.1.7.212.202.109.213.115.237.2 = Counter32: 303595
# SNMPv2-SMI::enterprises.14988.1.1.1.2.1.8.212.202.109.213.115.237.2 = Gauge32: 144400000
# SNMPv2-SMI::enterprises.14988.1.1.1.2.1.9.212.202.109.213.115.237.2 = Gauge32: 86600000
# SNMPv2-SMI::enterprises.14988.1.1.1.2.1.10.212.202.109.213.115.237.2 = Hex-STRING: 00 
# SNMPv2-SMI::enterprises.14988.1.1.1.2.1.11.212.202.109.213.115.237.2 = Timeticks: (11794000) 1 day, 8:45:40.00
# SNMPv2-SMI::enterprises.14988.1.1.1.2.1.12.212.202.109.213.115.237.2 = INTEGER: 61
# SNMPv2-SMI::enterprises.14988.1.1.1.2.1.13.212.202.109.213.115.237.2 = INTEGER: -57
# SNMPv2-SMI::enterprises.14988.1.1.1.2.1.14.212.202.109.213.115.237.2 = INTEGER: -58
# SNMPv2-SMI::enterprises.14988.1.1.1.2.1.15.212.202.109.213.115.237.2 = INTEGER: -55
# SNMPv2-SMI::enterprises.14988.1.1.1.2.1.16.212.202.109.213.115.237.2 = INTEGER: -59
# SNMPv2-SMI::enterprises.14988.1.1.1.2.1.17.212.202.109.213.115.237.2 = INTEGER: 0
# SNMPv2-SMI::enterprises.14988.1.1.1.2.1.18.212.202.109.213.115.237.2 = INTEGER: 0
# SNMPv2-SMI::enterprises.14988.1.1.1.2.1.19.212.202.109.213.115.237.2 = INTEGER: -53

mikrotik_wireless_clients_scan = lambda oid: ".1.3.6.1.4.1.14988.1" in oid(".1.3.6.1.2.1.1.2.0") and \
                                        oid(".1.3.6.1.4.1.14988.1.1.1.2.*") != None

mikrotik_wireless_clients_info = ( ".1.3.6.1.4.1.14988.1.1.1.2", [   # MIKROTIK.MIB::mtxrWlRtabTable
                                 BINARY("1.1"),       # mtxrWlRtabAddr            0
                                        "1.3",        # mtxrWlRtabStrength        1
                                        "1.4",        # mtxrWlRtabTxBytes         2
                                        "1.5",        # mtxrWlRtabRxBytes         3
                                        "1.6",        # mtxrWlRtabTxPackets       4
                                        "1.7",        # mtxrWlRtabRxPackets       5
                                        "1.8",        # mtxrWlRtabTxRate          6
                                        "1.9",        # mtxrWlRtabRxRate          7
                                        "1.11",       # mtxrWlRtabUptime          8
                                        "1.12",       # mtxrWlRtabSignalToNoise   9
                                        "1.13",       # mtxrWlRtabTxStrengthCh0  10
                                        "1.14",       # mtxrWlRtabRxStrengthCh0  11
                                        "1.15",       # mtxrWlRtabTxStrengthCh1  12
                                        "1.16",       # mtxrWlRtabRxStrengthCh1  13
                                        "1.17",       # mtxrWlRtabTxStrengthCh2  14
                                        "1.18",       # mtxrWlRtabRxStrengthCh2  15
                                        "1.19",       # mtxrWlRtabTxStrength     16
                       ])

def mikrotik_wireless_clients_render_mac_address(ifPhysAddress):
    if type(ifPhysAddress) != list:
        mac_bytes = map(ord, ifPhysAddress)
    else:
        mac_bytes = ifPhysAddress
    return (":".join(["%02s" % hex(m)[2:] for m in mac_bytes]).replace(' ', '0')).upper()

def inventory_mikrotik_wireless_clients(info):
    for line in info:
        mac_raw = line[0]
        yield "%s" % mikrotik_wireless_clients_render_mac_address(mac_raw), {}

def check_mikrotik_wireless_clients(item, params, info):
    this_time = int(time.time())
    for mac_raw, rx_strength, tx_bytes, rx_bytes, tx_packets, rx_packets, \
        tx_rate, rx_rate, uptime, snr, tx_str_ch0, rx_str_ch0, tx_str_ch1, rx_str_ch1, \
        tx_str_ch2, rx_str_ch2, tx_strength in info:
        mac = mikrotik_wireless_clients_render_mac_address(mac_raw)
        if item == mac:
            speed_rx = (int(rx_rate) / 1000000) * 1024
            speed_tx = (int(tx_rate) / 1000000) * 1024
            dbm_rx = float(rx_strength)
            dbm_tx = float(tx_strength)
            rate_rx  = get_rate("mtxrWlRtabRxBytes", this_time, int(rx_bytes))
            rate_tx  = get_rate("mtxrWlRtabTxBytes", this_time, int(tx_bytes))
            pkts_rx  = get_rate("mtxrWlRtabRxPackets", this_time, int(rx_packets))
            pkts_tx  = get_rate("mtxrWlRtabTxPackets", this_time, int(tx_packets))
            infotext  = "Rate: %d/%d Mbit/s, " % (speed_rx / 1000, speed_tx / 1000 )
            infotext += "Output Power: %.1f, Input Power: %.1f" % ( dbm_tx, dbm_rx )
            perfdata = [("in", rate_rx, None, None, 0, speed_rx), ("out", rate_tx, None, None, 0, speed_tx),
                        ("inpkts", pkts_rx), ("outpkts", pkts_tx),
                        ("rx_strength", "%.1fdBm" % dbm_rx), ("tx_strength", "%.1fdBm" % dbm_tx)]

            return (0, infotext, perfdata)

check_info["mikrotik_wireless_clients"] = {
    "inventory_function"        : inventory_mikrotik_wireless_clients,
    "check_function"            : check_mikrotik_wireless_clients,
    "service_description"       : 'Client %s',
    'has_perfdata'              : True,
    "snmp_info"                 : mikrotik_wireless_clients_info,
    "snmp_scan_function"        : mikrotik_wireless_clients_scan,
}

# Fin.

