#!/usr/bin/python
# -*- encoding: utf-8; py-indent-offset: 4 -*-
# +------------------------------------------------------------------+
# |             ____ _               _        __  __ _  __           |
# |            / ___| |__   ___  ___| | __   |  \/  | |/ /           |
# |           | |   | '_ \ / _ \/ __| |/ /   | |\/| | ' /            |
# |           | |___| | | |  __/ (__|   <    | |  | | . \            |
# |            \____|_| |_|\___|\___|_|\_\___|_|  |_|_|\_\           |
# |                                                                  |
# | Copyright Mathias Kettner 2018             mk@mathias-kettner.de |
# +------------------------------------------------------------------+
#
# This file is part of Check_MK.
# The official homepage is at http://mathias-kettner.de/check_mk.
#
# check_mk is free software;  you can redistribute it and/or modify it
# under the  terms of the  GNU General Public License  as published by
# the Free Software Foundation in version 2.  check_mk is  distributed
# in the hope that it will be useful, but WITHOUT ANY WARRANTY;  with-
# out even the implied warranty of  MERCHANTABILITY  or  FITNESS FOR A
# PARTICULAR PURPOSE. See the  GNU General Public License for more de-
# tails. You should have  received  a copy of the  GNU  General Public
# License along with GNU Make; see the file  COPYING.  If  not,  write
# to the Free Software Foundation, Inc., 51 Franklin St,  Fifth Floor,
# Boston, MA 02110-1301 USA.

# Techfu / Greg Wildman <greg.wildman@techfu.co.za> - 2018

# Example Output
#
# GAMMATRONIC-MIB::psBatteryTable
# .1.3.6.1.4.1.6050.1.2.26.1.1.1 = INTEGER: 1
# .1.3.6.1.4.1.6050.1.2.26.1.4.1 = INTEGER: 0
# .1.3.6.1.4.1.6050.1.2.26.1.5.1 = INTEGER: 43

factory_settings["gamatronic_temp_default_levels"] = {
    "levels": (40, 50),
}

def inventory_gamatronic_temp(info):
    for idx, temp_sign, temp_raw in info:
        if idx:
            yield idx, {}

def check_gamatronic_temp(item, params, info):
    for idx, temp_sign, temp_raw in info:
        if item == idx:
            if not temp_raw:
                yield 3, "Battery temperature not available"
            else:
                factor = 1.0
                if saveint(temp_sign) == 1:
                    factor = -1.0
                temp = savefloat(temp_raw) * factor
                yield check_temperature(temp, params, "gamatronic_temp_%s" % item)

check_info["gamatronic_temp"] = {
    "check_function"          : check_gamatronic_temp,
    "inventory_function"      : inventory_gamatronic_temp,
    "service_description"     : "Temperature %s",
    "group"                   : "temperature",
    "has_perfdata"            : True,
    "snmp_scan_function"      : lambda oid: oid(".1.3.6.1.2.1.1.2.0") == ".1.3.6.1.4.1.6050",
    "snmp_info"               : (".1.3.6.1.4.1.6050.1.2.26", [ #  GAMMATRONIC-MIB::psBatteryTable
                                        "1.1",  # psBatteryIndex
                                        "1.4",  # psBatteryTemperatureSign
                                        "1.5",  # psBatteryTemperature
                                ]),
    "includes"                : [ "temperature.include" ],
    "default_levels_variable" : "gamatronic_temp_default_levels",
}

# Fin.

