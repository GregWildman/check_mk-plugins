#!/usr/bin/python
# -*- encoding: utf-8; py-indent-offset: 4 -*-
# +------------------------------------------------------------------+
# |             ____ _               _        __  __ _  __           |
# |            / ___| |__   ___  ___| | __   |  \/  | |/ /           |
# |           | |   | '_ \ / _ \/ __| |/ /   | |\/| | ' /            |
# |           | |___| | | |  __/ (__|   <    | |  | | . \            |
# |            \____|_| |_|\___|\___|_|\_\___|_|  |_|_|\_\           |
# |                                                                  |
# | Copyright Mathias Kettner 2018             mk@mathias-kettner.de |
# +------------------------------------------------------------------+
#
# This file is part of Check_MK.
# The official homepage is at http://mathias-kettner.de/check_mk.
#
# check_mk is free software;  you can redistribute it and/or modify it
# under the  terms of the  GNU General Public License  as published by
# the Free Software Foundation in version 2.  check_mk is  distributed
# in the hope that it will be useful, but WITHOUT ANY WARRANTY;  with-
# out even the implied warranty of  MERCHANTABILITY  or  FITNESS FOR A
# PARTICULAR PURPOSE. See the  GNU General Public License for more de-
# tails. You should have  received  a copy of the  GNU  General Public
# License along with GNU Make; see the file  COPYING.  If  not,  write
# to the Free Software Foundation, Inc., 51 Franklin St,  Fifth Floor,
# Boston, MA 02110-1301 USA.

# Techfu / Greg Wildman <greg.wildman@techfu.co.za> - 2018

# Example Output
#
# GAMMATRONIC-MIB::psDCOutput
# .1.3.6.1.4.1.6050.1.6.1.0 = INTEGER: 5425
# .1.3.6.1.4.1.6050.1.6.2.0 = INTEGER: 390
# .1.3.6.1.4.1.6050.1.6.4.0 = INTEGER: 375

gamatronic_rectifier_scan = lambda oid: oid(".1.3.6.1.2.1.1.2.0") == ".1.3.6.1.4.1.6050"

gamatronic_rectifier_info = (".1.3.6.1.4.1.6050.1.6", [ #  GAMMATRONIC-MIB::psDCOutput
                               "1.0",    # psDCoutputVoltage
                               "2.0",    # psDCoutputCurrent1 - rectifier current
                               "4.0",    # psDCoutputCurrent3 - load current
                            ])

def inventory_gamatronic_rectifier_battery(info):
    if len(info[0]) > 0:
            yield None, {}

def check_gamatronic_rectifier_battery(item, _no_params, info):
    voltage_raw, rectifier_raw, load_raw = info[0]
    voltage = float(voltage_raw) / 100.0
    rectifier_current = float(rectifier_raw) / 100.0
    load_current = float(load_raw) / 100.0

    infotext = "DC Voltage: %.2fV, Rectifier: %.2fA, Load: %.2fA" % \
               (voltage, rectifier_current, load_current)
    perfdata = [("voltage", voltage), \
                ("rectifier_current", rectifier_current), \
                ("load_current", load_current) ]
    
    return 0, infotext, perfdata

check_info["gamatronic_rectifier"] = {
    "inventory_function"        : inventory_gamatronic_rectifier_battery,
    "check_function"            : check_gamatronic_rectifier_battery,
    "service_description"       : 'Rectifier',
    "has_perfdata"              : True,
    "snmp_info"                 : gamatronic_rectifier_info,
    "snmp_scan_function"        : gamatronic_rectifier_scan,

}

# Fin.

