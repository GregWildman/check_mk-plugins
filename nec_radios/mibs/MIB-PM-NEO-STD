
-------------------------------------------------------------------------------
-- Release Date: <2007/07/05 18:00:00>
--    Version  : Ver.1.11 (Reference NEO STD MIB ;Ver.1.791)
-- Release Date: <2007/10/24 15:30:00>
--    Version  : Ver.1.12 (Reference NEO STD MIB ;Ver.1.85)
-- Release Date: <2008/7/2 15:43:00>
--    Version  : Ver.1.13 (Reference NEO STD MIB ;Ver.3.18)
-- Release Date: <2008/8/26 15:43:00>
--    Version  : Ver.1.14 (Reference NEO STD MIB ;Ver.3.53)

MIB-PM-NEO-STD DEFINITIONS ::= BEGIN

-----------------------------------------------
-- IMPORTS Definitions
-----------------------------------------------

	IMPORTS
		enterprises,IpAddress,Counter,TimeTicks
			FROM RFC1155-SMI
		DisplayString
			FROM RFC1213-MIB
		OBJECT-TYPE
			FROM RFC-1212;

-----------------------------------------------
-- Begin User MIB Object Definitions
-----------------------------------------------

	DATE32	::= TEXTUAL-CONVENTION
		STATUS		current
		DESCRIPTION	"Date Type (32Bit)"
		SYNTAX		INTEGER

	TIME32	::= TEXTUAL-CONVENTION
		STATUS		current
		DESCRIPTION	"Time Type (32Bit)"
		SYNTAX		INTEGER

	DateAndTime	::= TEXTUAL-CONVENTION
		STATUS		current
		DESCRIPTION	"Date and Time Type"
		SYNTAX		OCTET STRING ( SIZE (8) )
					

	SeverityValue	::= TEXTUAL-CONVENTION
		STATUS		current
		DESCRIPTION	"Severity (CCITT Rec. X.733)
					  0:invalid
					  1:clear,
					  2:minor
					  3:major,
					  4:critical
					"
		SYNTAX		INTEGER (0..4)

	AlarmTypeValue	::= TEXTUAL-CONVENTION
		STATUS		current
		DESCRIPTION	"Alaem Type (CCITT Rec. X.733)
					  0:invalid,
					  1:communicationsAlarm,
					  2:qualityOfServiceAlarm,
					  3:processingErrorAlarm,
					  4:equipmentAlarm,
					  5:environmentalAlarm,
					  6:integrityViolationAlarm,
					  7:operationalViolationAlarm,
					  8:physicalViolationAlarm,
					  9:securityViolationAlarm,
					  10:timeDomainViolationAlarm
					"
		SYNTAX		INTEGER (0..10)

	ProbableCauseValue	::= TEXTUAL-CONVENTION
		STATUS		current
		DESCRIPTION	"Probable Cause (CCITT Rec. X.733)
					  0:invalid,
					  1:aIS,
					  2:callSetUpFailure,
					  3:degradedSignal,
					  4:farEndReceiverFailure,
					  5:framingError,
					  6:lossOfFrame,
					  7:lossOfPointer,
					  8:lossOfSignal,
					  9:payloadTypeMismatch,
					  10:transmissionError,
					  11:remoteAlarmInterface,
					  12:excessiveBER,
					  13:pathTraceMismatch,
					  51:backplaneFailure,
					  52:dataSetProblem,
					  53:equipmentIdentifierDuplication,
					  54:externalIFDeviceProblem,
					  55:lineCardProblem,
					  56:multiplexerProblem,
					  57:nEIdentifierDuplication,
					  58:powerProblem,
					  59:processorProblem,
					  60:protectionPathFailure,
					  61:receiverFailure,
					  62:replaceableUnitMissing,
					  63:replaceableUnitTypeMismatch,
					  64:synchronizationSourceMismatch,
					  65:terminalProblem,
					  66:timingProblem,
					  67:transmitterFailure,
					  68:trunkCardProblem,
					  69:replaceableUnitProblem,
					  101:airCompressorFailure,
					  102:airConditioningFailure,
					  103:airDryerFailure,
					  104:batteryDischarging,
					  105:batteryFailure,
					  106:commercialPowerFailure,
					  107:coolingFanFailure,
					  108:engineFailure,
					  109:fireDetectorFailure,
					  110:fuseFailure,
					  111:generatorFailure,
					  112:lowBatteryThreshold,
					  113:pumpFailure,
					  114:rectifierFailure,
					  115:rectifierHighVoltage,
					  116:rectifierLowFVoltage,
					  117:ventilationsSystemFailure,
					  118:enclosureDoorOpen,
					  119:explosiveGas,
					  120:fire,
					  121:flood,
					  122:highHumidity,
					  123:highTemperature,
					  124:highWind,
					  125:iceBuildUp,
					  126:intrusionDetection,
					  127:lowFuel,
					  128:lowHumidity,
					  129:lowCablePressure,
					  130:lowTemperature,
					  131:lowWater,
					  132:smoke,
					  133:toxicGas,
					  151:storageCapacityProblem,
					  152:memoryMismatch,
					  153:corruptData,
					  154:outOfCPUCycles,
					  155:sfwrEnvironmentProblem,
					  156:sfwrDownloadFailure,
					  157:communicationsProtocolError,
					  158:congestion,
					  159:heatingOrVentilationOrCoolingSystemProblem,
					  160:lANerror,
					  161:performanceDegraded,
					  162:temperatureUnacceptable,
					  163:thresholdCrossed,
					  164:underlyingResourceUnavailable,
					  165:equipmentMalfunction,
					  166:configurationOrCustomizationError,
					  501:duplicateInformation,
					  502:informationMissing,
					  503:informationModificationDetected,
					  504:informationOutOfSequence,
					  505:unexpectedInformation,
					  506:denialOfService,
					  507:outOfService,
					  508:proceduralError,
					  509:cableTamper,
					  510:securityIntrusionDetection,
					  511:authenticationFailure,
					  512:breachOfConfidentiality,
					  513:unauthorisedAccessAttempt,
					  514:delayedInformation,
					  515:keyExpired,
					  516:outOfHoursActivity,
					  517:otherReasons,
					  518:bossHardwareFailure,
					  519:bossSystemSoftwareFailure,
					  520:bossApplicationSoftwareFailure,
					  521:bossDatabaseFailure,
					  522:bossNetworkFailure
					"
		SYNTAX		INTEGER (0..522)

	NormalAlarmValue	::= TEXTUAL-CONVENTION
		STATUS		current
		DESCRIPTION	"Normal/Alarm Type
					  0:Invalid,
					  1:Normal,
					  2:Alarm
					"
		SYNTAX		INTEGER (0..2)

	OffOnValue	::= TEXTUAL-CONVENTION
		STATUS		current
		DESCRIPTION	"Off/On Type
					  0:Invalid,
					  1:Off,
					  2:On
					"
		SYNTAX		INTEGER (0..2)

	NormalSendValue	::= TEXTUAL-CONVENTION
		STATUS		current
		DESCRIPTION	"Normal/Send Type
					  0:Invalid,
					  1:Normal,
					  2:Send
					"
		SYNTAX		INTEGER (0..2)

	NormalRcvdValue	::= TEXTUAL-CONVENTION
		STATUS		current
		DESCRIPTION	"Normal/Rcvd Type
					  0:Invalid,
					  1:Normal,
					  2:Rcvd
					"
		SYNTAX		INTEGER (0..2)

	ConnectDisconnectValue	::= TEXTUAL-CONVENTION
		STATUS		current
		DESCRIPTION	"Connect/Disconnect Type
					  Invalid(0),
					  Disconnect(1),
					  Connect(2)
					"
		SYNTAX		INTEGER (0..2)


-----------------------------------------------
-- enterprises Group Definitions
-----------------------------------------------

	nec OBJECT IDENTIFIER
		::= { enterprises 119 }

	nec-mib OBJECT IDENTIFIER
		::= { nec 2 }

	necProductDepend OBJECT IDENTIFIER
		::= { nec-mib 3 }

	radioEquipment OBJECT IDENTIFIER
		::= { necProductDepend 69 }

	system3 OBJECT IDENTIFIER
		::= { radioEquipment 3 }

	pasoNeoSTD OBJECT IDENTIFIER
		::= { radioEquipment 401 }


-----------------------------------------------
-- system3 Group Definitions
-----------------------------------------------

	pnSystem OBJECT IDENTIFIER
		::= { system3 1 }

	pnConfiguration OBJECT IDENTIFIER
		::= { system3 3 }

	pnCommunications OBJECT IDENTIFIER
		::= { system3 4 }

	pnSys3Trap OBJECT IDENTIFIER
		::= { system3 6 }


-----------------------------------------------
-- pnSystem Group Definitions
-----------------------------------------------

	pnSystemInfo OBJECT IDENTIFIER
		::= { pnSystem 1 }

	pnSysPrimaryIpAddress OBJECT-TYPE
		SYNTAX		IpAddress
		ACCESS		read-only
		STATUS		mandatory
		DESCRIPTION	"PRIMARY IP ADDRESS
					ALT=IXIP
!					TRAP=systemTrapPnSys3SetPrimaryIpAddress"
		::= { pnSystemInfo 4 }

	pnSysMibVersion OBJECT-TYPE
		SYNTAX		DisplayString (SIZE (4))
		ACCESS		read-only
		STATUS		mandatory
		DESCRIPTION	"MIB VERSION(Pasolink-NEO)
					ascii characters.
					IMMEDSTR=3.53"
		::= { pnSystemInfo 5 }

	pnSysEquipmentType OBJECT-TYPE
		SYNTAX		INTEGER (0..100)
		ACCESS		read-only
		STATUS		mandatory
		DESCRIPTION	"Equipment Type
					  20:PASOLINK+(STM-1),
					  30:PASOLINK+(STM-0),
					  40:PASOLINK+(PDH),
					  50:PASOLINK+(Nlite-L),
					  60:PASOLINK+(Mx)
					  70:PASOLINK+(NLite-Lx),
					  100:PASOLINK NEO(STD),
					  120:PASOLINK NEO(HIGH-END),
					  130:PASOLINK NEO(Compact),
					  140:PASOLINK NEO(Nodal)"
		::= { pnSystemInfo 7 }

	pnSysEquipmentConfig OBJECT-TYPE
		SYNTAX		INTEGER (0..11)
		ACCESS		read-only
		STATUS		mandatory
		DESCRIPTION	"Equipment Config
					  0:1+0,
					  1:1+1,
					  2:1+1 HS,
					  3:1+1 TP,
					  4:1+0->1+1,
					  6:1+0(4*2M),
					  7:1+0(20*2M),
					  8:2-WAY PDH
					  9:2-WAY(TREE),
					  10:2-WAY(REP),
					  11:2-WAY(RING)"
		::= { pnSystemInfo 8 }

	pnSysOppositeIpAddrTable OBJECT-TYPE
		SYNTAX		SEQUENCE OF PnSysOppositeIpAddrEntry
		ACCESS		not-accessible
		STATUS		mandatory
		DESCRIPTION	"Opposite IP Address Table"
		::= { pnSystemInfo 11 }

	pnSysOppositeIpAddrEntry OBJECT-TYPE
		SYNTAX		PnSysOppositeIpAddrEntry
		ACCESS		not-accessible
		STATUS		mandatory
		INDEX		{
						pnSysOppositeIpAddrIndex
					}
		::= { pnSysOppositeIpAddrTable 1 }

	PnSysOppositeIpAddrEntry ::= SEQUENCE {
					  pnSysOppositeIpAddrIndex  INTEGER,
					  pnSysOppositeIpAddress    IpAddress
					}

	pnSysOppositeIpAddrIndex OBJECT-TYPE
		SYNTAX		INTEGER (1..4)
		ACCESS		not-accessible
		STATUS		mandatory
		DESCRIPTION	"Opposite side Index
					  1:opposite for DIR-A,
					  2:opposite for DIR-B,
					  3:opposite for DIR-C,
					  4:opposite for DIR-D"
		::= { pnSysOppositeIpAddrEntry 1 }

	pnSysOppositeIpAddress OBJECT-TYPE
		SYNTAX		IpAddress
		ACCESS		read-only
		STATUS		mandatory
		DESCRIPTION	"IP address of the destination
!					TRAP=systemTrapPnSys3OppositeIpAddress"
		::= { pnSysOppositeIpAddrEntry 2 }

	pnSysMacAddress OBJECT-TYPE
		SYNTAX		OCTET STRING (SIZE (6))
		ACCESS		read-only
		STATUS		mandatory
		DESCRIPTION	"MAC address"
		::= { pnSystemInfo 12 }

	pnSysSubnetMask OBJECT-TYPE
		SYNTAX		OCTET STRING (SIZE (4))
		ACCESS		read-only
		STATUS		mandatory
		DESCRIPTION	"Subnetmask"
		::= { pnSystemInfo 13 }

	pnSysDefaultGateway OBJECT-TYPE
		SYNTAX		OCTET STRING (SIZE (4))
		ACCESS		read-only
		STATUS		mandatory
		DESCRIPTION	"Default Gateway"
		::= { pnSystemInfo 14 }

	pnSysSetNetworkValue OBJECT IDENTIFIER
		::= { pnSystemInfo 15 }

	pnSysSetPrimaryIpAddress OBJECT-TYPE
		SYNTAX		IpAddress
		ACCESS		read-write
		STATUS		mandatory
		::= { pnSysSetNetworkValue 1 }

	pnSysSetSubnetMask OBJECT-TYPE
		SYNTAX		OCTET STRING (SIZE (4))
		ACCESS		read-write
		STATUS		mandatory
		::= { pnSysSetNetworkValue 2 }

	pnSysSetDefaultGateway OBJECT-TYPE
		SYNTAX		IpAddress
		ACCESS		read-write
		STATUS		mandatory
		::= { pnSysSetNetworkValue 3 }

	pnSysInventoryInfo OBJECT IDENTIFIER
		::= { pnSystem 2 }

	pnSysInventoryInfoTable OBJECT-TYPE
		SYNTAX		SEQUENCE OF PnSysInventoryInfoEntry
		ACCESS		not-accessible
		STATUS		optional
		DESCRIPTION	"Inventory Information Table"
		::= { pnSysInventoryInfo 1 }

	pnSysInventoryInfoEntry OBJECT-TYPE
		SYNTAX		PnSysInventoryInfoEntry
		ACCESS		not-accessible
		STATUS		optional
		INDEX		{
						pnSysInvSoftwareIndex
					}
		::= { pnSysInventoryInfoTable 1 }

	PnSysInventoryInfoEntry ::= SEQUENCE {
					  pnSysInvSoftwareIndex       INTEGER,
					  pnSysInvSoftwareVersion     DisplayString,
					  pnSysInvSoftwareUpdateTime  DateAndTime
					}

	pnSysInvSoftwareIndex OBJECT-TYPE
		SYNTAX		INTEGER (1..4)
		ACCESS		read-only
		STATUS		mandatory
		DESCRIPTION "Software Index
					  1:pmc,
					  2:smu,
					  3:os,
					  4:boot"
		::= { pnSysInventoryInfoEntry 1 }

	pnSysOperation OBJECT IDENTIFIER
		::= { pnSystem 3 }

	pnSysPmcOperation OBJECT IDENTIFIER
		::= { pnSysOperation 1 }

	pnSysOpCurrentTime OBJECT-TYPE
		SYNTAX		DateAndTime 
		ACCESS		read-write
		STATUS		mandatory
		DESCRIPTION	"Current Time"
		::= { pnSysPmcOperation 1 }

	pnSysOpProgramSysTable OBJECT-TYPE
		SYNTAX		SEQUENCE OF PnSysOpProgramSysEntry
		ACCESS		not-accessible
		STATUS		mandatory
		DESCRIPTION	"No.1/No.2 Indivisual Information Table"
		::= { pnSysOperation 2 }

	pnSysOpProgramSysEntry OBJECT-TYPE
		SYNTAX		PnSysOpProgramSysEntry
		ACCESS		not-accessible
		STATUS		mandatory
		INDEX		{
						pnSysOpProgramSysIndex,pnSysOpProgramSysModule
					}
		::= { pnSysOpProgramSysTable 1 }

	PnSysOpProgramSysEntry ::= SEQUENCE {
					  pnSysOpProgramSysIndex        INTEGER,
					  pnSysOpProgramSysModule       INTEGER,
					  pnSysOpProgramCpuResetDetail  INTEGER,
					  pnSysOpProgramDllCtrl         INTEGER,
					  pnSysOpProgramCpuResetBank    INTEGER
					}

	pnSysOpProgramSysIndex OBJECT-TYPE
		SYNTAX		INTEGER (1..2)
		ACCESS		read-only
		STATUS		mandatory
		DESCRIPTION	"No Index.
					 1:No. 1/DIR-A
					 2:No. 2/DIR-B
					
					 *)No.2 is available for 1+1 system.
					 *)DIR-A/B is available for 2-WAY system.
					Use only No.1/DIR-A index when pnSysOpProgramSysModule is ctrl(1) and applet(3).
					Use No.2/DIR-B index when pnSysOpProgramSysModule is tru(2)."
		::= { pnSysOpProgramSysEntry 1 }

	pnSysOpProgramSysModule OBJECT-TYPE
		SYNTAX		INTEGER (1..2)
		ACCESS		read-only
		STATUS		mandatory
		DESCRIPTION	"Module Index 
					  1:CTRL,
					  2:TRU(ODU)"
		::= { pnSysOpProgramSysEntry 2 }

	pnSysOpProgramCpuResetDetail OBJECT-TYPE
		SYNTAX		INTEGER (1..2)
		ACCESS		read-write
		STATUS		mandatory
		DESCRIPTION	"CPU reset control
					  1:revert reset,
					  2:normal reset( without revert )
					
					[+CPU RESET Control]
					*) pnSysOpProgramSysIndex must be no1(1) when pnSysOpProgramSysModule is ctrl(1) and applet(3).
					*) pnSysOpProgramCpuResetDetail must be normalreset(2) when pnSysOpProgramSysModule is tru(2).
!					TRAP=systemTrapPnSys3ProgramCpuResetDetail"
		::= { pnSysOpProgramSysEntry 3 }

	pnSysOpProgramDllCtrl OBJECT-TYPE
		SYNTAX		INTEGER (1..2)
		ACCESS		read-write
		STATUS		mandatory
		DESCRIPTION	"Program Download Control
					  1:start download,
					  2:suspend download
					
					[+Program Download Control]
					*) This staus is invalid when pnSysOpProgramIndvName is ctrl(1).
					*) start download value is invalid because download is start when tftp sesshon start."
		::= { pnSysOpProgramSysEntry 6 }

	pnSysOpProgramCpuResetBank OBJECT-TYPE
		SYNTAX		INTEGER (1..2)
		ACCESS		read-write
		STATUS		mandatory
		DESCRIPTION	"CPU reset control( specify F-ROM BANK )
					  1:BANK0,
					  2:BANK1
					
					*) This valu is valid only when pnSysOpProgramIndvName is ctrl(1) and pnSysOpProgramIndvIndex is no1-dirA(1).
					TRAP=systemTrapPnSys3ProgramCpuResetBank"
		::= { pnSysOpProgramSysEntry 7 }


-----------------------------------------------
-- pnConfiguration Group Definitions
-----------------------------------------------

	pnCfgSystem OBJECT IDENTIFIER
		::= { pnConfiguration 1 }

	pnCfgNEName OBJECT-TYPE
		SYNTAX		DisplayString (SIZE (0..32))
		ACCESS		read-write
		STATUS		mandatory
		DESCRIPTION	"NE Name
					TRAP=configTrapPnSys3NEName"
		::= { pnCfgSystem 1 }

	pnCfgNetwork OBJECT IDENTIFIER
		::= { pnConfiguration 2 }

	pnCfgNetManager OBJECT IDENTIFIER
		::= { pnCfgNetwork 1 }

	pnCfgNetManagerCommunityTable OBJECT-TYPE
		SYNTAX		SEQUENCE OF PnCfgNetManagerCommunityEntry
		ACCESS		not-accessible
		STATUS		mandatory
		DESCRIPTION	"Community Table"
		::= { pnCfgNetManager 1 }

	pnCfgNetManagerCommunityEntry OBJECT-TYPE
		SYNTAX		PnCfgNetManagerCommunityEntry
		ACCESS		not-accessible
		STATUS		mandatory
		INDEX		{
						pnCfgNetManagerCommunityIndex
					}
		::= { pnCfgNetManagerCommunityTable 1 }

	PnCfgNetManagerCommunityEntry ::= SEQUENCE {
					  pnCfgNetManagerCommunityIndex  INTEGER,
					  pnCfgNetManagerCommunityValue  DisplayString
					}

	pnCfgNetManagerCommunityIndex OBJECT-TYPE
		SYNTAX		INTEGER {
					  pnms(1),
					  pnmt(2),
					  generic(3)
					}
		ACCESS		read-only
		STATUS		mandatory
		DESCRIPTION	"Net Manager Community Index
					  1:PNMS
					  2:PNMT
					  3:GENERIC"
		::= { pnCfgNetManagerCommunityEntry 1 }

	pnCfgNetManagerCommunityValue OBJECT-TYPE
		SYNTAX		DisplayString (SIZE (0..32))
		ACCESS		read-write
		STATUS		mandatory
		DESCRIPTION	"Community Name."
		::= { pnCfgNetManagerCommunityEntry 2 }

	pnCfgAux OBJECT IDENTIFIER
		::= { pnConfiguration 3 }

	pnCfgAuxInTable OBJECT-TYPE
		SYNTAX		SEQUENCE OF PnCfgAuxInEntry
		ACCESS		not-accessible
		STATUS		mandatory
		DESCRIPTION	"Aux Input Table"
		::= { pnCfgAux 1 }

	pnCfgAuxInEntry OBJECT-TYPE
		SYNTAX		PnCfgAuxInEntry
		ACCESS		not-accessible
		STATUS		mandatory
		INDEX		{
						pnCfgAuxInIndex
					}
		::= { pnCfgAuxInTable 1 }

	PnCfgAuxInEntry ::= SEQUENCE {
					  pnCfgAuxInIndex          INTEGER,
					  pnCfgAuxInItemName       DisplayString,
					  pnCfgAuxInItemType       INTEGER,
					  pnCfgAuxInOpenState      DisplayString,
					  pnCfgAuxInCloseState     DisplayString,
					  pnCfgAuxInSeverity       SeverityValue,
					  pnCfgAuxInAlarmType      AlarmTypeValue,
					  pnCfgAuxInProbableCause  ProbableCauseValue
					}

	pnCfgAuxInIndex OBJECT-TYPE
		SYNTAX		INTEGER (1..6)
		ACCESS		read-only
		STATUS		mandatory
		DESCRIPTION	"AUX Input Index"
		::= { pnCfgAuxInEntry 1 }

	pnCfgAuxInItemName OBJECT-TYPE
		SYNTAX		DisplayString (SIZE (0..32))
		ACCESS		read-write
		STATUS		mandatory
		DESCRIPTION	"AUX Input name.
					TRAP=configTrapPnSys3AuxInItemName"
		::= { pnCfgAuxInEntry 2 }

	pnCfgAuxInItemType OBJECT-TYPE
		SYNTAX		INTEGER (1..3)
		ACCESS		read-write
		STATUS		mandatory
		DESCRIPTION	"Configuration for AUX Input.
					  1:Alarm In Open,
					  2:Alarm In Close,
					  3:Status
					TRAP=configTrapPnSys3AuxInItemType"
		::= { pnCfgAuxInEntry 3 }

	pnCfgAuxInOpenState OBJECT-TYPE
		SYNTAX		DisplayString (SIZE (0..32))
		ACCESS		read-write
		STATUS		mandatory
		DESCRIPTION	"Name when AUX Input is open status
					TRAP=configTrapPnSys3AuxInOpenState"
		::= { pnCfgAuxInEntry 4 }

	pnCfgAuxInCloseState OBJECT-TYPE
		SYNTAX		DisplayString (SIZE (0..32))
		ACCESS		read-write
		STATUS		mandatory
		DESCRIPTION	"Name when AUX Input is close status
					TRAP=configTrapPnSys3AuxInCloseState"
		::= { pnCfgAuxInEntry 5 }

	pnCfgAuxInSeverity OBJECT-TYPE
		SYNTAX		SeverityValue
		ACCESS		read-write
		STATUS		mandatory
		DESCRIPTION	"Sevirity when AUX Input is alarm.
					TRAP=configTrapPnSys3AuxInSeverity"
		::= { pnCfgAuxInEntry 6 }

	pnCfgAuxInAlarmType OBJECT-TYPE
		SYNTAX		AlarmTypeValue
		ACCESS		read-write
		STATUS		mandatory
		DESCRIPTION	"Alarm Type when AUX Input is alarm.
					TRAP=configTrapPnSys3AuxInAlarmType"
		::= { pnCfgAuxInEntry 7 }

	pnCfgAuxInProbableCause OBJECT-TYPE
		SYNTAX		ProbableCauseValue
		ACCESS		read-write
		STATUS		mandatory
		DESCRIPTION	"ProbableCause when AUX Input is alarm.
					TRAP=configTrapPnSys3AuxInProbableCause"
		::= { pnCfgAuxInEntry 8 }

	pnCfgAuxOutTable OBJECT-TYPE
		SYNTAX		SEQUENCE OF PnCfgAuxOutEntry
		ACCESS		not-accessible
		STATUS		mandatory
		DESCRIPTION	"AUX Output Table"
		::= { pnCfgAux 2 }

	pnCfgAuxOutEntry OBJECT-TYPE
		SYNTAX		PnCfgAuxOutEntry
		ACCESS		not-accessible
		STATUS		mandatory
		INDEX		{
						pnCfgAuxOutIndex
					}
		::= { pnCfgAuxOutTable 1 }

	PnCfgAuxOutEntry ::= SEQUENCE {
					  pnCfgAuxOutIndex       INTEGER,
					  pnCfgAuxOutItemName    DisplayString,
					  pnCfgAuxOutOpenState   DisplayString,
					  pnCfgAuxOutCloseState  DisplayString
					}

	pnCfgAuxOutIndex OBJECT-TYPE
		SYNTAX		INTEGER (1..4)
		ACCESS		read-only
		STATUS		mandatory
		DESCRIPTION	"AUX Output Index"
		::= { pnCfgAuxOutEntry 1 }

	pnCfgAuxOutItemName OBJECT-TYPE
		SYNTAX		DisplayString (SIZE (0..32))
		ACCESS		read-write
		STATUS		mandatory
		DESCRIPTION	"AUX Input name.
					TRAP=configTrapPnSys3AuxOutItemName"
		::= { pnCfgAuxOutEntry 2 }

	pnCfgAuxOutOpenState OBJECT-TYPE
		SYNTAX		DisplayString (SIZE (0..32))
		ACCESS		read-write
		STATUS		mandatory
		DESCRIPTION	"AUX Output Open State
					TRAP=configTrapPnSys3AuxOutOpenState"
		::= { pnCfgAuxOutEntry 3 }

	pnCfgAuxOutCloseState OBJECT-TYPE
		SYNTAX		DisplayString (SIZE (0..32))
		ACCESS		read-write
		STATUS		mandatory
		DESCRIPTION	"AUX Output Close State
					TRAP=configTrapPnSys3AuxOutCloseState"
		::= { pnCfgAuxOutEntry 4 }

-----------------------------------------------
-- pnCommunications Group Definitions
-----------------------------------------------

	pnPnmConnTable OBJECT-TYPE
		SYNTAX		SEQUENCE OF PnPnmConnEntry
		ACCESS		not-accessible
		STATUS		mandatory
		DESCRIPTION	"PNM connection management table"
		::= { pnCommunications 1 }

	pnPnmConnEntry OBJECT-TYPE
		SYNTAX		PnPnmConnEntry
		ACCESS		not-accessible
		STATUS		mandatory
		INDEX		{
						pnPnmConnManager,pnPnmConnStyle
					}
		::= { pnPnmConnTable 1 }

	PnPnmConnEntry ::= SEQUENCE {
					  pnPnmConnManager                 INTEGER,
					  pnPnmConnStyle                   INTEGER,
					  pnPnmConnState                   INTEGER,
					  pnPnmConnTimeout                 INTEGER,
					  pnPnmConnIdleTimer               INTEGER,
					  pnPnmConnAddress                 IpAddress,
					  pnPnmConnTime                    DateAndTime,
					  pnPnmConnGetRequests             Counter,
					  pnPnmConnSetRequests             Counter,
					  pnPnmConnTrapSeqId               Counter
					}

	pnPnmConnManager OBJECT-TYPE
		SYNTAX		INTEGER (1..3)
		ACCESS		read-only
		STATUS		mandatory
		DESCRIPTION	"PNM connection manager type
					  1:ppPnms,
					  2:ppPnmt,
					  3:generic"
		::= { pnPnmConnEntry 1 }

	pnPnmConnStyle OBJECT-TYPE
		SYNTAX		INTEGER (1..8)
		ACCESS		read-only
		STATUS		mandatory
		DESCRIPTION	"Connection type(Local/Remote/Opposite)
					Following values are used when pnPnmConnManager is Pnms(1) and Pnmt(2).
					 1:Local
					 2:Remote
					 3:Opposite
					
					Following values are used when pnPnmConnManager is generic(3).
					 1:No.1
					 2:No.2
					 3:No.3
					 4:No.4
					 5:No.5
					 6:No.6
					 7:No.7
					 8:No.8"
		::= { pnPnmConnEntry 2 }

	pnPnmConnState OBJECT-TYPE
		SYNTAX		INTEGER (0..1)
		ACCESS		read-write
		STATUS		mandatory
		DESCRIPTION	"PNM connection state
				  0:disconnect,
				  1:connect
				TRAP=systemTrapPnSys3PnmConnState"
		::= { pnPnmConnEntry 3 }

	pnPnmConnTimeout OBJECT-TYPE
		SYNTAX		INTEGER
		ACCESS		read-write
		STATUS		mandatory
		DESCRIPTION	"Auto disconnect timeout(Sec) Initialized to '0' when it's connected.
					*) When it's '0', PMC does not disconnect automatically."
		::= { pnPnmConnEntry 4 }

	pnPnmConnIdleTimer OBJECT-TYPE
		SYNTAX		INTEGER
		ACCESS		read-only
		STATUS		optional
		DESCRIPTION	"Idling Timer(No operation from PNM)(Sec)
					Counted internally, when ppPnmConnTimeout is over, disconnected."
		::= { pnPnmConnEntry 5 }

	pnPnmConnAddress OBJECT-TYPE
		SYNTAX		IpAddress
		ACCESS		read-write
		STATUS		mandatory
		DESCRIPTION	"Connected PNM IP address
					IP address of SNMP manager which is connected is automatically set."
		::= { pnPnmConnEntry 6 }

	pnPnmConnTime OBJECT-TYPE
		SYNTAX		DateAndTime
		ACCESS		read-only
		STATUS		optional
		DESCRIPTION	"Connected time"
		::= { pnPnmConnEntry 7 }

	pnPnmConnGetRequests OBJECT-TYPE
		SYNTAX		Counter
		ACCESS		read-only
		STATUS		optional
		DESCRIPTION	"Number of GetRequests packet from PNM.
					Initialized to '0' when it's connected."
		::= { pnPnmConnEntry 8 }

	pnPnmConnSetRequests OBJECT-TYPE
		SYNTAX		Counter
		ACCESS		read-only
		STATUS		optional
		DESCRIPTION	"Number of SetRequests packet from PNM.
					Initialized to '0' when it's connected."
		::= { pnPnmConnEntry 9 }

	pnPnmConnTrapSeqId OBJECT-TYPE
		SYNTAX		Counter
		ACCESS		read-write
		STATUS		mandatory
		DESCRIPTION	"TRAP sequential number.  Initialized to '0' when it's connected.
					This value is increment at sending trap packet."
		::= { pnPnmConnEntry 10 }

	pnNeighborInfo OBJECT IDENTIFIER
		::= { pnCommunications 2 }

	pnNeighborTable OBJECT-TYPE
		SYNTAX		SEQUENCE OF PnNeighborEntry
		ACCESS		not-accessible
		STATUS		mandatory
		DESCRIPTION	"Neighbor Information Table"
		::= { pnNeighborInfo 1 }

	pnNeighborEntry OBJECT-TYPE
		SYNTAX		PnNeighborEntry
		ACCESS		not-accessible
		STATUS		mandatory
		INDEX		{
						pnNeighborIfType
					}
		::= { pnNeighborTable 1 }

	PnNeighborEntry ::= SEQUENCE {
					  pnNeighborIfType          INTEGER,
					  pnNeighborIPAddr          OCTET STRING
					}

	pnNeighborIfType OBJECT-TYPE
		SYNTAX		INTEGER (1..6)
		ACCESS		read-only
		STATUS		mandatory
		DESCRIPTION	"Neighbor If Type Index
					  1: EM1
					  2: EM2
					  3: DIR-A
					  4: DIR-B
					  5: Async
					  6: USB"
		::= { pnNeighborEntry 1 }

	pnNeighborIPAddr OBJECT-TYPE
		SYNTAX		OCTET STRING (SIZE (252))
		ACCESS		read-only
		STATUS		mandatory
		DESCRIPTION	"IP Address and NE Type Infromation
					 It used 5byte for 1 Equipment.
					  4byte: IP Address
					  1byte: Equipment Type(now not used)
					
					  This value include under 51 equipments.
					
					For example,
					  IP address of Neighbor Equipments are 172.18.0.1 and 172.18.0.2.
					
					  This value is following.
					    'AC 12 00 01 00 AC 12 00 02 00'
					TRAP=systemTrapPnSys3NeighborIPAddr"
		::= { pnNeighborEntry 2 }

-----------------------------------------------
-- pnSys3Trap Group Definitions
-----------------------------------------------

	pnSys3TrapCommon OBJECT IDENTIFIER
		::= { pnSys3Trap 1 }

	pnSys3TrapGenericVars OBJECT IDENTIFIER
		::= { pnSys3TrapCommon 1 }

	sys3TrapSequenceNumber OBJECT-TYPE
		SYNTAX		Counter
		ACCESS		read-only
		STATUS		mandatory
		DESCRIPTION	"PTR=trapGroupGroup.trapSequenceNumber"
		::= { pnSys3TrapGenericVars 1 }

	sys3TrapDate OBJECT-TYPE
		SYNTAX		DisplayString (SIZE (0..16))
		ACCESS		read-only
		STATUS		mandatory
		DESCRIPTION	"PTR=trapGroupGroup.trapDate"
		::= { pnSys3TrapGenericVars 2 }

	sys3TrapTime OBJECT-TYPE
		SYNTAX		DisplayString (SIZE (0..16))
		ACCESS		read-only
		STATUS		mandatory
		DESCRIPTION	"PTR=trapGroupGroup.trapTime"
		::= { pnSys3TrapGenericVars 3 }

	sys3TrapSource OBJECT-TYPE
		SYNTAX		OBJECT IDENTIFIER
		ACCESS		read-only
		STATUS		mandatory
		DESCRIPTION	"PTR=trapGroupGroup.trapSource"
		::= { pnSys3TrapGenericVars 4 }

	pnSys3TrapItemType OBJECT IDENTIFIER
		::= { pnSys3Trap 2 }

	pnSys3SystemTrapItemType OBJECT IDENTIFIER
		::= { pnSys3TrapItemType 3 }

	systemTypeConnManager OBJECT-TYPE
		SYNTAX		INTEGER (1..3)
		ACCESS		read-only
		STATUS		mandatory
		DESCRIPTION	"PNM connection manager type
					  1:ppPnms
					  2:ppPnmt
					  3:generic"
		::= { pnSys3SystemTrapItemType 1 }

	systemTypeConnStyle OBJECT-TYPE
		SYNTAX		INTEGER (1..8)
		ACCESS		read-only
		STATUS		mandatory
		DESCRIPTION	"Connection type(Local/Remote/Opposite)
					Following values are used when pnPnmConnManager is Pnms(1) and Pnmt(2).
					 1:Local
					 2:Remote
					 3:Opposite
					
					Following values are used when pnPnmConnManager is generic(3).
					 1:No.1,
					 2:No.2,
					 3:No.3,
					 4:No.4,
					 5:No.5,
					 6:No.6,
					 7:No.7,
					 8:No.8"
		::= { pnSys3SystemTrapItemType 2 }

	systemTypeIpAddress OBJECT-TYPE
		SYNTAX		IpAddress
		ACCESS		read-only
		STATUS		mandatory
		DESCRIPTION	"source IP Address"
		::= { pnSys3SystemTrapItemType 3 }

	systemTypeTransferFilename OBJECT-TYPE
		SYNTAX		DisplayString (SIZE (0..32))
		ACCESS		read-only
		STATUS		mandatory
		DESCRIPTION	"File Transfer filename
					 This doesn't include the file path information.
					
					This value is used by CTRL program, ODU program, MODEM program and config files."
		::= { pnSys3SystemTrapItemType 4 }

	systemTypeTransferProgVer OBJECT-TYPE
		SYNTAX		DisplayString (SIZE (0..16))
		ACCESS		read-only
		STATUS		mandatory
		DESCRIPTION	"File Transfer program version
					
					*) This value is used for CTRL Program.
					*) This value is set when Download status is completed."
		::= { pnSys3SystemTrapItemType 5 }

	pnSys3TrapItemVar OBJECT IDENTIFIER
		::= { pnSys3Trap 3 }

	pnSys3FilterTrapItemVar OBJECT IDENTIFIER
		::= { pnSys3TrapItemVar 6 }

	filterItemPnSys3SeverityMask OBJECT-TYPE
		SYNTAX		INTEGER (0..3)
		ACCESS		read-only
		STATUS		mandatory
		DESCRIPTION	"Filter Mask for Sevirity for connected NMS.
					Specify the following bit.
					  Bit 0 = clear (0 = not mask, 1 = mask)
					  Bit 1 = minor
					  Bit 2 = major
					  Bit 3 = critical
					
					  'not mask(0)'  means that equipmnet notify TRAP.
					  'mask(1)' means that equipment doesn't notify TRAP.
					
					for example,
					  minor alarm is mask when this value is 0010b.
					  ('b' means binary number. '0010b' means '2')"
		::= { pnSys3FilterTrapItemVar 1 }

	filterItemPnSys3TrapKindsMask OBJECT-TYPE
		SYNTAX		INTEGER (0..7)
		ACCESS		read-only
		STATUS		mandatory
		DESCRIPTION	"Filter Mask for kinds for connected NMS.
					Specify the following bit.
					  Bit 0 = Total Summary Alarm Trap (0 = not mask, 1 = mask)
					  Bit 1 = Partial Summary Alarm Trap
					  Bit 2 = Alarm Trap
					  Bit 3 = Event Trap
					  Bit 4 = Status Trap
					  Bit 5 = Filter Trap
					  Bit 6 = Config Trap
					  Bit 7 = System Trap
					
					  'not mask(0)'  means that equipmnet notify TRAP.
					  'mask(1)' means that equipment doesn't notify TRAP.
					
					for example,
					  event alarm is mask when this value is 00001000b.
					  ('b' means binary number. '00001000' means '8')"
		::= { pnSys3FilterTrapItemVar 2 }

	pnSys3ConfigTrapItemVar OBJECT IDENTIFIER
		::= { pnSys3TrapItemVar 7 }

	configItemPnSys3NEName OBJECT-TYPE
		SYNTAX		DisplayString (SIZE (0..32))
		ACCESS		read-only
		STATUS		mandatory
		DESCRIPTION	"NE Name"
		::= { pnSys3ConfigTrapItemVar 1 }

	configItemPnSys3AreaName OBJECT-TYPE
		SYNTAX		DisplayString (SIZE (0..32))
		ACCESS		read-only
		STATUS		mandatory
		DESCRIPTION	"Area Name"
		::= { pnSys3ConfigTrapItemVar 2 }

	configItemPnSys3Memo OBJECT-TYPE
		SYNTAX		DisplayString (SIZE (0..100))
		ACCESS		read-only
		STATUS		mandatory
		DESCRIPTION	"Memo"
		::= { pnSys3ConfigTrapItemVar 3 }

	configItemPnSys3AuxInItemName OBJECT-TYPE
		SYNTAX		DisplayString (SIZE (0..32))
		ACCESS		read-only
		STATUS		mandatory
		DESCRIPTION	"AUX Input name."
		::= { pnSys3ConfigTrapItemVar 4 }

	configItemPnSys3AuxInItemType OBJECT-TYPE
		SYNTAX		INTEGER (0..3)
		ACCESS		read-only
		STATUS		mandatory
		DESCRIPTION	"Configuration for AUX Input.
					  0:Invalid
					  1:Alarm In Open,
					  2:Alarm In Close,
					  3:Status"
		::= { pnSys3ConfigTrapItemVar 5 }

	configItemPnSys3AuxInOpenState OBJECT-TYPE
		SYNTAX		DisplayString (SIZE (0..32))
		ACCESS		read-only
		STATUS		mandatory
		DESCRIPTION	"Name when AUX Input is open status"
		::= { pnSys3ConfigTrapItemVar 6 }

	configItemPnSys3AuxInCloseState OBJECT-TYPE
		SYNTAX		DisplayString (SIZE (0..32))
		ACCESS		read-only
		STATUS		mandatory
		DESCRIPTION	"Name when AUX Input is close status"
		::= { pnSys3ConfigTrapItemVar 7 }

	configItemPnSys3AuxInSeverity OBJECT-TYPE
		SYNTAX		SeverityValue
		ACCESS		read-only
		STATUS		mandatory
		DESCRIPTION	"Sevirity when AUX Input is alarm."
		::= { pnSys3ConfigTrapItemVar 8 }

	configItemPnSys3AuxInAlarmType OBJECT-TYPE
		SYNTAX		AlarmTypeValue
		ACCESS		read-only
		STATUS		mandatory
		DESCRIPTION	"Alarm Type when AUX Input is alarm."
		::= { pnSys3ConfigTrapItemVar 9 }

	configItemPnSys3AuxInProbableCause OBJECT-TYPE
		SYNTAX		ProbableCauseValue
		ACCESS		read-only
		STATUS		mandatory
		DESCRIPTION	"ProbableCause when AUX Input is alarm."
		::= { pnSys3ConfigTrapItemVar 10 }

	configItemPnSys3AuxOutItemName OBJECT-TYPE
		SYNTAX		DisplayString (SIZE (0..32))
		ACCESS		read-only
		STATUS		mandatory
		DESCRIPTION	"AUX Input name."
		::= { pnSys3ConfigTrapItemVar 11 }

	configItemPnSys3AuxOutOpenState OBJECT-TYPE
		SYNTAX		DisplayString (SIZE (0..32))
		ACCESS		read-only
		STATUS		mandatory
		DESCRIPTION	"Name when AUX Output is open status"
		::= { pnSys3ConfigTrapItemVar 12 }

	configItemPnSys3AuxOutCloseState OBJECT-TYPE
		SYNTAX		DisplayString (SIZE (0..32))
		ACCESS		read-only
		STATUS		mandatory
		DESCRIPTION	"Name when AUX Output is close status"
		::= { pnSys3ConfigTrapItemVar 13 }

	configItemPnSys3NmsName OBJECT-TYPE
		SYNTAX		DisplayString (SIZE (0..32))
		ACCESS		read-only
		STATUS		mandatory
		DESCRIPTION	"Nms Name"
		::= { pnSys3ConfigTrapItemVar 14 }

	configItemPnSys3NmtName OBJECT-TYPE
		SYNTAX		DisplayString (SIZE (0..32))
		ACCESS		read-only
		STATUS		mandatory
		DESCRIPTION	"Nmt Name"
		::= { pnSys3ConfigTrapItemVar 15 }

	configItemPnSys3SysDescr OBJECT-TYPE
		SYNTAX		DisplayString (SIZE (0..128))
		ACCESS		read-only
		STATUS		mandatory
		DESCRIPTION	"System Description :same as sysDescr(MIB-2)"
		::= { pnSys3ConfigTrapItemVar 16 }

	configItemPnSys3SysContact OBJECT-TYPE
		SYNTAX		DisplayString (SIZE (0..128))
		ACCESS		read-only
		STATUS		mandatory
		DESCRIPTION	"System Contact :same as sysContact(MIB-2)"
		::= { pnSys3ConfigTrapItemVar 17 }

	configItemPnSys3SysName OBJECT-TYPE
		SYNTAX		DisplayString (SIZE (0..128))
		ACCESS		read-only
		STATUS		mandatory
		DESCRIPTION	"System Name :same as sysName(MIB-2)"
		::= { pnSys3ConfigTrapItemVar 18 }

	configItemPnSys3SysLocation OBJECT-TYPE
		SYNTAX		DisplayString (SIZE (0..128))
		ACCESS		read-only
		STATUS		mandatory
		DESCRIPTION	"System Location :same as sysLocation(MIB-2)"
		::= { pnSys3ConfigTrapItemVar 19 }

	pnSys3SystemTrapItemVar OBJECT IDENTIFIER
		::= { pnSys3TrapItemVar 8 }

	systemItemPnSys3PnmConnState OBJECT-TYPE
		SYNTAX		INTEGER (0..1)
		ACCESS		read-only
		STATUS		mandatory
		DESCRIPTION	"PNM connection state
					  0:disconnect,
					  1:connect"
		::= { pnSys3SystemTrapItemVar 1 }

	systemItemPnSys3ProgramCpuReset OBJECT-TYPE
		SYNTAX		INTEGER
		ACCESS		read-only
		STATUS		mandatory
		DESCRIPTION	"Not Used."
		::= { pnSys3SystemTrapItemVar 2 }

	systemItemPnSys3ProgramDllStatus OBJECT-TYPE
		SYNTAX		INTEGER (0..4)
		ACCESS		read-only
		STATUS		mandatory
		DESCRIPTION	"Program Download Status
					  0:Invalid,
					  1:completed,
					  2:failed,
					  3:executing,
					  4:suspending
					
					*) This status is used whne pnSysOpProgramSysModule is ctrl(1).
					  (Equipment doesn't send the trap and write log.)
					*) This status change when PNMx control the download and SMU notify the status change.
					*) (1)Correct running.
					   (Start Download) -> 3:executing -> 1:completed
					  (2)Cancel download(set  pnSysOpProgramDllCtrl suspendDownload(2))
					   (Start Download) -> 3:executing -> 4:suspending -> 2:failed.
					  (3)Observed the incorrect.
					   (Start Download) -> 3:executing -> 2:failed.
					*) If this status is failed, Download another file is capable.
					*) If this status is executing, Download another file isn't capable.
				    "
		::= { pnSys3SystemTrapItemVar 3 }

	systemItemPnSys3NeighborIPAddr OBJECT-TYPE
		SYNTAX		OCTET STRING (SIZE (252))
		ACCESS		read-only
		STATUS		mandatory
		DESCRIPTION	"IP Address and NE Type Infromation
					 It used 5byte for 1 Equipment.
					  4byte: IP Address
					  1byte: Equipment Type(now not used)
					
					  This value include under 51 equipments.
					
					For example,
					  IP address of Neighbor Equipments are 172.18.0.1 and 172.18.0.2.
					
					  This value is following.
					    'AC 12 00 01 00 AC 12 00 02 00'"
		::= { pnSys3SystemTrapItemVar 4 }

	systemItemPnSys3ProgramDllProgress OBJECT-TYPE
		SYNTAX		INTEGER
		ACCESS		read-only
		STATUS		mandatory
		DESCRIPTION	"Program Download Progress
					transferred data SIZE(bytes)
					
					*) This status is invalid when pnSysOpProgramSysModule is ctrl(1). "
		::= { pnSys3SystemTrapItemVar 5 }

	systemItemPnSys3UpdateResult OBJECT-TYPE
		SYNTAX		DisplayString (SIZE(0..128))
		ACCESS		read-only
		STATUS		mandatory
		DESCRIPTION	""
		::= { pnSys3SystemTrapItemVar 6 }

	systemItemPnSys3PnmConnForcedReply OBJECT-TYPE
		SYNTAX		Counter
		ACCESS		read-only
		STATUS		mandatory
		DESCRIPTION	"Forced to Reply"
		::= { pnSys3SystemTrapItemVar 7 }

	systemItemPnSys3OppositeIpAddress OBJECT-TYPE
		SYNTAX		IpAddress
		ACCESS		read-only
		STATUS		mandatory
		DESCRIPTION	"IP address of the destination
					 This value is same as pnSysOppositeIpAddress.1."
		::= { pnSys3SystemTrapItemVar 8 }

	systemItemPnSys3ProgramCpuResetDetail OBJECT-TYPE
		SYNTAX		INTEGER (1..2)
		ACCESS		read-only
		STATUS		mandatory
		DESCRIPTION	"CPU reset control
					  1:revert reset,
					  2:normal reset( without revert )"
		::= { pnSys3SystemTrapItemVar 9 }

	systemItemPnSys3UpdateResultDetail OBJECT-TYPE
		SYNTAX		DisplayString (SIZE (0..128))
		ACCESS		read-only
		STATUS		mandatory
		DESCRIPTION	"File Update Result( for Detail Trap )
					 If update is OK, '<file name> OK'.
					 If update is NG, '<file name> NG'."
		::= { pnSys3SystemTrapItemVar 10 }

	systemItemPnSys3TransferStatus OBJECT-TYPE
		SYNTAX		INTEGER (1..3)
		ACCESS		read-only
		STATUS		mandatory
		DESCRIPTION	"File Transfer Status
					  1:RECEIVING,
					  2:COMPLETED,
					  3:FAILED
					
					This status shows downloading config files.
					This status change 2:COMPLETED,when tftp process is finished."
		::= { pnSys3SystemTrapItemVar 11 }

	systemItemPnSys3SetPrimaryIpAddress OBJECT-TYPE
		SYNTAX		IpAddress
		ACCESS		read-only
		STATUS		mandatory
		DESCRIPTION	"PRIMARY IP ADDRESS"
		::= { pnSys3SystemTrapItemVar 12 }

	systemItemPnSys3SetSubnetMask OBJECT-TYPE
		SYNTAX		OCTET STRING (SIZE (4))
		ACCESS		read-only
		STATUS		mandatory
		DESCRIPTION	"Subnetmask for configuration."
		::= { pnSys3SystemTrapItemVar 13 }

	systemItemPnSys3SetDefaultGateway OBJECT-TYPE
		SYNTAX		IpAddress
		ACCESS		read-only
		STATUS		mandatory
		DESCRIPTION	"Default Gateway for configuration."
		::= { pnSys3SystemTrapItemVar 14 }

	systemItemPnSys3ProgramCpuResetBank OBJECT-TYPE
		SYNTAX		INTEGER (1..2)
		ACCESS		read-only
		STATUS		mandatory
		DESCRIPTION	"CPU reset control( specify F-ROM BANK )
				  1:BANK0,
				  2:BANK1"
		::= { pnSys3SystemTrapItemVar 15 }

	configTrapPnSys3NEName	TRAP-TYPE
		ENTERPRISE	system3
		VARIABLES	{
					  sys3TrapSequenceNumber,
					  sys3TrapDate,
					  sys3TrapTime,
					  sys3TrapSource,
					  configItemPnSys3NEName
					}
		::= 701

	configTrapPnSys3AuxInItemName	TRAP-TYPE
		ENTERPRISE	system3
		VARIABLES	{
					  sys3TrapSequenceNumber,
					  sys3TrapDate,
					  sys3TrapTime,
					  sys3TrapSource,
					  configItemPnSys3AuxInItemName
					}
		::= 704

	configTrapPnSys3AuxInItemType	TRAP-TYPE
		ENTERPRISE	system3
		VARIABLES	{
					  sys3TrapSequenceNumber,
					  sys3TrapDate,
					  sys3TrapTime,
					  sys3TrapSource,
					  configItemPnSys3AuxInItemType
					}
		::= 705

	configTrapPnSys3AuxInOpenState	TRAP-TYPE
		ENTERPRISE	system3
		VARIABLES	{
					  sys3TrapSequenceNumber,
					  sys3TrapDate,
					  sys3TrapTime,
					  sys3TrapSource,
					  configItemPnSys3AuxInOpenState
					}
		::= 706

	configTrapPnSys3AuxInCloseState	TRAP-TYPE
		ENTERPRISE	system3
		VARIABLES	{
					  sys3TrapSequenceNumber,
					  sys3TrapDate,
					  sys3TrapTime,
					  sys3TrapSource,
					  configItemPnSys3AuxInCloseState
					}
		::= 707

	configTrapPnSys3AuxInSeverity	TRAP-TYPE
		ENTERPRISE	system3
		VARIABLES	{
					  sys3TrapSequenceNumber,
					  sys3TrapDate,
					  sys3TrapTime,
					  sys3TrapSource,
					  configItemPnSys3AuxInSeverity
					}
		::= 708

	configTrapPnSys3AuxInAlarmType	TRAP-TYPE
		ENTERPRISE	system3
		VARIABLES	{
					  sys3TrapSequenceNumber,
					  sys3TrapDate,
					  sys3TrapTime,
					  sys3TrapSource,
					  configItemPnSys3AuxInAlarmType
					}
		::= 709

	configTrapPnSys3AuxInProbableCause	TRAP-TYPE
		ENTERPRISE	system3
		VARIABLES	{
					  sys3TrapSequenceNumber,
					  sys3TrapDate,
					  sys3TrapTime,
					  sys3TrapSource,
					  configItemPnSys3AuxInProbableCause
					}
		::= 710

	configTrapPnSys3AuxOutItemName	TRAP-TYPE
		ENTERPRISE	system3
		VARIABLES	{
					  sys3TrapSequenceNumber,
					  sys3TrapDate,
					  sys3TrapTime,
					  sys3TrapSource,
					  configItemPnSys3AuxOutItemName
					}
		::= 711

	configTrapPnSys3AuxOutOpenState	TRAP-TYPE
		ENTERPRISE	system3
		VARIABLES	{
					  sys3TrapSequenceNumber,
					  sys3TrapDate,
					  sys3TrapTime,
					  sys3TrapSource,
					  configItemPnSys3AuxOutOpenState
					}
		::= 712

	configTrapPnSys3AuxOutCloseState	TRAP-TYPE
		ENTERPRISE	system3
		VARIABLES	{
					  sys3TrapSequenceNumber,
					  sys3TrapDate,
					  sys3TrapTime,
					  sys3TrapSource,
					  configItemPnSys3AuxOutCloseState
					}
		::= 713

	systemTrapPnSys3PnmConnState	TRAP-TYPE
		ENTERPRISE	system3
		VARIABLES	{
					  sys3TrapSequenceNumber,
					  sys3TrapDate,
					  sys3TrapTime,
					  sys3TrapSource,
					  systemItemPnSys3PnmConnState
					}
		::= 801

	systemTrapPnSys3NeighborIPAddr	TRAP-TYPE
		ENTERPRISE	system3
		VARIABLES	{
					  sys3TrapSequenceNumber,
					  sys3TrapDate,
					  sys3TrapTime,
					  sys3TrapSource,
					  systemItemPnSys3NeighborIPAddr
					}
		::= 804


	systemTrapPnSys3OppositeIpAddress	TRAP-TYPE
		ENTERPRISE	system3
		VARIABLES	{
					  sys3TrapSequenceNumber,
					  sys3TrapDate,
					  sys3TrapTime,
					  sys3TrapSource,
					  systemItemPnSys3OppositeIpAddress
					}
		::= 808

	systemTrapPnSys3ProgramCpuResetDetail	TRAP-TYPE
		ENTERPRISE	system3
		VARIABLES	{
					  sys3TrapSequenceNumber,
					  sys3TrapDate,
					  sys3TrapTime,
					  sys3TrapSource,
					  systemItemPnSys3ProgramCpuResetDetail,
					  systemTypeConnManager,
					  systemTypeConnStyle,
					  systemTypeIpAddress
					}
		::= 809

	systemTrapPnSys3SetPrimaryIpAddress	TRAP-TYPE
		ENTERPRISE	system3
		VARIABLES	{
					  sys3TrapSequenceNumber,
					  sys3TrapDate,
					  sys3TrapTime,
					  sys3TrapSource,
					  systemItemPnSys3SetPrimaryIpAddress,
					  systemTypeConnManager,
					  systemTypeConnStyle,
					  systemTypeIpAddress,
					  systemTypeTransferFilename,
					  systemTypeTransferProgVer
					}
		::= 812

	systemTrapPnSys3ProgramCpuResetBank	TRAP-TYPE
		ENTERPRISE	system3
		VARIABLES	{
					  sys3TrapSequenceNumber,
					  sys3TrapDate,
					  sys3TrapTime,
					  sys3TrapSource,
					  systemItemPnSys3ProgramCpuResetBank,
					  systemTypeConnManager,
					  systemTypeConnStyle,
					  systemTypeIpAddress
					}
		::= 815


-----------------------------------------------
-- pasoNeoSTD Group Definitions
-----------------------------------------------

	summaryInfoGroup OBJECT IDENTIFIER
		::= { pasoNeoSTD 1 }

	trapGroup OBJECT IDENTIFIER
		::= { pasoNeoSTD 2 }

	alarmStatusGroup OBJECT IDENTIFIER
		::= { pasoNeoSTD 3 }

	equipmentSetUpGroup OBJECT IDENTIFIER
		::= { pasoNeoSTD 4 }

	provisioningGroup OBJECT IDENTIFIER
		::= { pasoNeoSTD 5 }

	maintenanceGroup OBJECT IDENTIFIER
		::= { pasoNeoSTD 6 }

	inventoryGroup OBJECT IDENTIFIER
		::= { pasoNeoSTD 7 }

	meteringGroup OBJECT IDENTIFIER
		::= { pasoNeoSTD 8 }

	pmonGroup OBJECT IDENTIFIER
		::= { pasoNeoSTD 9 }

	pmonTxRxLevGroup OBJECT IDENTIFIER
		::= { pasoNeoSTD 10 }

	rmonGroup OBJECT IDENTIFIER
		::= { pasoNeoSTD 11 }

-----------------------------------------------
-- summaryInfoGroup Group Definitions
-----------------------------------------------

	summaryCommonInfo OBJECT IDENTIFIER
		::= { summaryInfoGroup 1 }

	totalSummary OBJECT-TYPE
		SYNTAX		SeverityValue
		ACCESS		read-only
		STATUS		mandatory
		DESCRIPTION	"Total Summary
					TRAP=totalSummaryTrap"
		::= { summaryCommonInfo 1 }

	ctrlSummary OBJECT-TYPE
		SYNTAX		SeverityValue
		ACCESS		read-only
		STATUS		mandatory
		DESCRIPTION	"CTRL Summary
					TRAP=partialSummaryTrapCTRL"
		::= { summaryCommonInfo 2 }

	auxIOSummary OBJECT-TYPE
		SYNTAX		SeverityValue
		ACCESS		read-only
		STATUS		mandatory
		DESCRIPTION	"AUX IO Summary
					TRAP=partialSummaryTrapAux"
		::= { summaryCommonInfo 3 }

	linkPMONSummary OBJECT-TYPE
		SYNTAX		SeverityValue
		ACCESS		read-only
		STATUS		mandatory
		DESCRIPTION	"Link Pmon Summary
					TRAP=partialSummaryTrapLpm"
		::= { summaryCommonInfo 4 }

	intfc1Summary OBJECT-TYPE
		SYNTAX		SeverityValue
		ACCESS		read-only
		STATUS		mandatory
		DESCRIPTION	"INTFC1 Summary
					TRAP=partialSummaryTrapINTFC1"
		::= { summaryCommonInfo 5 }

	intfc2Summary OBJECT-TYPE
		SYNTAX		SeverityValue
		ACCESS		read-only
		STATUS		mandatory
		DESCRIPTION	"INTFC2 Summary
					TRAP=partialSummaryTrapINTFC2"
		::= { summaryCommonInfo 6 }

	summarySysInfoTable OBJECT-TYPE
		SYNTAX		SEQUENCE OF SummarySysInfoEntry
		ACCESS		not-accessible
		STATUS		mandatory
		DESCRIPTION	"Individual Summary"
		::= { summaryInfoGroup 2 }

	summarySysInfoEntry OBJECT-TYPE
		SYNTAX		SummarySysInfoEntry
		ACCESS		not-accessible
		STATUS		mandatory
		INDEX		{
						summarySysInfoIndex
					}
		::= { summarySysInfoTable 1 }

	SummarySysInfoEntry ::= SEQUENCE {
					  summarySysInfoIndex  INTEGER,
					  truSummary           SeverityValue,
					  modemSummary         SeverityValue
					}

	summarySysInfoIndex OBJECT-TYPE
		SYNTAX		INTEGER (1..2)
		ACCESS		read-only
		STATUS		mandatory
		DESCRIPTION	"No Index.
					 1:No. 1/DIR-A
					 2:No. 2/DIR-B
					
					*)No.2 is available for 1+1 system.
					*)DIR-A/B is available for 2-WAY system."
		::= { summarySysInfoEntry 1 }

	truSummary OBJECT-TYPE
		SYNTAX		SeverityValue
		ACCESS		read-only
		STATUS		mandatory
		DESCRIPTION	"TRU(ODU) Summary
					TRAP=partialSummaryTrapTRU"
		::= { summarySysInfoEntry 2 }

	modemSummary OBJECT-TYPE
		SYNTAX		SeverityValue
		ACCESS		read-only
		STATUS		mandatory
		DESCRIPTION	"MODEM Summary
					TRAP=partialSummaryTrapMODEM"
		::= { summarySysInfoEntry 3 }


-----------------------------------------------
-- trapGroup Group Definitions
-----------------------------------------------

	pnSTDTrapCommon OBJECT IDENTIFIER
		::= { trapGroup 1 }

	pnSTDTrapGenericVars OBJECT IDENTIFIER
		::= { pnSTDTrapCommon 1 }

	trapSequenceNumber OBJECT-TYPE
		SYNTAX		Counter
		ACCESS		read-only
		STATUS		mandatory
		DESCRIPTION	"Trap Sequence Number"
		::= { pnSTDTrapGenericVars 1 }

	trapDate OBJECT-TYPE
		SYNTAX		DisplayString (SIZE(16))
		ACCESS		read-only
		STATUS		mandatory
		DESCRIPTION	"Trap Generate Date
					 This value shows 'YYYY/MM/DD'.
					 YYYY means 4-digit year.
					 MM means 2-digit month.
					 DD means 2-digit day."
		::= { pnSTDTrapGenericVars 2 }

	trapTime OBJECT-TYPE
		SYNTAX		DisplayString(SIZE(16))
		ACCESS		read-only
		STATUS		mandatory
		DESCRIPTION	"Trap Generate Time
					 This value shows 'hh:mm:ss'.
					 hh means 2-digit hour.
					 mm means 2-digit minute.
					 ss means 2-digit second."
		::= { pnSTDTrapGenericVars 3 }

	trapSource OBJECT-TYPE
		SYNTAX		OBJECT IDENTIFIER
		ACCESS		read-only
		STATUS		mandatory
		DESCRIPTION	"TRAP Source"
		::= { pnSTDTrapGenericVars 4 }

	pnSTDTrapX733Vars OBJECT IDENTIFIER
		::= { pnSTDTrapCommon 2 }

	severity OBJECT-TYPE
		SYNTAX		SeverityValue
		ACCESS		read-only
		STATUS		mandatory
		DESCRIPTION	"Severity (CCITT Rec. X.733)"
		::= { pnSTDTrapX733Vars 1 }

	alarmType OBJECT-TYPE
		SYNTAX		AlarmTypeValue
		ACCESS		read-only
		STATUS		mandatory
		DESCRIPTION	"Alaem Type (CCITT Rec. X.733)"
		::= { pnSTDTrapX733Vars 2 }

	probableCause OBJECT-TYPE
		SYNTAX		ProbableCauseValue
		ACCESS		read-only
		STATUS		mandatory
		DESCRIPTION	"Probable Cause (CCITT Rec. X.733)"
		::= { pnSTDTrapX733Vars 3 }

	pnSTDTrapItemType OBJECT IDENTIFIER
		::= { trapGroup 2 }

	pnSTDStatusTrapItemType OBJECT IDENTIFIER
		::= { pnSTDTrapItemType 5 }

	statusTypeAux OBJECT-TYPE
		SYNTAX		INTEGER (0..3)
		ACCESS		read-only
		STATUS		mandatory
		DESCRIPTION	"Aux Status Type
					  0:Invalid,
					  1:Alarm In Open,
					  2:Alarm In Close,
					  3:Status"
		::= { pnSTDStatusTrapItemType 1 }

	statusTypeAis OBJECT-TYPE
		SYNTAX		INTEGER (0..2)
		ACCESS		read-only
		STATUS		mandatory
		DESCRIPTION	"AIS Status Type
					  0:Invalid,
					  1:Alarm Type,
					  2:Status Type"
		::= { pnSTDStatusTrapItemType 2 }

	pnSTDTrapItemVar OBJECT IDENTIFIER
		::= { trapGroup 3 }

	pnSTDTotalSummaryTrapItemVar OBJECT IDENTIFIER
		::= { pnSTDTrapItemVar 1 }

	totalSummaryItem OBJECT-TYPE
		SYNTAX		INTEGER
		ACCESS		read-only
		STATUS		mandatory
		DESCRIPTION	"Total Summary Item"
		::= { pnSTDTotalSummaryTrapItemVar 1 }

	pnSTDPartialSummaryTrapItemVar OBJECT IDENTIFIER
		::= { pnSTDTrapItemVar 2 }

	partialSummaryItemTRU OBJECT-TYPE
		SYNTAX		INTEGER
		ACCESS		read-only
		STATUS		mandatory
		DESCRIPTION	"TRU Summary Item"
		::= { pnSTDPartialSummaryTrapItemVar 1 }

	partialSummaryItemINTFC1 OBJECT-TYPE
		SYNTAX		INTEGER
		ACCESS		read-only
		STATUS		mandatory
		DESCRIPTION	"INTFC1 Item"
		::= { pnSTDPartialSummaryTrapItemVar 2 }

	partialSummaryItemCTRL OBJECT-TYPE
		SYNTAX		INTEGER
		ACCESS		read-only
		STATUS		mandatory
		DESCRIPTION	"CTRL Item"
		::= { pnSTDPartialSummaryTrapItemVar 3 }

	partialSummaryItemAux OBJECT-TYPE
		SYNTAX		INTEGER
		ACCESS		read-only
		STATUS		mandatory
		DESCRIPTION	"AUX Item"
		::= { pnSTDPartialSummaryTrapItemVar 4 }

	partialSummaryItemLpm OBJECT-TYPE
		SYNTAX		INTEGER
		ACCESS		read-only
		STATUS		mandatory
		DESCRIPTION	"Lpm Item"
		::= { pnSTDPartialSummaryTrapItemVar 5 }

	partialSummaryItemINTFC2 OBJECT-TYPE
		SYNTAX		INTEGER
		ACCESS		read-only
		STATUS		mandatory
		DESCRIPTION	"INTFC2 Item"
		::= { pnSTDPartialSummaryTrapItemVar 6 }

	partialSummaryItemMODEM OBJECT-TYPE
		SYNTAX		INTEGER
		ACCESS		read-only
		STATUS		mandatory
		DESCRIPTION	"MODEM Item"
		::= { pnSTDPartialSummaryTrapItemVar 7 }

	pnSTDAlarmTrapItemVar OBJECT IDENTIFIER
		::= { pnSTDTrapItemVar 3 }

	alarmItemPnSTDTxPowerAlarm OBJECT-TYPE
		SYNTAX		INTEGER (0..1)
		ACCESS		read-only
		STATUS		mandatory
		DESCRIPTION	"TX POWER
					Indicates the status of the transmitter in the ODU.
 					It is issued when the transmission level decreases 3 dB or more from the preset minimum ATPC level.
 					  0:Normal,
 					  1:Alarm
 					
					severity=clear(0),major(ELSE)
					alarmType=equipmentAlarm
					probableCause=transmitterFailure"
		::= { pnSTDAlarmTrapItemVar 1 }

	alarmItemPnSTDTxInputAlarm OBJECT-TYPE
		SYNTAX		INTEGER (0..1)
		ACCESS		read-only
		STATUS		mandatory
		DESCRIPTION	"TX INPUT
					Indicates the status of the ODU input signal from the IDU.
					It is issued when the input signal from the IDU is lost.
	 				  0:Normal,
	 				  1:Alarm
	 					 
					severity=clear(0),major(ELSE)
					alarmType=equipmentAlarm
					probableCause=transmitterFailure"
		::= { pnSTDAlarmTrapItemVar 2 }

	alarmItemPnSTDRxLevelAlarm OBJECT-TYPE
		SYNTAX		INTEGER (0..1)
		ACCESS		read-only
		STATUS		mandatory
		DESCRIPTION	"RX LEVEL
					Indicates the status of the received RF signal level of the ODU.
					It is issued when the RF signal drops below the RX threshold.
					  0:Normal,
					  1:Alarm
	
					severity=clear(0),major(ELSE)
					alarmType=communicationsAlarm
					probableCause=receiverFailure"
		::= { pnSTDAlarmTrapItemVar 3 }

	alarmItemPnSTDApcAlarm OBJECT-TYPE
		SYNTAX		INTEGER (0..1)
		ACCESS		read-only
		STATUS		mandatory
		DESCRIPTION	"APC
					Indicates the status of the synthesizer in the ODU.
					It is issued when an anomaly occurs in the synthesizer.
					  0:Normal,
	 				  1:Alarm
	 					  
					severity=clear(0),major(ELSE)
					alarmType=equipmentAlarm
					probableCause=equipmentMalfunction"
		::= { pnSTDAlarmTrapItemVar 4 }

	alarmItemPnSTDTRUCPUAlarm OBJECT-TYPE
		SYNTAX		INTEGER (0..1)
		ACCESS		read-only
		STATUS		mandatory
		DESCRIPTION	"ODU CPU/CABLE OPEN
					Indicates the status of the CPU in the ODU.
					It is issued when an anomaly occurs during CPU operation.
					  0:Normal,
					  1:Alarm
						
					severity=clear(0),major(ELSE)
					alarmType=communicationsAlarm
					probableCause=equipmentMalfunction"
		::= { pnSTDAlarmTrapItemVar 5 }

	alarmItemPnSTDModemAlarm OBJECT-TYPE
		SYNTAX		INTEGER (0..1)
		ACCESS		read-only
		STATUS		mandatory
		DESCRIPTION	"MODEM MODULE
					Indicates the status of the modulator-demodulator.
					This alarm is issued when an anomaly occurs in the modulator-demodulator.
					  0:Normal,
	 				  1:Alarm
						
					severity=clear(0),major(ELSE)
					alarmType=equipmentAlarm
					probableCause=equipmentMalfunction"
		::= { pnSTDAlarmTrapItemVar 6 }

	alarmItemPnSTDModemUneq OBJECT-TYPE
		SYNTAX		INTEGER (0..1)
		ACCESS		read-only
		STATUS		mandatory
		DESCRIPTION	"MODEM UNEQUIPPED
					Indicates whether a MODEM is properly mounted.
					If the MODEM contact is unplugged or if none is mounted (in accordance with the Equipment Setup),
					 this alarm is issued.
					  0:Normal,
	 				  1:Alarm
	 					  
					severity=clear(0),major(ELSE)
					alarmType=equipmentAlarm
					probableCause=equipmentMalfunction"
		::= { pnSTDAlarmTrapItemVar 7 }

	alarmItemPnSTDHighBERAlarm OBJECT-TYPE
		SYNTAX		INTEGER (0..1)
		ACCESS		read-only
		STATUS		mandatory
		DESCRIPTION	"HIGH BER
					Indicates severe quality deterioration status.
					If the signal deteriorates below the preset threshold level,
					 this alarm is issued and the RX-Hitless Switch is operated.
					The selectable threshold levels are 1E-3, 1E-4 and 1E-5.
					  0:Normal,
	 				  1:Alarm
	 					  
					severity=clear(0),major(ELSE)
					alarmType=qualityOfServiceAlarm
					probableCause=excessiveBER"
		::= { pnSTDAlarmTrapItemVar 8 }

	alarmItemPnSTDLowBERAlarm OBJECT-TYPE
		SYNTAX		INTEGER (0..1)
		ACCESS		read-only
		STATUS		mandatory
		DESCRIPTION	"LOW BER
					Indicates low to moderate quality deterioration status between radio sections.
					When the signal deteriorates below the present threshold value,
					 this alarm is issued and the RX-Hitless Switch is activated.
					  0:Normal,
	 				  1:Alarm
	 					  
					The selectable threshold values are: 1E-6, 1E-7, 1E-8 and 1E-9.
					severity=clear(0),minor(ELSE)
					alarmType=qualityOfServiceAlarm
					probableCause=degradedSignal"
		::= { pnSTDAlarmTrapItemVar 9 }

	alarmItemPnSTDModAlarm OBJECT-TYPE
		SYNTAX		INTEGER (0..1)
		ACCESS		read-only
		STATUS		mandatory
		DESCRIPTION	"MOD
					Indicates the operating status of the MOD.
					If any anomaly occurs in the modulator, this alarm is issued.
					  0:Normal,
	 				  1:Alarm
	 				  
					severity=clear(0),major(ELSE)
					alarmType=equipmentAlarm
					probableCause=transmitterFailure"
		::= { pnSTDAlarmTrapItemVar 10 }

	alarmItemPnSTDDemAlarm OBJECT-TYPE
		SYNTAX		INTEGER (0..1)
		ACCESS		read-only
		STATUS		mandatory
		DESCRIPTION	"DEM
					Indicates the operating status of the DEM.
					If any anomaly occurs in the demodulator, this alarm is issued.
					  0:Normal,
					  1:Alarm
						  
					severity=clear(0),major(ELSE)
					alarmType=communicationsAlarm
					probableCause=receiverFailure"
		::= { pnSTDAlarmTrapItemVar 11 }

	alarmItemPnSTDXIfLevelAlarm OBJECT-TYPE
		SYNTAX		INTEGER (0..1)
		ACCESS		read-only
		STATUS		mandatory
		DESCRIPTION	"XIF
					  0:Normal,
					  1:Alarm
						  
					severity=clear(0),major(ELSE)
					alarmType=communicationsAlarm
					probableCause=lossOfSignal"
		::= { pnSTDAlarmTrapItemVar 12 }

	alarmItemPnSTDXContAlarm OBJECT-TYPE
		SYNTAX		INTEGER (0..1)
		ACCESS		read-only
		STATUS		mandatory
		DESCRIPTION	"XCTRL
					  0:Normal,
	 				  1:Alarm
	 					  
					severity=clear(0),major(ELSE)
					alarmType=equipmentAlarm
					probableCause=equipmentMalfunction"
		::= { pnSTDAlarmTrapItemVar 13 }

	alarmItemPnSTDPSAlarm OBJECT-TYPE
		SYNTAX		INTEGER (0..1)
		ACCESS		read-only
		STATUS		mandatory
		DESCRIPTION	"POWER SUPPLY
					Indicates the operating status of the power supply.
					When there is an anomaly in the power supply, this alarm is issued.
					  0:Normal,
	 				  1:Alarm
	 					  
					severity=clear(0),major(ELSE)
					alarmType=equipmentAlarm
					probableCause=powerProblem"
		::= { pnSTDAlarmTrapItemVar 14 }

	alarmItemPnSTDIfCableShort OBJECT-TYPE
		SYNTAX		INTEGER (0..1)
		ACCESS		read-only
		STATUS		mandatory
		DESCRIPTION	"IF CABLE SHORT
					Indicates the status of IF cable between IDU and ODU.
					If a short circuit is caused between ODU and the IDU, this alarm is issued.
					  0:Normal,
	 				  1:Alarm
	 					  
					severity=clear(0),major(ELSE)
					alarmType=equipmentAlarm
					probableCause=equipmentMalfunction"
		::= { pnSTDAlarmTrapItemVar 15 }

	alarmItemPnSTDLof OBJECT-TYPE
		SYNTAX		INTEGER (0..1)
		ACCESS		read-only
		STATUS		mandatory
		DESCRIPTION	"LOF
					Indicates the frame synchronization status.
					If the synchronization with DMR is lost, this alarm is issued.
					  0:Normal,
					  1:Alarm
						  
					severity=clear(0),major(ELSE)
					alarmType=communicationsAlarm
					probableCause=lossOfFrame"
		::= { pnSTDAlarmTrapItemVar 16 }

	alarmItemPnSTDCableEQLAlarm OBJECT-TYPE
		SYNTAX		INTEGER (0..1)
		ACCESS		read-only
		STATUS		mandatory
		DESCRIPTION	"CABLE EQL
					Indicates the status of the IF cable equalizer.
					This alarm is issued when the equalizer function does not kick in.
					  0:Normal,
	 				  1:Alarm
	 					  
					severity=clear(0),major(ELSE)
					alarmType=equipmentAlarm
					probableCause=equipmentMalfunction"
		::= { pnSTDAlarmTrapItemVar 17 }

	alarmItemPnSTDXRefAlarm OBJECT-TYPE
		SYNTAX		INTEGER (0..1)
		ACCESS		read-only
		STATUS		mandatory
		DESCRIPTION	"XREF
					  0:Normal,
	 				  1:Alarm
	 					  
					severity=clear(0),minor(ELSE)
					alarmType=equipmentAlarm
					probableCause=equipmentMalfunction"
		::= { pnSTDAlarmTrapItemVar 18 }

	alarmItemPnSTDIntfcMAlarm OBJECT-TYPE
		SYNTAX		INTEGER (0..1)
		ACCESS		read-only
		STATUS		mandatory
		DESCRIPTION	"INTFC(1) MODULE
					Indicates the operating status of the MAIN INTFC.
					If any anomaly occurs in the MAIN INTFC, this alarm is issued.
					  0:Normal,
	 				  1:Alarm
	 					  
					severity=clear(0),major(ELSE)
					alarmType=equipmentAlarm
					probableCause=equipmentMalfunction"
		::= { pnSTDAlarmTrapItemVar 19 }

	alarmItemPnSTDIntfcMUneq OBJECT-TYPE
		SYNTAX		INTEGER (0..1)
		ACCESS		read-only
		STATUS		mandatory
		DESCRIPTION	"INTFC(1) UNEQUIPPED
					Indicates whether there is any Main Interface.
					If there is no INTFC (1), this alarm is issued.
					  0:Normal,
	 				  1:Alarm
	 					  
					severity=clear(0),major(ELSE)
					alarmType=equipmentAlarm
					probableCause=equipmentMalfunction"
		::= { pnSTDAlarmTrapItemVar 20 }

	alarmItemPnSTDInputLos OBJECT-TYPE
		SYNTAX		OCTET STRING (SIZE (6))
		ACCESS		read-only
		STATUS		mandatory
		DESCRIPTION	"INPUT LOS CHxx
					(xx : 01-48)
					  0:Normal,
					  1:Alarm
					
					 [Bit Description]
					  Bit0 = CH01 (0: Normal,1: Alarm)
					  Bit1 = CH02
					  Bit2 = CH03
					  ...
					  Bit46 = CH47
					  Bit47 = CH48
					severity=clear(0),major(ELSE)
					alarmType=communicationsAlarm
					probableCause=lossOfSignal"
		::= { pnSTDAlarmTrapItemVar 21 }

	alarmItemPnSTDLosMUXWork OBJECT-TYPE
		SYNTAX		INTEGER (0..1)
		ACCESS		read-only
		STATUS		mandatory
		DESCRIPTION	"STM-1(1) LOS(MUX)
					Indicates the input signal status of the STM-1 from MUX.
					If the input is disconnected this alarm is issued.
					  0:Normal,
					  1:Alarm
					  
					severity=clear(0),major(ELSE)
					alarmType=communicationsAlarm
					probableCause=lossOfSignal"
		::= { pnSTDAlarmTrapItemVar 23 }

	alarmItemPnSTDLosDMRWork OBJECT-TYPE
		SYNTAX		INTEGER (0..1)
		ACCESS		read-only
		STATUS		mandatory
		DESCRIPTION	"STM-1(1) LOS(DMR)
					  0:Normal,
					  1:Alarm
						  
					severity=clear(0),major(ELSE)
					alarmType=communicationsAlarm
					probableCause=lossOfSignal"
		::= { pnSTDAlarmTrapItemVar 24 }

	alarmItemPnSTDUsageError OBJECT-TYPE
		SYNTAX		OCTET STRING (SIZE (6))
		ACCESS		read-only
		STATUS		mandatory
		DESCRIPTION	"USAGE ERROR CHxx
					 (xx : 01-48)
					Indicates the status of the E1 signal interface.
					When E1 signal is applied to the input interface as long as it is set to 'Not Used',
					 this alarm is generated.
					This parameter is indicated only when CH Usage Error Report has been selected.
					*) CH Usage Error Report function must be enabled (set to 'report')
					 and CH USAGE is set as 'not used'.
					  0:Normal,
					  1:Alarm
					
					 [Bit Description]
					  Bit0 = CH01 (0: Normal,1: Alarm)
					  Bit1 = CH02
					  Bit2 = CH03
					  ...
					  Bit46 = CH47
					  Bit47 = CH48
					severity=clear(0),minor(ELSE)
					alarmType=operationalViolationAlarm
					probableCause=callSetUpFailure"
		::= { pnSTDAlarmTrapItemVar 25 }

	alarmItemPnSTDLink OBJECT-TYPE
		SYNTAX		INTEGER (0..1)
		ACCESS		read-only
		STATUS		mandatory
		DESCRIPTION	"LAN LINK PORTx
					(x : 1-4)
					Indicates the LAN Link Port status: an alarm occurs when the link fails for the respective ports.
					*) The respective Port Usage must be set at 'used'.
					  0:Normal,
					  1:Alarm
						  
					severity=clear(0),major(ELSE)
					alarmType=communicationsAlarm
					probableCause=lANerror"
			::= { pnSTDAlarmTrapItemVar 26 }

	alarmItemPnSTDE-BERMUXWork OBJECT-TYPE
		SYNTAX		INTEGER (0..1)
		ACCESS		read-only
		STATUS		mandatory
		DESCRIPTION	"STM-1(1) E-BER(MUX)
					Indicates Excessive-BER of the input STM-1 signal from MUX.
					If the signal deteriorates below the present threshold level,
					 this alarm is issued.
					The settable threshold values are 1E-3, 1E-4 and 1E-5.
					  0:Normal,
					  1:Alarm
					  
					severity=clear(0),major(ELSE)
					alarmType=qualityOfServiceAlarm
					probableCause=excessiveBER"
		::= { pnSTDAlarmTrapItemVar 28 }

	alarmItemPnSTDE-BERDMRWork OBJECT-TYPE
		SYNTAX		INTEGER (0..1)
		ACCESS		read-only
		STATUS		mandatory
		DESCRIPTION	"STM-1(1) E-BER(DMR)
					Indicates Excessive-BER of the input STM-1 signal from the DMR unit.
					If the signal deteriorates below the present threshold level, this alarm is issued.
					The settable threshold values are 1E-6, 1E-7, 1E-8 and IE-9.
					  0:Normal,
					  1:Alarm
					
					severity=clear(0),major(ELSE)
					alarmType=qualityOfServiceAlarm
					probableCause=excessiveBER"
		::= { pnSTDAlarmTrapItemVar 29 }

	alarmItemPnSTDSDMUXWork OBJECT-TYPE
		SYNTAX		INTEGER (0..1)
		ACCESS		read-only
		STATUS		mandatory
		DESCRIPTION	"STM-1(1) SD(MUX)
					Indicates the input signal status of the STM-1 from MUX.
					If the signal deteriorates below the preset threshold level, the alarm is issued.
					The selectable threshold values are: 1E-6, IE-7, 1E-8 and 1E-9.
					  0:Normal,
					  1:Alarm
					
					severity=clear(0),minor(ELSE)
					alarmType=qualityOfServiceAlarm
					probableCause=degradedSignal"
		::= { pnSTDAlarmTrapItemVar 30 }

	alarmItemPnSTDSDDMRWork OBJECT-TYPE
		SYNTAX		INTEGER (0..1)
		ACCESS		read-only
		STATUS		mandatory
		DESCRIPTION	"STM-1(1) SD(DMR)
					Indicates the input signal status of the STM-1 from DMR.
					If the signal deteriorates beyond the preset threshold level, this alarm is issued.
					The selectable BER threshold values are 1E-3, 1E-4 and 1E-5.
					  0:Normal,
					  1:Alarm
					  
					severity=clear(0),minor(ELSE)
					alarmType=qualityOfServiceAlarm
					probableCause=degradedSignal"
		::= { pnSTDAlarmTrapItemVar 31 }

	alarmItemPnSTDIntfcSAlarm OBJECT-TYPE
		SYNTAX		INTEGER (0..1)
		ACCESS		read-only
		STATUS		mandatory
		DESCRIPTION	"INTFC(2) MODULE
					Indicates the operating status of the SUB INTFC.
					If any anomaly occurs in the SUB INTFC, this alarm is issued.

					  0:Normal,
					  1:Alarm
						  
					severity=clear(0),major(ELSE)
					alarmType=equipmentAlarm
					probableCause=equipmentMalfunction"
		::= { pnSTDAlarmTrapItemVar 32 }

	alarmItemPnSTDIntfcSUneq OBJECT-TYPE
		SYNTAX		INTEGER (0..1)
		ACCESS		read-only
		STATUS		mandatory
		DESCRIPTION	"INTFC(2) UNEQUIPPED
					Indicates whether there is any SUB INTFC.
					If there is no INTFC (2), this alarm is issued.

					  0:Normal,
					  1:Alarm
						  
					severity=clear(0),major(ELSE)
					alarmType=equipmentAlarm
					probableCause=equipmentMalfunction"
		::= { pnSTDAlarmTrapItemVar 33 }

	alarmItemPnSTDLosMUXProt OBJECT-TYPE
		SYNTAX		INTEGER (0..1)
		ACCESS		read-only
		STATUS		mandatory
		DESCRIPTION	"STM-1(2) LOS(MUX)
					Indicates the input signal status of the STM-1 from MUX.
					If the input is disconnected this alarm is issued.
					*) Only when APS Function is available.
					  0:Normal,
					  1:Alarm
						  
					severity=clear(0),major(ELSE)
					alarmType=communicationsAlarm
					probableCause=lossOfSignal"
		::= { pnSTDAlarmTrapItemVar 34 }

	alarmItemPnSTDE-BERMUXProt OBJECT-TYPE
		SYNTAX		INTEGER (0..1)
		ACCESS		read-only
		STATUS		mandatory
		DESCRIPTION	"STM-1(2) E-BER(MUX)
					Indicates Excessive-BER of the input STM-1 signal from MUX.
					If the signal deteriorates below the present threshold level, this alarm is issued.
					The settable threshold values are 1E-3, 1E-4 and 1E-5.
					*) Only when APS Function is available.
					  0:Normal,
					  1:Alarm
						  
					severity=clear(0),major(ELSE)
					alarmType=qualityOfServiceAlarm
					probableCause=excessiveBER"
		::= { pnSTDAlarmTrapItemVar 35 }

	alarmItemPnSTDE-BERDMRProt OBJECT-TYPE
		SYNTAX		INTEGER (0..1)
		ACCESS		read-only
		STATUS		mandatory
		DESCRIPTION	"STM-1(2) E-BER(DMR)
					Indicates Excessive-BER of the input STM-1 signal from the DMR unit.
					If the signal deteriorates below the present threshold level, this alarm is issued.
					The settable threshold values are 1E-6, 1E-7, 1E-8 and IE-9.
					*) Only when APS Function is available.
					  0:Normal,
					  1:Alarm
						  
					severity=clear(0),major(ELSE)
					alarmType=qualityOfServiceAlarm
					probableCause=excessiveBER"
		::= { pnSTDAlarmTrapItemVar 36 }

	alarmItemPnSTDSDMUXProt OBJECT-TYPE
		SYNTAX		INTEGER (0..1)
		ACCESS		read-only
		STATUS		mandatory
		DESCRIPTION	"STM-1(2) SD(MUX)
					Indicates the input signal status of the STM-1 from MUX.
					If the signal deteriorates below the preset threshold level, the alarm is issued.
					The selectable threshold values are: 1E-6, IE-7, 1E-8 and 1E-9.
					*) Only when APS Function is available.
					  0:Normal,
					  1:Alarm
						  
					severity=clear(0),minor(ELSE)
					alarmType=qualityOfServiceAlarm
					probableCause=degradedSignal"
		::= { pnSTDAlarmTrapItemVar 37 }

	alarmItemPnSTDSDDMRProt OBJECT-TYPE
		SYNTAX		INTEGER (0..1)
		ACCESS		read-only
		STATUS		mandatory
		DESCRIPTION	"STM-1(2) SD(DMR)
					Indicates the input signal status of the STM-1 from DMR.
					If the signal deteriorates beyond the preset threshold level, this alarm is issued.
					The selectable BER threshold values are 1E-3, 1E-4 and 1E-5.
					*) Only when APS Function is available.
					  0:Normal,
					  1:Alarm
						  
					severity=clear(0),minor(ELSE)
					alarmType=qualityOfServiceAlarm
					probableCause=degradedSignal"
		::= { pnSTDAlarmTrapItemVar 38 }

	alarmItemPnSTDWSLos OBJECT-TYPE
		SYNTAX		INTEGER (0..1)
		ACCESS		read-only
		STATUS		mandatory
		DESCRIPTION	"WS INPUT LOS
					  0:Normal,
					  1:Alarm
						  
					severity=clear(0),minor(ELSE)
					alarmType=communicationsAlarm
					probableCause=lossOfSignal"
		::= { pnSTDAlarmTrapItemVar 39 }

	alarmItemPnSTDSCLanLink OBJECT-TYPE
		SYNTAX		INTEGER (0..1)
		ACCESS		read-only
		STATUS		mandatory
		DESCRIPTION	"INTFC(2) LAN LINK PORTx
					(x : 1-2)
					  0:Normal,
					  1:Alarm
						  
					severity=clear(0),minor(ELSE)
					alarmType=communicationsAlarm
					probableCause=lANerror"
		::= { pnSTDAlarmTrapItemVar 40 }

	alarmItemPnSTDCTRLAlarm OBJECT-TYPE
		SYNTAX		INTEGER (0..1)
		ACCESS		read-only
		STATUS		mandatory
		DESCRIPTION	"CTRL MODULE
					  0:Normal,
					  1:Alarm
						  
					severity=clear(0),major(ELSE)
					alarmType=equipmentAlarm
					probableCause=equipmentMalfunction"
		::= { pnSTDAlarmTrapItemVar 42 }

	alarmItemPnSTDAPSSWFail OBJECT-TYPE
		SYNTAX		INTEGER (0..1)
		ACCESS		read-only
		STATUS		mandatory
		DESCRIPTION	"APS SW FAIL
					  0:Normal,
					  1:Alarm
						  
					severity=clear(0),major(ELSE)
					alarmType=equipmentAlarm
					probableCause=equipmentMalfunction"
		::= { pnSTDAlarmTrapItemVar 44 }

	alarmItemPnSTDTcn15minTotalOFS OBJECT-TYPE
		SYNTAX		INTEGER (0..1)
		ACCESS		read-only
		STATUS		mandatory
		DESCRIPTION	"TCN-OFS-15min TOTAL
					TCN-OFS-15min(DIR-A) TOTAL
					  0:Normal,
					  1:Alarm
					  
					severity=clear(0),minor(ELSE)
					alarmType=qualityOfServiceAlarm
					probableCause=thresholdCrossed"
		::= { pnSTDAlarmTrapItemVar 46 }

	alarmItemPnSTDTcn15minTotalUAS OBJECT-TYPE
		SYNTAX		INTEGER (0..1)
		ACCESS		read-only
		STATUS		mandatory
		DESCRIPTION	"TCN-UAS-15min TOTAL
					TCN-UAS-15min(DIR-A) TOTAL
					  0:Normal,
					  1:Alarm
						  
					severity=clear(0),minor(ELSE)
					alarmType=qualityOfServiceAlarm
					probableCause=thresholdCrossed"
		::= { pnSTDAlarmTrapItemVar 47 }

	alarmItemPnSTDTcn15minTotalES OBJECT-TYPE
		SYNTAX		INTEGER (0..1)
		ACCESS		read-only
		STATUS		mandatory
		DESCRIPTION	"TCN-ES-15min TOTAL
					TCN-ES-15min(DIR-A) TOTAL
					  0:Normal,
					  1:Alarm
						  
					severity=clear(0),minor(ELSE)
					alarmType=qualityOfServiceAlarm
					probableCause=thresholdCrossed"
		::= { pnSTDAlarmTrapItemVar 48 }

	alarmItemPnSTDTcn15minTotalSES OBJECT-TYPE
		SYNTAX		INTEGER (0..1)
		ACCESS		read-only
		STATUS		mandatory
		DESCRIPTION	"TCN-SES-15min TOTAL
					TCN-SES-15min(DIR-A) TOTAL
					  0:Normal,
					  1:Alarm
						  
					severity=clear(0),minor(ELSE)
					alarmType=qualityOfServiceAlarm
					probableCause=thresholdCrossed"
		::= { pnSTDAlarmTrapItemVar 49 }

	alarmItemPnSTDTcn15minTotalBBE OBJECT-TYPE
		SYNTAX		INTEGER (0..1)
		ACCESS		read-only
		STATUS		mandatory
		DESCRIPTION	"TCN-BBE-15min TOTAL
					TCN-BBE-15min(DIR-A) TOTAL
					  0:Normal,
					  1:Alarm
						  
					severity=clear(0),minor(ELSE)
					alarmType=qualityOfServiceAlarm
					probableCause=thresholdCrossed"
		::= { pnSTDAlarmTrapItemVar 50 }

	alarmItemPnSTDTcn15minTotalSEP OBJECT-TYPE
		SYNTAX		INTEGER (0..1)
		ACCESS		read-only
		STATUS		mandatory
		DESCRIPTION	"TCN-SEP-15min TOTAL
					TCN-SEP-15min(DIR-A) TOTAL
					  0:Normal,
					  1:Alarm
						  
					severity=clear(0),minor(ELSE)
					alarmType=qualityOfServiceAlarm
					probableCause=thresholdCrossed"
		::= { pnSTDAlarmTrapItemVar 51 }

	alarmItemPnSTDTcn1dayTotalOFS OBJECT-TYPE
		SYNTAX		INTEGER (0..1)
		ACCESS		read-only
		STATUS		mandatory
		DESCRIPTION	"TCN-OFS-1day TOTAL
					TCN-OFS-1day(DIR-A) TOTAL
					  0:Normal,
					  1:Alarm
						  
					severity=clear(0),minor(ELSE)
					alarmType=qualityOfServiceAlarm
					probableCause=thresholdCrossed"
		::= { pnSTDAlarmTrapItemVar 58 }

	alarmItemPnSTDTcn1dayTotalUAS OBJECT-TYPE
		SYNTAX		INTEGER (0..1)
		ACCESS		read-only
		STATUS		mandatory
		DESCRIPTION	"TCN-UAS-1day TOTAL
					TCN-UAS-1day(DIR-A) TOTAL
					  0:Normal,
					  1:Alarm
						  
					severity=clear(0),minor(ELSE)
					alarmType=qualityOfServiceAlarm
					probableCause=thresholdCrossed"
		::= { pnSTDAlarmTrapItemVar 59 }

	alarmItemPnSTDTcn1dayTotalES OBJECT-TYPE
		SYNTAX		INTEGER (0..1)
		ACCESS		read-only
		STATUS		mandatory
		DESCRIPTION	"TCN-ES-1day TOTAL
					TCN-ES-1day(DIR-A) TOTAL
					  0:Normal,
					  1:Alarm
						  
					severity=clear(0),minor(ELSE)
					alarmType=qualityOfServiceAlarm
					probableCause=thresholdCrossed"
		::= { pnSTDAlarmTrapItemVar 60 }

	alarmItemPnSTDTcn1dayTotalSES OBJECT-TYPE
		SYNTAX		INTEGER (0..1)
		ACCESS		read-only
		STATUS		mandatory
		DESCRIPTION	"TCN-SES-1day TOTAL
					TCN-SES-1day(DIR-A) TOTAL
					  0:Normal,
					  1:Alarm
						  
					severity=clear(0),minor(ELSE)
					alarmType=qualityOfServiceAlarm
					probableCause=thresholdCrossed"
		::= { pnSTDAlarmTrapItemVar 61 }

	alarmItemPnSTDTcn1dayTotalBBE OBJECT-TYPE
		SYNTAX		INTEGER (0..1)
		ACCESS		read-only
		STATUS		mandatory
		DESCRIPTION	"TCN-BBE-1day TOTAL
					TCN-BBE-1day(DIR-A) TOTAL
					  0:Normal,
					  1:Alarm
						  
					severity=clear(0),minor(ELSE)
					alarmType=qualityOfServiceAlarm
					probableCause=thresholdCrossed"
		::= { pnSTDAlarmTrapItemVar 62 }

	alarmItemPnSTDTcn1dayTotalSEP OBJECT-TYPE
		SYNTAX		INTEGER (0..1)
		ACCESS		read-only
		STATUS		mandatory
		DESCRIPTION	"TCN-SEP-1day TOTAL
					TCN-SEP-1day(DIR-A) TOTAL
					  0:Normal,
					  1:Alarm
						  
					severity=clear(0),minor(ELSE)
					alarmType=qualityOfServiceAlarm
					probableCause=thresholdCrossed"
		::= { pnSTDAlarmTrapItemVar 63 }

	alarmItemPnSTDTcnUAEDMRWork OBJECT-TYPE
		SYNTAX		INTEGER (0..1)
		ACCESS		read-only
		STATUS		mandatory
		DESCRIPTION	"TCN-UAE DMR WORK
					TCN-UAE DMR WORK
					  0:Normal,
					  1:Alarm

					severity=clear(0),minor(ELSE)
					alarmType=qualityOfServiceAlarm
					probableCause=thresholdCrossed"
		::= { pnSTDAlarmTrapItemVar 70 }

	alarmItemPnSTDTcnUAEDMRProt OBJECT-TYPE
		SYNTAX		INTEGER (0..1)
		ACCESS		read-only
		STATUS		mandatory
		DESCRIPTION	"TCN-UAE DMR PROT
					TCN-UAE DMR PROT
					  0:Normal,
					  1:Alarm

					severity=clear(0),minor(ELSE)
					alarmType=qualityOfServiceAlarm
					probableCause=thresholdCrossed"
		::= { pnSTDAlarmTrapItemVar 71 }

	alarmItemPnSTDTcnTCS15minRxLev OBJECT-TYPE
		SYNTAX		INTEGER (0..1)
		ACCESS		read-only
		STATUS		mandatory
		DESCRIPTION	"TCN-RX LEV-15min
					The (lower) Threshold Crossing Notice level for 15 min alarm.
					  0:Normal,
	 				  1:Alarm
	
					severity=clear(0),minor(ELSE)
					alarmType=qualityOfServiceAlarm
					probableCause=thresholdCrossed"
		::= { pnSTDAlarmTrapItemVar 72 }

	alarmItemPnSTDTcnTCS1dayRxLev OBJECT-TYPE
		SYNTAX		INTEGER (0..1)
		ACCESS		read-only
		STATUS		mandatory
		DESCRIPTION	"TCN-RX LEV-1day
					The (lower) Threshold Crossing Notice level for 1 day alarm.
					  0:Normal,
	 				  1:Alarm
	
					severity=clear(0),minor(ELSE)
					alarmType=qualityOfServiceAlarm
					probableCause=thresholdCrossed"
		::= { pnSTDAlarmTrapItemVar 73 }

	alarmItemPnSTDTRULORefAlarm OBJECT-TYPE
		SYNTAX		INTEGER (0..1)
		ACCESS		read-only
		STATUS		mandatory
		DESCRIPTION	"LO REF
					  0:Normal,
	 				  1:Alarm
	
					severity=clear(0),minor(ELSE)
					alarmType=equipmentAlarm
					probableCause=equipmentMalfunction"
		::= { pnSTDAlarmTrapItemVar 74 }

	alarmItemPnSTDLofMUXWork OBJECT-TYPE
		SYNTAX		INTEGER (0..1)
		ACCESS		read-only
		STATUS		mandatory
		DESCRIPTION	"STM-1(1) LOF(MUX)
					Indicates the input signal status of the STM-1 from MUX.
					If the input signal is out of frame synchronization, this alarm is issued.
					  0:Normal,
					  1:Alarm
	
					severity=clear(0),major(ELSE)
					alarmType=communicationsAlarm
					probableCause=lossOfFrame"
		::= { pnSTDAlarmTrapItemVar 75 }

	alarmItemPnSTDLofDMRWork OBJECT-TYPE
		SYNTAX		INTEGER (0..1)
		ACCESS		read-only
		STATUS		mandatory
		DESCRIPTION	"STM-1(1) LOF(DMR)
					Indicates the status of the input STM-1 signal from DMR.
					If the input signal is out of synch, this alarm is issued.
					  0:Normal,
					  1:Alarm
	
					severity=clear(0),major(ELSE)
					alarmType=communicationsAlarm
					probableCause=lossOfFrame"
		::= { pnSTDAlarmTrapItemVar 76 }

	alarmItemPnSTDLosDMRProt OBJECT-TYPE
		SYNTAX		INTEGER (0..1)
		ACCESS		read-only
		STATUS		mandatory
		DESCRIPTION	"STM-1(2) LOS(DMR)
					Indicates the signal status of the STM-1 from DMR.
					If the input is disconnected, this alarm is issued.
					*) Only when APS Function is available.
					  0:Normal,
					  1:Alarm
						  
					severity=clear(0),major(ELSE)
					alarmType=communicationsAlarm
					probableCause=lossOfSignal"
		::= { pnSTDAlarmTrapItemVar 77 }

	alarmItemPnSTDLofMUXProt OBJECT-TYPE
		SYNTAX		INTEGER (0..1)
		ACCESS		read-only
		STATUS		mandatory
		DESCRIPTION	"STM-1(2) LOF(MUX)
					Indicates the input signal status of the STM-1 from MUX.
					If the input signal is out of frame synchronization, this alarm is issued.
					*) Only when APS Function is available.
					  0:Normal,
					  1:Alarm
						  
					severity=clear(0),major(ELSE)
					alarmType=communicationsAlarm
					probableCause=lossOfFrame"
		::= { pnSTDAlarmTrapItemVar 78 }

	alarmItemPnSTDLofDMRProt OBJECT-TYPE
		SYNTAX		INTEGER (0..1)
		ACCESS		read-only
		STATUS		mandatory
		DESCRIPTION	"STM-1(2) LOF(DMR)
					Indicates the status of the input STM-1 signal from DMR.
					If the input signal is out of synch, this alarm is issued.
					*) Only when APS Function is available.
					  0:Normal,
					  1:Alarm
						  
					severity=clear(0),major(ELSE)
					alarmType=communicationsAlarm
					probableCause=lossOfFrame"
		::= { pnSTDAlarmTrapItemVar 79 }

	alarmItemPnSTDStm1TFWorkAlarm OBJECT-TYPE
		SYNTAX		INTEGER (0..1)
		ACCESS		read-only
		STATUS		mandatory
		DESCRIPTION	"STM-1(1) TF
					Indicates 'alarm' when there is a defect in this interface that interrupts the STM-1 signal.
					  0:Normal,
	 				  1:Alarm
	 					  
					severity=clear(0),major(ELSE)
					alarmType=equipmentAlarm
					probableCause=equipmentMalfunction"
		::= { pnSTDAlarmTrapItemVar 80 }

	alarmItemPnSTDStm1TFProtAlarm OBJECT-TYPE
		SYNTAX		INTEGER (0..1)
		ACCESS		read-only
		STATUS		mandatory
		DESCRIPTION	"STM-1(2) TF
					Indicates 'alarm' when there is a defect in this interface that interrupts the STM-1 signal.
					*) Only when APS Function is available.
					  0:Normal,
	 				  1:Alarm
	 					  
					severity=clear(0),major(ELSE)
					alarmType=equipmentAlarm
					probableCause=equipmentMalfunction"
		::= { pnSTDAlarmTrapItemVar 81 }

	alarmItemPnSTDTcnUAEMUXWork OBJECT-TYPE
		SYNTAX		INTEGER (0..1)
		ACCESS		read-only
		STATUS		mandatory
		DESCRIPTION	"STM-1(1) UAE(MUX)
					indicates whether UAS were monitored (in MUX).
					  0:Normal,
	 				  1:Alarm
	 					  
					severity=clear(0),minor(ELSE)
					alarmType=qualityOfServiceAlarm
					probableCause=thresholdCrossed"
		::= { pnSTDAlarmTrapItemVar 82 }

	alarmItemPnSTDTcnUAEMUXProt OBJECT-TYPE
		SYNTAX		INTEGER (0..1)
		ACCESS		read-only
		STATUS		mandatory
		DESCRIPTION	"STM-1(2) UAE(MUX)
					indicates whether UAS were monitored (in MUX).
					*) Only when APS Function is available.
					  0:Normal,
	 				  1:Alarm
	 					  
					severity=clear(0),minor(ELSE)
					alarmType=qualityOfServiceAlarm
					probableCause=thresholdCrossed"
		::= { pnSTDAlarmTrapItemVar 83 }

	alarmItemPnSTDAuxClusterAlarm OBJECT-TYPE
		SYNTAX		INTEGER (0..1)
		ACCESS		read-only
		STATUS		mandatory
		DESCRIPTION	"CLUSTERx ALARM
					(x : 1-4)
					  0:Normal,
	 				  1:Alarm
	 					  
					severity=clear(0),major(ELSE)
					alarmType=equipmentAlarm
					probableCause=equipmentMalfunction"
		::= { pnSTDAlarmTrapItemVar 84 }

	alarmItemPnSTDLinearizerFail OBJECT-TYPE
		SYNTAX		INTEGER (0..1)
		ACCESS		read-only
		STATUS		mandatory
		DESCRIPTION	"LINEARIZER
					Indicates the linearizer operating status.
					This alarm is issued when the linearizer is not properly operating in the OPR state.
					*) Not available in QPSK modulation Scheme.
					  0:Normal,
	 				  1:Alarm
	 					  
					severity=clear(0),major(ELSE)
					alarmType=equipmentAlarm
					probableCause=equipmentMalfunction"
		::= { pnSTDAlarmTrapItemVar 85 }

	alarmItemPnSTDRouteID OBJECT-TYPE
		SYNTAX		INTEGER (0..1)
		ACCESS		read-only
		STATUS		mandatory
		DESCRIPTION	"FRAME ID
					  0:Normal,
					  1:Alarm
						  
					severity=clear(0),major(ELSE)
					alarmType=communicationsAlarm
					probableCause=equipmentMalfunction"
		::= { pnSTDAlarmTrapItemVar 86 }

	alarmItemPnSTDEarlyWarning OBJECT-TYPE
		SYNTAX		INTEGER (0..1)
		ACCESS		read-only
		STATUS		mandatory
		DESCRIPTION	"EARLY WARNING
					Indicates quality deterioration status.
					If the signal deteriorates beyond the present threshold level,
					 this alarm is issued and the RX-Hitless Switch is activated.
					The present threshold is a BER of 1E-9.
					  0:Normal,
	 				  1:Alarm
	 				  
					severity=clear(0),minor(ELSE)
					alarmType=qualityOfServiceAlarm
					probableCause=degradedSignal"
		::= { pnSTDAlarmTrapItemVar 87 }

	alarmItemPnSTDInputVoltage OBJECT-TYPE
		SYNTAX		INTEGER (0..1)
		ACCESS		read-only
		STATUS		mandatory
		DESCRIPTION	"INPUT VOLTAGE
					  0:Normal,
	 				  1:Alarm
	 				  
					severity=clear(0),major(ELSE)
					alarmType=equipmentAlarm
					probableCause=powerProblem"
		::= { pnSTDAlarmTrapItemVar 88 }

	alarmItemPnSTDIntfcMTypeMismatch OBJECT-TYPE
		SYNTAX		INTEGER (0..1)
		ACCESS		read-only
		STATUS		mandatory
		DESCRIPTION	"INTFC(1) TYPE MISMATCH
					  0:Normal,
	 				  1:Alarm
	 					  
					severity=clear(0),major(ELSE)
					alarmType=equipmentAlarm
					probableCause=equipmentMalfunction"
		::= { pnSTDAlarmTrapItemVar 89 }

	alarmItemPnSTDIntfcSTypeMismatch OBJECT-TYPE
		SYNTAX		INTEGER (0..1)
		ACCESS		read-only
		STATUS		mandatory
		DESCRIPTION	"INTFC(2) TYPE MISMATCH
					  0:Normal,
	 				  1:Alarm
	 				  
					severity=clear(0),major(ELSE)
					alarmType=equipmentAlarm
					probableCause=equipmentMalfunction"
		::= { pnSTDAlarmTrapItemVar 90 }

	alarmItemPnSTDXpicModeMismatch OBJECT-TYPE
		SYNTAX		INTEGER (0..1)
		ACCESS		read-only
		STATUS		mandatory
		DESCRIPTION	"XPIC MODEM MISMATCH
					  0:Normal,
	 				  1:Alarm

					severity=clear(0),major(ELSE)
					alarmType=equipmentAlarm
					probableCause=equipmentMalfunction"
		::= { pnSTDAlarmTrapItemVar 91 }

	alarmItemPnSTDXControlAlarm OBJECT-TYPE
		SYNTAX		INTEGER (0..1)
		ACCESS		read-only
		STATUS		mandatory
		DESCRIPTION	"XCONTROL ALAEM
					  0:Normal,
	 				  1:Alarm

					severity=clear(0),major(ELSE)
					alarmType=equipmentAlarm
					probableCause=equipmentMalfunction"
		::= { pnSTDAlarmTrapItemVar 92 }

	alarmItemPnSTDGbELink OBJECT-TYPE
		SYNTAX		INTEGER (0..1)
		ACCESS		read-only
		STATUS		mandatory
		DESCRIPTION	"GbE LAN LINK PORT
					  0:Normal,
					  1:Alarm
						  
					severity=clear(0),major(ELSE)
					alarmType=communicationsAlarm
					probableCause=lANerror"
		::= { pnSTDAlarmTrapItemVar 93 }

	alarmItemPnSTDModemTypeMismatch OBJECT-TYPE
		SYNTAX		INTEGER (0..1)
		ACCESS		read-only
		STATUS		mandatory
		DESCRIPTION	"MODEM TYPE MISMARCH
					  0:Normal,
	 				  1:Alarm
	 					  
					severity=clear(0),major(ELSE)
					alarmType=equipmentAlarm
					probableCause=equipmentMalfunction"
		::= { pnSTDAlarmTrapItemVar 94 }

	alarmItemPnSTDTRUTypeMismatch OBJECT-TYPE
		SYNTAX		INTEGER (0..1)
		ACCESS		read-only
		STATUS		mandatory
		DESCRIPTION	"ODU TYPE MISMATCH
					  0:Normal,
					  1:Alarm
						  
					severity=clear(0),major(ELSE)
					alarmType=equipmentAlarm
					probableCause=equipmentMalfunction"
		::= { pnSTDAlarmTrapItemVar 95 }

	alarmItemPnSTDStackConnection OBJECT-TYPE
		SYNTAX		INTEGER (0..1)
		ACCESS		read-only
		STATUS		mandatory
		DESCRIPTION	"STACK CONNECTION
					  0:Normal,
					  1:Alarm
						  
					severity=clear(0),major(ELSE)
					alarmType=communicationsAlarm
					probableCause=equipmentMalfunction"
		::= { pnSTDAlarmTrapItemVar 96 }

	pnSTDEventTrapItemVar OBJECT IDENTIFIER
		::= { pnSTDTrapItemVar 4 }

	eventItemPnSTDConfigDataValid OBJECT-TYPE
		SYNTAX		INTEGER(0..1)
		ACCESS		read-only
		STATUS		mandatory
		DESCRIPTION	"EQUIPMENT CONFIGURATION
					AVAILABILITY
					  0:Valid,
					  1:Invalid"
		::= { pnSTDEventTrapItemVar 1 }

	eventItemPnSTDConfigDataUp OBJECT-TYPE
		SYNTAX		INTEGER
		ACCESS		read-only
		STATUS		mandatory
		::= { pnSTDEventTrapItemVar 2 }

	eventItemPnSTDTxMuteStatus OBJECT-TYPE
		SYNTAX		INTEGER (0..1)
		ACCESS		read-only
		STATUS		mandatory
		DESCRIPTION	"MUTE STATUS
					  0: transmitter output is muted (off),
					  1: transmitter output is normal (on)"
		::= { pnSTDEventTrapItemVar 3 }

	eventItemPnSTDTxSWStatus OBJECT-TYPE
		SYNTAX		INTEGER (0..1)
		ACCESS		read-only
		STATUS		mandatory
		DESCRIPTION	"TX SW STATUS
					Indicates the modem-ODU configuration currently used for transmitting signals.
					*) only for 1 + 1 hot standby
					  0:No.1,
					  1:No.2"
		::= { pnSTDEventTrapItemVar 4 }

	eventItemPnSTDRxSWStatus OBJECT-TYPE
		SYNTAX		INTEGER (0..1)
		ACCESS		read-only
		STATUS		mandatory
		DESCRIPTION	"RX SW STATUS
					Indicates the modem-ODU configuration currently used for receiving signals.
					*) only for 1 + 1 hot
					  0:No.1,
					  1:No.2"
		::= { pnSTDEventTrapItemVar 5 }

	eventItemPnSTDXPICFuncStatus OBJECT-TYPE
		SYNTAX		INTEGER (0..1)
		ACCESS		read-only
		STATUS		mandatory
		DESCRIPTION	"XPIC STATUS
					  0:Normal,
					  1:Reset"
		::= { pnSTDEventTrapItemVar 6 }

	eventItemPnSTDLinearizerFunc OBJECT-TYPE
		SYNTAX		INTEGER (0..2)
		ACCESS		read-only
		STATUS		mandatory
		DESCRIPTION	"LINEARIZER FUNCTION
					Indicates the status of linearizer function.
					N/A: When the ODU is used without linearizer function.
					NO OPR: When the linearizer function is not used.
               				In this case, TX output power decreases approx.
               				4 dBm from a standard value.
					OPR: When the linearizer function is used.
					*) Not available in QPSK modulation Scheme.

					  0:n/a,
					  1:Non Operation,
					  2:Operation"
		::= { pnSTDEventTrapItemVar 7 }

	eventItemPnSTDSTM-1OutContWork OBJECT-TYPE
		SYNTAX		INTEGER (0..1)
		ACCESS		read-only
		STATUS		mandatory
		DESCRIPTION	"STM-1(1) OUTPUT CONTROL
					Indicates signal interruption status when MS-AIS Generation is set to 'Disable'.
					Indicates UNDER EXECUTION, when there is no STM-1 output signal from STM-1 INTERFACE.
					*) Only when APS Function is available and MS-AIS Generation is 'disabled'.
					  0:Normal,
					  1:Under Execution"
		::= { pnSTDEventTrapItemVar 9 }

	eventItemPnSTDAisGeneratedCH OBJECT-TYPE
		SYNTAX		OCTET STRING (SIZE (6))
		ACCESS		read-only
		STATUS		mandatory
		DESCRIPTION	"AIS GENERATED CHxx
					(xx : 01-48)
					  0:Normal,
					  1:Generated
					
					 [Bit Description]
					  Bit0 = CH01 (0: Normal,1: Alarm)
					  Bit1 = CH02
					  Bit2 = CH03
					  ...
					  Bit46 = CH47
					  Bit47 = CH48"
		::= { pnSTDEventTrapItemVar 10 }

	eventItemPnSTDAisReceivedCH OBJECT-TYPE
		SYNTAX		OCTET STRING (SIZE (6))
		ACCESS		read-only
		STATUS		mandatory
		DESCRIPTION	"AIS RECEIVED CHxx
					(xx : 01-48)
					  0:Normal,
					  1:Received
					
					 [Bit Description]
					  Bit0 = CH01 (0: Normal,1: Alarm)
					  Bit1 = CH02
					  Bit2 = CH03
					  ...
					  Bit46 = CH47
					  Bit47 = CH48"
		::= { pnSTDEventTrapItemVar 11 }

	eventItemPnSTDLinkLossForward OBJECT-TYPE
		SYNTAX		INTEGER (0..1)
		ACCESS		read-only
		STATUS		mandatory
		DESCRIPTION	"LINK LOSS FORWARDING PORTx
					(x : 1-4)
					Indicates the status of Link Loss Forwarding status for the respective ports.
					*) The LLF function must be 'enabled'.
					  0:Normal,
					  1:Under Execution"
		::= { pnSTDEventTrapItemVar 12 }

	eventItemPnSTDSpeedDuplex OBJECT-TYPE
		SYNTAX		INTEGER (0..7)
		ACCESS		read-only
		STATUS		mandatory
		DESCRIPTION	"SPEED & DUPLEX PORTx
					(x : 1-4)
					  0:10M-HALF(MDI),
					  1:10M-FULL(MDI),
					  2:100M-HALF(MDI),
					  3:100M-FULL(MDI),
					  4:10M-HALF(MDIX),
					  5:10M-FULL(MDIX),
					  6:100M-HALF(MDIX),
					  7:100M-FULL(MDIX)"
		::= { pnSTDEventTrapItemVar 13 }

	eventItemPnSTDInphaseWork OBJECT-TYPE
		SYNTAX		INTEGER (0..1)
		ACCESS		read-only
		STATUS		mandatory
		DESCRIPTION	"INTFC(1) INPHASE
					Indicates the DADE status of the received No.1 and No.2 signal at E1 INTFC.
					If the received signal delay time is out of the permissible range,
					 an 'Out-of-phase' alarm is issued.
					*) Only for 1 + 1 hot standby or twinpath.
					  0:Out Phase,
					  1:In Phase"
		::= { pnSTDEventTrapItemVar 14 }

	eventItemPnSTDSTM-1OutContProt OBJECT-TYPE
		SYNTAX		INTEGER (0..1)
		ACCESS		read-only
		STATUS		mandatory
		DESCRIPTION	"STM-1(2) OUTPUT CONTROL
					Indicates signal interruption status when MS-AIS Generation is set to 'Disable'.
					Indicates UNDER EXECUTION, when there is no STM-1 output signal from STM-1 INTERFACE.
					*) Only when APS Function is available and MS-AIS Generation is 'disabled'.
					  0:Normal,
					  1:Under Execution"
		::= { pnSTDEventTrapItemVar 15 }

	eventItemPnSTDInphaseProt OBJECT-TYPE
		SYNTAX		INTEGER (0..1)
		ACCESS		read-only
		STATUS		mandatory
		DESCRIPTION	"INTFC(2) INPHASE
					Indicates the DADE status of the received No.1 and No.2 signal at E1 INTFC.
					If the received signal delay time is out of the permissible range, an Out-of-phase alarm is issued.
					*) Only when APS Function is available and only for 1+1 hot standby or twinpath.
					  0:Out Phase,
					  1:In Phase"
		::= { pnSTDEventTrapItemVar 16 }

	eventItemPnSTDWSAisGeneratedCH OBJECT-TYPE
		SYNTAX		INTEGER (0..1)
		ACCESS		read-only
		STATUS		mandatory
		DESCRIPTION	"WS AIS GENERATED
					  0:Normal,
					  1:Generated"
		::= { pnSTDEventTrapItemVar 17 }

	eventItemPnSTDWSAisReceivedCH OBJECT-TYPE
		SYNTAX		INTEGER (0..1)
		ACCESS		read-only
		STATUS		mandatory
		DESCRIPTION	"WS AIS RECEIVED
					  0:Normal,
					  1:Received"
		::= { pnSTDEventTrapItemVar 18 }

	eventItemPnSTDSCLanLinkLossForward OBJECT-TYPE
		SYNTAX		INTEGER (0..1)
		ACCESS		read-only
		STATUS		mandatory
		DESCRIPTION	"INTFC(2) LINK LOSS FORWARDINGx
					(x : 1-2)
					  0:Normal,
					  1:Under Execution"
		::= { pnSTDEventTrapItemVar 19 }

	eventItemPnSTDSCLanSpeedDuplex OBJECT-TYPE
		SYNTAX		INTEGER (0..7)
		ACCESS		read-only
		STATUS		mandatory
		DESCRIPTION	"INTFC(2) SPEED & DUPLEX PORTx
					(x : 1-2)
					  0:10M-HALF(MDI),
					  1:10M-FULL(MDI),
					  2:100M-HALF(MDI),
					  3:100M-FULL(MDI),
					  4:10M-HALF(MDIX),
					  5:10M-FULL(MDIX),
					  6:100M-HALF(MDIX),
					  7:100M-FULL(MDIX)"
		::= { pnSTDEventTrapItemVar 20 }

	eventItemPnSTDCHUsage OBJECT-TYPE
		SYNTAX		OCTET STRING (SIZE (48))
		ACCESS		read-only
		STATUS		mandatory
		DESCRIPTION	"CH USAGE(CHxx)
					xx=01-48
					  0:Invalid,
					  1:Not Used,
					  2:Used(E1),
					  3:Used(LAN)
						
					  [Byte Description]
					    Byte 0 = CH01(0:Invalid, 1:Not Used, 2:Used(E1), 3:Used(LAN))
					    Byte 1 = CH02
					    ...
					    Byte 46 = CH47
					    Byte 47 = CH48"
		::= { pnSTDEventTrapItemVar 21 }

	eventItemPnSTDCHCondition OBJECT-TYPE
		SYNTAX		OCTET STRING (SIZE (6))
		ACCESS		read-only
		STATUS		mandatory
		DESCRIPTION	"CH CONDITION
					  Byte 0 = CH USAGE ERROR REPORT (0:Invalid, 1:Disabled, 2:Enabled)
					  Byte 1 = AIS ACTIVATION CONDITION (0:INVALID, 1:LOF + HIGH BER, 2:LOF)
					  Byte 2 = AIS ACTIVATION DELAY (0:INVALID, 1:OFF, 2:ON) --Not used
					  Byte 3 = AIS GENERATED REPORT (0:INVALID, 1:NOT REPORT, 2:REPORT)
					  Byte 4 = AIS RECEIVED REPORT (0:INVALID, 1:NOT REPORT, 2:REPORT)
					  Byte 5 = AIS RECEIVED CONDITION (0:INVALID, 1:ALARM, 2:STATUS)"
		::= { pnSTDEventTrapItemVar 22 }





	eventItemPnSTDCHImpedance OBJECT-TYPE
		SYNTAX		OCTET STRING (SIZE (10))
		ACCESS		read-only
		STATUS		mandatory
		DESCRIPTION	"E1 PORT IMPEDANCE
					For setting the impedance of the E1 interface port.
					*) The designated channel(s) must have been selected for use.
					  0:Invalid,
					  1:120[ohm],
					  2:75[ohm]
					
					  [Byte Description]
					    Byte 0 = E1 PORT IMPEDANCE(CH1) (0:Invalid, 1:120[ohm], 2:75[ohm])
					    Byte 1 = E1 PORT IMPEDANCE(CH2)
					    Byte 2 = E1 PORT IMPEDANCE(CH3)
					    Byte 3 = E1 PORT IMPEDANCE(CH4)
					    Byte 4 = E1 PORT IMPEDANCE(CH5-8)
					    Byte 5 = E1 PORT IMPEDANCE(CH9-16)
					    Byte 6 = E1 PORT IMPEDANCE(CH17-24)
					    Byte 7 = E1 PORT IMPEDANCE(CH25-32)
					    Byte 8 = E1 PORT IMPEDANCE(CH33-40)
					    Byte 9 = E1 PORT IMPEDANCE(CH41-48)"
		::= { pnSTDEventTrapItemVar 23 }

	eventItemPnSTDMSAisGeneration OBJECT-TYPE
		SYNTAX		INTEGER (0..2)
		ACCESS		read-only
		STATUS		mandatory
		DESCRIPTION	"MS-AIS GENERATION
					  0:Invalid,
					  1:Disabled,
					  2:Enabled"
		::= { pnSTDEventTrapItemVar 24 }

	eventItemPnSTDDxcFunction OBJECT-TYPE
		SYNTAX		INTEGER (0..2)
		ACCESS		read-only
		STATUS		mandatory
		DESCRIPTION	"DXC FUNCTION
	     			  0:Invalid,
	     			  1:Disabled,
	     			  2:Enabled"
		::= { pnSTDEventTrapItemVar 25 }

	eventItemPnSTDDxcCHSetting OBJECT-TYPE
		SYNTAX		OCTET STRING (SIZE (156))
		ACCESS		read-only
		STATUS		mandatory
		DESCRIPTION "DXC CH Setting
     				[Byte Description]
	     			  Byte 0:TRIB CH01 Setting
	     			  ...
					  Byte 47:TRIB CH 48 Setting
					
					  Byte 48-51:reserve
	
					  Byte 52:DIR-A CH01 Setting
					  ...
					  Byte 99:DIR-A CH048 Setting
					
					  Byte 100-103:reserve
	
					  Byte 104:DIR-B CH01 Setting
					  ...
					  Byte 151:DIR-B CH48 Setting
	
					  Byte 152-155:reserve
						
					[Bit Description]
					  6bit(5-0)
					  000001 = CH1
					  ...
					  110000 = CH48
					  000000 = Invalid
					
					  2bit(7-6)
					  01 = DIR-A
					  10 = DIR-B
					  S1 = LAN
	
					  *)Reserved : 0x11111111
					  *)Invalid : 0x00000000"
		::= { pnSTDEventTrapItemVar 26 }

	eventItemPnSTDGbELanCollision OBJECT-TYPE
		SYNTAX		INTEGER (0..1)
		ACCESS		read-only
		STATUS		mandatory
		DESCRIPTION "GbE LAN COLLISION PORT1(MAIN)
					  0:Normal,
					  1:Collision"
		::= { pnSTDEventTrapItemVar 27 }



	eventItemPnSTDBERThreshold OBJECT-TYPE
		SYNTAX		OCTET STRING (SIZE (8))
		ACCESS		read-only
		STATUS		mandatory
		DESCRIPTION	"BER HRESHOLD ETTING
					  [Byte Description]
					    Byte 0 = HIGH BER THRESHOLD/HIGH BER THRESHOLD(DIR-A)  
					                (0:INVALID, 1:1E-3, 2:1E-4, 3:1E-5)
					    Byte 1 = HIGH BER THRESHOLD(DIR-B) 
					                (0:INVALID, 1:1E-3, 2:1E-4, 3:1E-5)
						*) This Value is fixed to 0 when Redundancy isn't 2-way.
					    Byte 2 = LOW BER THRESHOLD/LOW BER THRESHOLD(DIR-A) 
					                (0:INVALID, 1:1E-6, 2:1E-7, 3:1E-8, 4:1E-9)
					    Byte 3 = LOW BER THRESHOLD(DIR-B) 
					                (0:INVALID, 1:1E-6, 2:1E-7, 3:1E-8, 4:1E-9)
						*) This Value is fixed to 0 when Redundancy isn't 2-way.
					    Byte 4 = E-BER(DMR)
					                (0:INVALID, 1:1E-3, 2:1E-4, 3:1E-5)
					    Byte 5 = SD(DMR)
					                (0:INVALID, 1:1E-6, 2:1E-7, 3:1E-8, 4:1E-9)
					    Byte 6 = E-BER(MUX)
					                 (0:INVALID, 1:1E-3, 2:1E-4, 3:1E-5)
					    Byte 7 = SD(MUX)
					                (0:INVALID, 1:1E-6, 2:1E-7, 3:1E-8, 4:1E-9)"
		::= { pnSTDEventTrapItemVar 28 }

	eventItemPnSTDSubIntfc OBJECT-TYPE
		SYNTAX		OCTET STRING (SIZE (4))
		ACCESS		read-only
		STATUS		mandatory
		DESCRIPTION	"SUB INTERFACE
					  0:INVALID
					  1:NOT USED
					  2:E1 WAYSIDE+SC LAN(SC)
					  3:E1 WAYSIDE
					  4:SC LAN(WAYSIDE)
					  5:SC LAN(SC)"
		::= { pnSTDEventTrapItemVar 29 }

	eventItemPnSTDSCAssign OBJECT-TYPE
		SYNTAX		OCTET STRING (SIZE (8))
		ACCESS		read-only
		STATUS		mandatory
		DESCRIPTION	"SC ASSIGNMENT
					RS-232C-1/2,V-11-1/V-11-2:Assigns the respective SC to an interface.
					V-11-1/V-11-2 Direction Setting:Enables the V-11-1 / V-11-2 service channel clocking to be set
					 (i.e. co-directional or contra-directional).
					*) Only if SC have been assigned (without SC assignment it is inactive).
					  [Byte Description]
					    Byte 0 = RS-232C-1
					         (0:INVALID, 1:NOT USED, 2:SC1, 3:SC2,
					          4:SC3, 5:SC4, 16:E1(MUX), 17:F1(MUX),
					          19:E1(DMR), 20:F1(DMR))
					    Byte 1 = RS-232C-2
					         (0:INVALID, 1:NOT USED, 2:SC1, 3:SC2,
					          4:SC3, 5:SC4, 16:E1(MUX), 17:F1(MUX),
					          19:E1(DMR), 20:F1(DMR))
					    Byte 2 = V11-1
					         (0:INVALID, 1:NOT USED, 2:SC1, 3:SC2, 
					          4:SC3, 5:SC4, 16:E1(MUX), 17:F1(MUX), 
					          18:DCCr(MUX), 19:E1(DMR), 20:F1(DMR), 
					          21:DCCr(DMR))
					    Byte 3 = V11-2
					         (0:INVALID, 1:NOT USED, 2:SC1, 3:SC2, 
					          4:SC3, 5:SC4, 16:E1(MUX), 17:F1(MUX), 
					          18:DCCr(MUX), 19:E1(DMR), 20:F1(DMR), 
					          21:DCCr(DMR))
					    Byte 4 = SC LAN1
					         (0:INVALID, 1:NOT USED, 2:SC1, 10:SC1-2,
					          14:SC1-4, 16:E1(MUX), 17:F1(MUX), 18:DCCr(MUX),
					          19:E1(DMR), 20:F1(DMR), 21:DCCr(DMR))
					    Byte 5 = SC LAN2
					         (0:INVALID, 1:NOT USED, 2:SC1, 10:SC1-2,
					          14:SC1-4, 16:E1(MUX), 17:F1(MUX), 18:DCCr(MUX),
					          19:E1(DMR), 20:F1(DMR), 21:DCCr(DMR))
					    Byte 6 = V11-1 DIRECTION SETTING
					         (0:INVALID, 1:CO-DIRECTIONAL, 2:CONTRA-DIRECTIONAL)
					    Byte 7 = V11-2 DIRECTION SETTING
					         (0:INVALID, 1:CO-DIRECTIONAL, 2:CONTRA-DIRECTIONAL)"
		::= { pnSTDEventTrapItemVar 30 }

	eventItemPnSTDLanPortSetting OBJECT-TYPE
		SYNTAX		OCTET STRING (SIZE (41))
		ACCESS		read-only
		STATUS		mandatory
		DESCRIPTION	"LAN PORT SETTING
					LAN Switching Function:Allows the port switching function to be 'enabled' / 'disabled'.
					*) When 2-Port LAN interface is used in the flwng.
					   configuration:Port1-2 Shared/1 Port Only (Main), or Port1-2 Shared/1 Port Only (SC)
					LAN Speed & Duplex Port 1-2:
					For setting the speed and duplex parameters of the LAN interface ports (1, 2).
					*) When LAN Port1 (or 2) has been selected for use.
					LAN Flow Control Port 1-2:
					For setting the flow control parameters of the LAN interface ports (1, 2).
					*) When LAN Port1 (or 2) has been selected for use.
					LAN Collision Report Port 1-2:
					For setting whether collision status is reported (or not) for the interface ports (1, 2).
					*) Only when Speed & Duplex Port 1-2 = AUTONEG or HALF-DUPLEX.
					LAN Link Loss Forwarding Port 1-2:
					For enabling/disabling the Link Loss Forwarding function for LAN interface ports (1, 2).
					*) Only when LAN Port1 (or 2) has been selected for use.
					   Not available when LAN Switching Function is 'enabled'.
					LAN 2M Framing:For setting the type of 2M framing of the LAN interface ports (1, 2).
					*) Only during the following conditions:
					   2-Port LAN >> Radio Mapping
					    = Port1-2 Shared / 1 Port Only (Main) and 2Port LAN
					    = 2Mbps in Equipment Setup window.
					LAN Port 1 -2 Usage:For setting the usage of the LAN interface ports (1, 2).
					*) Only for PDH with LAN  interface.
					  [Byte Description]
					  Byte 0 = SWITCHING FUNCTION
					       (0:INVALID, 1:DISABLED, 2:ENABLED)
					
					  Byte 1 = SPEED & DUPLEX PORT1
					  Byte 2 = SPEED & DUPLEX PORT2
					  Byte 3 = SPEED & DUPLEX PORT3
					  Byte 4 = SPEED & DUPLEX PORT4
					  Byte 5 = INTFC(2) SPEED & DUPLEX PORT1
					  Byte 6 = INTFC(2) SPEED & DUPLEX PORT2
					       (0:INVALID, 1:AUTONEG(AUTO-MDI/MDIX),
					        2:10M-HALF(MDI), 3:10M-FULL(MDI), 
					        4:100M-HALF(MDI), 5:100M-FULL(MDI), 
					        6:10M-HALF(MDIX), 7:10M-FULL(MDIX), 
					        8:100M-HALF(MDIX), 9:100M-FULL(MDIX))
					
					  Byte 7 = FLOW CONTROL PORT1
					  Byte 8 = FLOW CONTROL PORT2
					  Byte 9 = FLOW CONTROL PORT3
					  Byte 10 = FLOW CONTROL PORT4
					  Byte 11 = INTFC(2) FLOW CONTROL PORT1
					  Byte 12 = INTFC(2) FLOW CONTROL PORT2
					       (0:INVALID, 1:OFF, 2:ON)
					
					  Byte 13 = COLLISION REPORT PORT1
					  Byte 14 = COLLISION REPORT PORT2
					  Byte 15 = COLLISION REPORT PORT3
					  Byte 16 = COLLISION REPORT PORT4
					  Byte 17 = INTFC(2) COLLISION REPORT PORT1
					  Byte 18 = INTFC(2) COLLISION REPORT PORT2
					       (0:INVALID, 1:DISABLED, 2:ENABLED)
					
					  Byte 19 = LINK LOSS FORWARDING PORT1
					  Byte 20 = LINK LOSS FORWARDING PORT2
					  Byte 21 = LINK LOSS FORWARDING PORT3
					  Byte 22 = LINK LOSS FORWARDING PORT4
					  Byte 23 = INTFC(2) LINK LOSS FWD PORT1
					  Byte 24 = INTFC(2) LINK LOSS FWD PORT2
					       (0:INVALID, 1:DISABLED, 2:ENABLED)
					
					  Byte 25 = LOCK SOURCE SETTING
					       (0:INVALID, 1:INTERNAL CLOCK, 
					        2:DMR -> INTERNAL CLOCK)
					
					  Byte 26 = 2M FRAMING PORT1
					  Byte 27 = 2M FRAMING PORT2
					  Byte 28 = 2M FRAMING PORT3
					  Byte 29 = 2M FRAMING PORT4
					       (0:INVALID, 1:UNFRAMED, 2:PCM31C(FAS+CRC), 
					        3:PCM31(FAS), 4:PCM30C(MFAS+CRC), 5:PCM30(MFAS))
					
					  Byte 30 = PORT1 USAGE
					  Byte 31 = PORT2 USAGE
					  Byte 32 = PORT3 USAGE
					  Byte 33 = PORT4 USAGE
					  Byte 34 = INTFC(2) PORT1 USAGE
					  Byte 35 = INTFC(2) PORT2 USAGE
					       (0:INVALID, 1:NOT USED, 2:USED)"
		::= { pnSTDEventTrapItemVar 31 }

	eventItemPnSTDAlsFunction OBJECT-TYPE
		SYNTAX		OCTET STRING (SIZE (2))
		ACCESS		read-only
		STATUS		mandatory
		DESCRIPTION	"ALS
					  0:Invalid,
					  1:Disabled,
					  2:Enabled"
		::= { pnSTDEventTrapItemVar 32 }

	eventItemPnSTDTxPowerContValue OBJECT-TYPE
		SYNTAX		OCTET STRING (SIZE (9))
		ACCESS		read-only
		STATUS		mandatory
		DESCRIPTION	"TX POWER CTRL
					MTPC TX Power:Allows the transmission power (dB) to be set for MTPC operation.
					*) Only when MTPC is used.
					ATPC Threshold Level:Allows the transmission power (dB) thresholds to be set for ATPC operation.
					Additional ATT:For setting the additional attenuation parameters (dB).
					*) Not available if Modulation Scheme = QPSK.
					ATPC Range (Max/Min):For setting the minimum and maximum ATPC transmission power (dB).
					*) Only when ATPC is used.
					ATPC Power Mode:For setting the power mode (Hold: maintaining present status, MIN: minimum level).
					*) Only when ATPC is used.
					
					[Byte Description]
					  Byte 0 = MTPC TX POWER 
					      (0 - 255)
					  Byte 1 = ATPC THRESHOLD LEVEL integral number(signed char) 
					      (-128 - 127)
					  Byte 2 = ATPC THRESHOLD LEVEL a place of decimal
					      (0 - 9) 
					  Byte 3 = ADDITIONAL ATT 
					      (0 - 255)
					  Byte 4 = ATPC(MAX)
					      (0 - 255)
					  Byte 5 = ATPC(MIN)
					      (0 - 255)
					  Byte 6 = HYSTERESIS -- Not used
					      (0 - 255)
					  Byte 7 = ATPC POWER MODE
					      (0:INVALID, 1:HOLD, 2:MAX, 3:MIN)
					  Byte 8 = COMM ALARM MODE -- No.2 is not used.
					      (0:INVALID, 1:HOLD, 2:MUTE)"
		::= { pnSTDEventTrapItemVar 33 }

	eventItemPnSTDAtpcPowerMode OBJECT-TYPE
		SYNTAX		INTEGER (0..3)
		ACCESS		read-only
		STATUS		mandatory
		DESCRIPTION	"ATPC POWER MODE
					Indicates the operating status of the ATPC.
					If the ATPC is not properly functioning,
					 stop the control and maintain the TX output level at HOLD /MIN (selectable).
					*) Only when ATPC is used.
					
					  0:Invalid,
					  1:Hold,
					  2:MAX,
					  3:MIN"
		::= { pnSTDEventTrapItemVar 34 }











	eventItemPnSTDSWCondTxRx OBJECT-TYPE
		SYNTAX		OCTET STRING (SIZE (5))
		ACCESS		read-only
		STATUS		mandatory
		DESCRIPTION	"CONDITION	for TX/RX SW
					TX / RX SW Priority:Enables the respective priority to be set (pre-alarm TX / RX route or No. 1).
					*) Only for 1+1 hot standby.
					RX SW Maintenance Mode:
					Has two settings:
					 'manual' for disabling the RX switch and 'forced' for overriding the disabled switch.
					*) Only for 1+1 hot standby / twinpath.
					RX SW Condition-Early Warning:
					For setting whether the EW (Early Warning) feature is to be included in the parameters.
					*) Only for 1+1 hot standby / twinpath.
	
					[Byte Description]
					  Byte 0 = TX SW PRIORITY
					      (0:INVALID, 1:NON PRIORITY, 2:PRIORITY No.1)
					  Byte 1 = RX SW PRIORITY
					      (0:INVALID, 1:NON PRIORITY, 2:PRIORITY No.1)
					  Byte 2 = RX SW MAINTENANCE MODE
					      (0:INVALID, 1:MANUAL, 2:FORCED)
					  Byte 3 = RX SW CONDITION-EARLY WARNING
					      (0:INVALID, 1:INCLUDED EW, 2:EXCLUDED EW)
					  Byte 4 = RX SW CONDITION-XPIC RESET -- Not used
					      (0:INVALID, 1:INCLUDED CROSS RESET, 2:EXCLUDED CROSS RESET)"
		::= { pnSTDEventTrapItemVar 36 }

	eventItemPnSTDSWCondAPS OBJECT-TYPE
		SYNTAX		OCTET STRING (SIZE (7))
		ACCESS		read-only
		STATUS		mandatory
		DESCRIPTION	"CONDITION for APS
					APS Condition-SF:For setting whether Signal Fail is to be included in the parameters.
					*) Only when ALS Function is enabled.
					APS Condition-Signal Degrade:
					For setting whether Signal Degrade is to be included in the parameters.
					*) Only when ALS Function is enabled.
					Lock-in Usage:Allows the Lock-in function to be 'enabled' or 'disabled'.
					Lock-in Count:
					For setting the number ('count') of oscillations (within the preset 'Detect[ion] Time') 
					that will activate the Lock-in.
					*) Only when Lock-in function is enabled.
					Lock-in Detect Time:
					For setting the length of the time interval within which the Lock-in Count is conducted.
					*) Only when Lock-in function is enabled.
					Lock-in Hold Time:Sets the duration for maintaining ('holding') the Lock-in function.
					*) Only when Lock-in function is enabled.
					  [Description]
					  Byte 0 = APS ALARM PRIORITY 
					      (0:INVALID, 1:AUTO, 2:FORCED)
					  Byte 1 = APS CONDITION-SF
					      (0:INVALID, 1:PRIORITY HIGH, 2:PRIORITY LOW)
					  Byte 2 = APS CONDITION-SD
					      (0:INVALID, 1:INCLUDED SD, 2:EXCLUDED SD)
					  Byte 3 = LOCK IN USAGE (0:INVALID, 1:NOT USED, 2:USED)
					  Byte 4 = LOCK IN COUNT (VALUE(INT 0-255))
					  Byte 5 = LOCK IN DETECT TIME (VALUE(INT 0-60))
					  Byte 6 = LOCK IN HOLD TIME (VALUE(INT 0-48))"
		::= { pnSTDEventTrapItemVar 37 }

	eventItemPnSTDRelayConfigData OBJECT-TYPE
		SYNTAX		OCTET STRING (SIZE (48))
		ACCESS		read-only
		STATUS		mandatory
		DESCRIPTION	"RELAY CONFIGURATION
					Relay Configuration:The six relays in the IDU are each associated with a parallel alarm.
					Four can be configured and the other two (RL01 and RL02) have fixed alarms.
	
					[Byte Description]
					  (Relay x (x:1~6))
					   [START BIT] = 64 * (x - 1)
					
					    Bit (0 + [START BIT]) = MAINT (Remark1)
					    Bit (1 + [START BIT]) = PS ALARM1 (Remark2)
					    Bit (2 + [START BIT]) = PS ALARM2 (Remark2)
					    Bit (3 + [START BIT]) = (FIXED to 0)
					    Bit (4 + [START BIT]) = (FIXED to 0)
					    Bit (5 + [START BIT]) = (FIXED to 0)
					    Bit (6 + [START BIT]) = (FIXED to 0)
					    Bit (7 + [START BIT]) = CPU ALARM (Remark2)
					    Bit (8 + [START BIT]) = ODU ALARM1 (Remark7)
					    Bit (9 + [START BIT]) = ODU ALARM2 (Remark7)
					    Bit (10 + [START BIT]) = IDU ALARM (Remark7)
					    Bit (11 + [START BIT]) = (FIXED to 0)
					    Bit (12 + [START BIT]) = (FIXED to 0)
					    Bit (13 + [START BIT]) = (FIXED to 0)
					    Bit (14 + [START BIT]) = (FIXED to 0)
					    Bit (15 + [START BIT]) = (FIXED to 0)
					    Bit (16 + [START BIT]) = TX POWER ALARM1 (Remark7)
					    Bit (17 + [START BIT]) = TX POWER ALARM2 (Remark7)
					    Bit (18 + [START BIT]) = TX IN LEV ALARM1 (Remark7)
					    Bit (19 + [START BIT]) = TX IN LEV ALARM2 (Remark7)
					    Bit (20 + [START BIT]) = RX LEV ALARM1 (Remark7)
					    Bit (21 + [START BIT]) = RX LEV ALARM2 (Remark7)
					    Bit (22 + [START BIT]) = APC ALARM1 (Remark7)
					    Bit (23 + [START BIT]) = APC ALARM2 (Remark7)
					    Bit (24 + [START BIT]) = IF CABLE SHORT ALARM1 (Remark7)
					    Bit (25 + [START BIT]) = IF CABLE SHORT ALARM2 (Remark7)
					    Bit (26 + [START BIT]) = ODU CPU ALARM1 (Remark7)
					    Bit (27 + [START BIT]) = ODU CPU ALARM2 (Remark7)
					    Bit (28 + [START BIT]) = (FIXED to 0)
					    Bit (29 + [START BIT]) = (FIXED to 0)
					    Bit (30 + [START BIT]) = (FIXED to 0)
					    Bit (31 + [START BIT]) = (FIXED to 0)
					    Bit (32 + [START BIT]) = MOD ALARM1 (Remark7)
					    Bit (33 + [START BIT]) = MOD ALARM2 (Remark7)
					    Bit (34 + [START BIT]) = DEM ALARM1 (Remark7)
					    Bit (35 + [START BIT]) = DEM ALARM2 (Remark7)
					    Bit (36 + [START BIT]) = CH INPUT LOSS (Remark7)
					    Bit (37 + [START BIT]) = CH AIS RECEIVED (Remark7)
					    Bit (38 + [START BIT]) = CH AIS GENERATED (Remark7)
					    Bit (39 + [START BIT]) = CH USAGE ERROR (Remark7)
					    Bit (40 + [START BIT]) = LOW BER ALARM1 (Remark7)
					    Bit (41 + [START BIT]) = LOW BER ALARM2 (Remark7)
					    Bit (42 + [START BIT]) = HIGH BER ALARM1 (Remark7)
					    Bit (43 + [START BIT]) = HIGH BER ALARM2 (Remark7)
					    Bit (44 + [START BIT]) = STM-1 TF ALARM (Remark7)
					    Bit (45 + [START BIT]) = STM-1 SLOS (Remark7)
					    Bit (46 + [START BIT]) = STM-1 RLOS (Remark7)
					    Bit (47 + [START BIT]) = LAN LINK ALARM (Remark7)
					    Bit (48 + [START BIT]) = LOF1 (Remark7)
					    Bit (49 + [START BIT]) = LOF2 (Remark7)
					    Bit (50 + [START BIT]) = XREF ALARM1 (Remark7)
					    Bit (51 + [START BIT]) = XREF ALARM2 (Remark7)
					    Bit (52 + [START BIT]) = XCTRL ALARM (Remark7)
					    Bit (53 + [START BIT]) = XCTRL ALARM2 (Remark7) -- Not used
					    Bit (54 + [START BIT]) = SC LAN LINK ALARM (Remark7)
					    Bit (55 + [START BIT]) = WS INPUT LOSS (Remark7)
					    Bit (56 + [START BIT]) = CLUSTER ALARM1 (Remark6)
					    Bit (57 + [START BIT]) = CLUSTER ALARM2 (Remark5)
					    Bit (58 + [START BIT]) = CLUSTER ALARM3 (Remark4)
					    Bit (59 + [START BIT]) = CLUSTER ALARM4 (Remark3)
					    Bit (60 + [START BIT]) = HK1 OUTPUT (Remark6)
					    Bit (61 + [START BIT]) = HK2 OUTPUT (Remark5)
					    Bit (62 + [START BIT]) = HK3 OUTPUT (Remark4)
					    Bit (63 + [START BIT]) = HK4 OUTPUT (Remark3)
					
					  Remark1 : The value of Relay 1 is fixed to  1. 
					            The value of the other Relay is fixed to 0.
					  Remark2 : The value of Relay 2 is fixed to 1. 
					            The value of the other Relay is fixed to 0.
					  Remark3 : The value of Relay 3 is fixed to 1. 
					            The value of the other Relay is fixed to 0.
					  Remark4 : The value of Relay 4 is fixed to 1. 
					            The value of the other Relay is fixed to 0.
					  Remark5 : The value of Relay 5 is fixed to 1. 
					            The value of the other Relay is fixed to 0.
					  Remark6 : The value of Relay 6 is fixed to 1. 
					            The value of the other Relay is fixed to 0.
					  Remark7 : The value of Relay 1 and Relay 2 is fixed to 0.
					            The value of the other Relay is 0 and 1."
		::= { pnSTDEventTrapItemVar 38 }

	eventItemPnSTDRelayClusterAssign OBJECT-TYPE
		SYNTAX		OCTET STRING (SIZE (4))
		ACCESS		read-only
		STATUS		mandatory
		DESCRIPTION	"CLUSTER INPUT
					Allows the cluster alarm input to be enabled/ disabled.
					  0:Invalid,
					  1:Disabled,
					  2:Enabled
					
					[Byte Description]
					  Byte 0 = CLUSTER1 INPUT (0:Invalid, 1:Disabled, 2:Enabled)
					  Byte 1 = CLUSTER2 INPUT
					  Byte 2 = CLUSTER3 INPUT
					  Byte 3 = CLUSTER4 INPUT"
		::= { pnSTDEventTrapItemVar 39 }

	eventItemPnSTDTCNTreshold15minTotal OBJECT-TYPE
		SYNTAX		OCTET STRING (SIZE (24))
		ACCESS		read-only
		STATUS		mandatory
		DESCRIPTION	"TCN THRESHOLD 15MIN TOTAL
					
					[Byte Description]
					  Byte 0 - Byte 3 = OFS TCN THRESHOLD TOTAL-15min (0 - 900)
					  Byte 4 - Byte 7 = UAS TCN THRESHOLD TOTAL-15min (0 - 900)
					  Byte 8 - Byte 11 = ES TCN THRESHOLD TOTAL-15min  (0 - 900)
					  Byte 12 - Byte 15 = SES TCN THRESHOLD TOTAL-15min (0 - 900)
					  Byte 16 - Byte 19 = BBE TCN THRESHOLD TOTAL-15min 
					                       (PDH(Bit Rate = 5MB)   : 0 - 200700
					                        PDH(Bit Rate = 10MB)  : 0 - 402300
					                        PDH(Bit Rate = 20MB)  : 0 - 804600
					                        PDH(Bit Rate = 40MB)  : 0 - 804600
					                        PDH(Bit Rate = 80MB)  : 0 - 1611000
					                        PDH(Bit Rate = 100MB) : 0 - 1611000
					                        SDH(Bit Rate = 156MB) : 0 - 2159100)
					  Byte 20 - Byte 23 = SEP TCN THRESHOLD TOTAL-15min (0 - 900)"
		::= { pnSTDEventTrapItemVar 40 }

	eventItemPnSTDTCNTreshold1dayTotal OBJECT-TYPE
		SYNTAX		OCTET STRING (SIZE (24))
		ACCESS		read-only
		STATUS		mandatory
		DESCRIPTION	"TCN THRESHOLD 1DAY TOTAL
					[Byte Description]
					  Byte 0 - Byte 3 = OFS TCN THRESHOLD TOTAL-15min (0 - 86400)
					  Byte 4 - Byte 7 = UAS TCN THRESHOLD TOTAL-15min (0 - 86400)
					  Byte 8 - Byte 11 = ES TCN THRESHOLD TOTAL-15min (0 - 86400)
					  Byte 12 - Byte 15 = SES TCN THRESHOLD TOTAL-15min (0 - 86400)
					  Byte 16 - Byte 19 = BBE TCN THRESHOLD TOTAL-15min 
					                       (PDH(Bit Rate = 5MB)   : 0 - 19267200
					                        PDH(Bit Rate = 10MB)  : 0 - 38620800
					                        PDH(Bit Rate = 20MB)  : 0 - 77241600
					                        PDH(Bit Rate = 40MB)  : 0 - 77241600
					                        PDH(Bit Rate = 80MB)  : 0 - 154656000
					                        PDH(Bit Rate = 100MB) : 0 - 154656000
					                        SDH(Bit Rate = 156MB) : 0 - 207273600)
					  Byte 20 - Byte 23 = SEP TCN THRESHOLD TOTAL-15min (0 - 86400)"
		::= { pnSTDEventTrapItemVar 42 }

	eventItemPnSTDXpicCondLOSignalFail OBJECT-TYPE
		SYNTAX		INTEGER (0..2)
		ACCESS		read-only
		STATUS		mandatory
		DESCRIPTION	"XPIC CONDITION-LOCAL FAIL 
					  0:Invalid,
					  1:From RF to Self LO Signal,
					  2:Mute"
		::= { pnSTDEventTrapItemVar 45 }

	eventItemPnSTDEOWIntfcType OBJECT-TYPE
		SYNTAX		INTEGER (0..2)
		ACCESS		read-only
		STATUS		mandatory
		DESCRIPTION	"EOW2 EXTERNAL SETTING
					Enables appropriate EOW2 calling system signal polarity to be set:
					'normal' when the NEO IDU is connected to another NEO IDU or a PASOLINK IDU.
					'invert(ed)' when connected to PASOLINK+  IDU or Mx IDU.
					  0:Invalid,
					  1:Normal,
					  2:Invert"
		::= { pnSTDEventTrapItemVar 46 }

	eventItemPnSTDAlarmCorrelation OBJECT-TYPE
		SYNTAX		INTEGER (0..2)
		ACCESS		read-only
		STATUS		mandatory
		DESCRIPTION	"ALARM CORRELATION CAPABILITY
					Allows the suppression of secondary (downstream) alarms to be turned on/off.
					  0:Invalid,
					  1:Off,
					  2:On"
		::= { pnSTDEventTrapItemVar 47 }

	eventItemPnSTDPmonSelect OBJECT-TYPE
		SYNTAX		OCTET STRING (SIZE (10))
		ACCESS		read-only
		STATUS		mandatory
		DESCRIPTION	"PMON SELECT
			   		RX Level TCN Threshold:For setting the threshold at which the TCN is displayed
					
					[Byte Description]		      		
			        	  Byte 0 = SES COUNT ACTIVATION(DIR-A) (1:30[%], 2:15[%])
					  Byte 1 = SES COUNT ACTIVATION(DIR-B) (1:30[%], 2:15[%])
					  Byte 2 = FIXED 0
					  Byte 3 = FIXED 0
					  Byte 4 = FIXED 0
					  Byte 5 = FIXED 0
					  Byte 6 = RX LEVEL TCN THRESHOLD(No.1/DIR-A) integral number
				       		(signed char: -128 - 127)
					Byte 7 = RX LEVEL TCN THRESHOLD(No.1/DIR-A)a place of decimal
				       		(0-9)
					Byte 8 = RX LEVEL TCN THRESHOLD(No.2/DIR-B) integral number
				       		(signed char: -128 - 127)
					Byte 9 = RX LEVEL TCN THRESHOLD(No.2/DIR-B)a place of decimal
				       		(0-9)
							      
						*) The values of No.2/DIR-B side are fixed to 0 when Redundancy is 1+0 TERM."
		::= { pnSTDEventTrapItemVar 48 }

eventItemPnSTDMaintMode OBJECT-TYPE
		SYNTAX		INTEGER (0..1)
		ACCESS		read-only
		STATUS		mandatory
		DESCRIPTION	"MAINTENANCE
					Maintenance:To switch Maintenance mode to ON.
					  0:Off,
					  1:On"
		::= { pnSTDEventTrapItemVar 49 }

	eventItemPnSTDMaintLoopback1CH OBJECT-TYPE
		SYNTAX		OCTET STRING (SIZE (48))
		ACCESS		read-only
		STATUS		mandatory
		DESCRIPTION	"MAIN CH LOOPBACK-1(CHxx)
					(xx:01-48)
					Allows the pinpointing of faulty sections causing signal interruption.
					  0:Off,
					  1:On
						
					[Bit Description]
					  Bit 0 = MAIN CH LOOPBACK-1(CH01) (0:Off, 1:On)
					  Bit 1 = MAIN CH LOOPBACK-1(CH02)
					  ...
					  Bit 46 = MAIN CH LOOPBACK-1(CH47)
					  Bit 47 = MAIN CH LOOPBACK-1(CH48)
						
						*) The value of CHxx is fixed to 0, when CHxx Usage is not used. (xx: 01 - 48)"
		::= { pnSTDEventTrapItemVar 53 }

	eventItemPnSTDMaintLoopback2CH OBJECT-TYPE
		SYNTAX		OCTET STRING (SIZE (48))
		ACCESS		read-only
		STATUS		mandatory
		DESCRIPTION	"MAIN CH LOOPBACK-2(DIR-A)(CHxx)
					(xx:01-48)
					Allows the pinpointing of faulty sections causing signal interruption.
					  0:Off,
					  1:On
						
					[Bit Description]
					  Bit 0 = MAIN CH LOOPBACK-2(DIR-A)(CH01) (0:Off, 1:On)
					  Bit 1 = MAIN CH LOOPBACK-2(DIR-A)(CH02)
					  ...
					  Bit 46 = MAIN CH LOOPBACK-2(DIR-A)(CH47)
					  Bit 47 = MAIN CH LOOPBACK-2(DIR-A)(CH48)
						
						*) The value of CHxx is fixed to 0, when CHxx Usage is not used. (xx: 01 - 48)
					  *) (DIR-A) is available when Redundancy is 2-WAY."
		::= { pnSTDEventTrapItemVar 54 }

	eventItemPnSTDMaintLoopback1Work OBJECT-TYPE
		SYNTAX		INTEGER (0..1)
		ACCESS		read-only
		STATUS		mandatory
		DESCRIPTION	"MAIN LOOPBACK-1Work
					  0:Off,
					  1:On"
		::= { pnSTDEventTrapItemVar 55 }

	eventItemPnSTDMaintLoopback2 OBJECT-TYPE
		SYNTAX		INTEGER (0..1)
		ACCESS		read-only
		STATUS		mandatory
		DESCRIPTION	"MAIN LOOPBACK-2
					Allows the pinpointing of signal interruption faults.
					  0:Off,
					  1:On"
		::= { pnSTDEventTrapItemVar 56 }

	eventItemPnSTDMaintDADEAdjust OBJECT-TYPE
		SYNTAX		INTEGER (1..3)
		ACCESS		read-only
		STATUS		mandatory
		DESCRIPTION	"DADE ADJUST
					Select the DADE for Hot-Standby / Twinpath configuration to	bring INTFC status back in phase 
					  1:DADE,
					  2:Off Set DADE,
					  3:DADE OFF"
		::= { pnSTDEventTrapItemVar 57 }

	eventItemPnSTDMaintDADEAdjustEn OBJECT-TYPE
		SYNTAX		INTEGER (0..1)
		ACCESS		read-only
		STATUS		mandatory
		DESCRIPTION	"DADE ADJUST ENABLE
					  0:Off,
					  1:ON Executing"
		::= { pnSTDEventTrapItemVar 58 }

	eventItemPnSTDMaintLanDeviceReset OBJECT-TYPE
		SYNTAX		INTEGER (0..7)
		ACCESS		read-only
		STATUS		mandatory
		DESCRIPTION	"LAN DEVICE RESET
					Resets LAN INTFC ports (when LAN Port setting is 'used').
					  0:Not Selected,
					  1:INTFC(1)-PORT1,
					  2:INTFC(1)-PORT2,
					  3:INTFC(1)-PORT3,
					  4:INTFC(1)-PORT4,
					  5:INTFC(2)-PORT1,
					  6:INTFC(2)-PORT2,
					  7:INTFC(1)-ALL PORT"
		::= { pnSTDEventTrapItemVar 59 }

	eventItemPnSTDMaintAlsRestart OBJECT-TYPE
		SYNTAX		INTEGER (0..4)
		ACCESS		read-only
		STATUS		mandatory
		DESCRIPTION	"ALS RESTART
					For optical interfaces, the duration of laser emittance	during ALS manual restart (for testing).
					  0:Not Selected,
					  1:2sec(INTFC1),
					  2:90sec(INTFC1)
					  3:2sec(INTFC2),
					  4:90sec(INTFC2)"
		::= { pnSTDEventTrapItemVar 60 }

	eventItemPnSTDMaintAlsManualRestart OBJECT-TYPE
		SYNTAX		INTEGER (1..3)
		ACCESS		read-only
		STATUS		mandatory
		DESCRIPTION	"MANUAL RESTART
					  1:Off,
					  2:ON(INTFC1),
					  3:ON(INTFC2)"
		::= { pnSTDEventTrapItemVar 61 }

	eventItemPnSTDMaintATPCManualControl OBJECT-TYPE
		SYNTAX		INTEGER (0..1)
		ACCESS		read-only
		STATUS		mandatory
		DESCRIPTION	"ATPC MANUAL CONTROL
					Allows optional transmitting power when ATPC is in operation.
					  0:Off,
					  1:On"
		::= { pnSTDEventTrapItemVar 62 }

	eventItemPnSTDMaintATPCManualContPower OBJECT-TYPE
		SYNTAX		INTEGER
		ACCESS		read-only
		STATUS		mandatory
		DESCRIPTION	"ATPC MANUAL POWER[dB]"
		::= { pnSTDEventTrapItemVar 63 }

	eventItemPnSTDMaintTxMuteControl OBJECT-TYPE
		SYNTAX		INTEGER (0..1)
		ACCESS		read-only
		STATUS		mandatory
		DESCRIPTION	"TX MUTE CONTROL
					To set TX Mute Control.
					*) Only possible for NE directly connected to PNMT.
					  0:Off,
					  1:On"
		::= { pnSTDEventTrapItemVar 64 }

	eventItemPnSTDMaintTxMuteContReleaseTime OBJECT-TYPE
		SYNTAX		INTEGER
		ACCESS		read-only
		STATUS		mandatory
		DESCRIPTION	"TX MUTE OFF TIMER[sec]"
		::= { pnSTDEventTrapItemVar 65 }

	eventItemPnSTDMaintCW OBJECT-TYPE
		SYNTAX		INTEGER (0..1)
		ACCESS		read-only
		STATUS		mandatory
		DESCRIPTION	"CW CONTROL
					To turn on the Carrier Wave for measurements.
					*) Only possible for NE directly connected to PNMT.
					  0:Off,
					  1:On"
		::= { pnSTDEventTrapItemVar 66 }

	eventItemPnSTDMaintIfLoopback OBJECT-TYPE
		SYNTAX		INTEGER (0..1)
		ACCESS		read-only
		STATUS		mandatory
		DESCRIPTION	"IF LOOPBACK
					To pinpoint faulty sections causing signal interruption.
					*) Only possible for NE directly connected to PNMT.
					  0:Off,
					  1:On"
		::= { pnSTDEventTrapItemVar 67 }

	eventItemPnSTDMaintForcedXPICCont OBJECT-TYPE
		SYNTAX		INTEGER (0..1)
		ACCESS		read-only
		STATUS		mandatory
		DESCRIPTION	"XPIC CONTROL
					  0:Auto,
					  1:Force Reset"
		::= { pnSTDEventTrapItemVar 68 }

	eventItemPnSTDMaintForcedLinearizerCont OBJECT-TYPE
		SYNTAX		INTEGER (0..1)
		ACCESS		read-only
		STATUS		mandatory
		DESCRIPTION	"LINEARIZER CONTROL
					To manually disable the linearizer function.
					  0:Auto,
					  1:Force Reset"
		::= { pnSTDEventTrapItemVar 69 }

	eventItemPnSTDMaintRFSubBandSelect OBJECT-TYPE
		SYNTAX		DisplayString (SIZE (1))
		ACCESS		read-only
		STATUS		mandatory
		DESCRIPTION	"RF SUB BAND SELECT
					 Using only following Chars.
					  A, B, C, D, E, F, G, H, J, K,
					  L, M, N, P, R, X"
		::= { pnSTDEventTrapItemVar 70 }

	eventItemPnSTDMaintRFShiftFreqSet OBJECT-TYPE
		SYNTAX		DisplayString (SIZE (1))
		ACCESS		read-only
		STATUS		mandatory
		DESCRIPTION	"RF SHIFT FREQUENCY[MHz]
					 This value is only 1008 or 1010"
		::= { pnSTDEventTrapItemVar 71 }

	eventItemPnSTDMaintAntennaAlignMode OBJECT-TYPE
		SYNTAX		INTEGER (0..1)
		ACCESS		read-only
		STATUS		mandatory
		DESCRIPTION	"ANTENNA ALIGNMENT MODE
					To turn on Antenna Alignment Mode.
					(only available for specific ODU type)
					*) Only possible for NE directly connected to PNMT.
					  0:Off,
					  1:On"
		::= { pnSTDEventTrapItemVar 72 }

	eventItemPnSTDinvUpdateMainWorkModule OBJECT-TYPE
		SYNTAX		INTEGER (0..16)
		ACCESS		read-only
		STATUS		mandatory
		DESCRIPTION	"INTFC(1) PKG CHANGED
					  0:blank(0),
					  1:i16xE1BasicPkg,
					  2:i16xE1StandardPkgWithLan,
					  3:i32xE1PkgWithLan,
					  4:i48xE1Pkg,
					  5:i4PortLanWithE1,
					  6:iStm-1Optical,
					  7:iStm-1Electrical,
					  8:i2PortLanOverStm-1,
					  9:iGbEOverStm-1,
					  10:iE3PkgWithLan,
					  11:i16E12WayXCPkgWithLan,
					  13:iGbE101001000OverStm-1,
					  14:i32E1XCPkg,
					  15:i4PortLanWithE1XCVlan,
					  16:iGbEOverStm-1Vlan"
		::= { pnSTDEventTrapItemVar 73 }

	eventItemPnSTDinvUpdateSubProtModule OBJECT-TYPE
		SYNTAX		INTEGER (0..3)
		ACCESS		read-only
		STATUS		mandatory
		DESCRIPTION	"SUB PROT Module
					  0:BLANK,
					  1:STM-1(OPTICAL),
					  2:WS/LAN,
					  3:WS"
		::= { pnSTDEventTrapItemVar 74 }

	eventItemPnSTDinvUpdateSummary OBJECT-TYPE
		SYNTAX		OCTET STRING (SIZE (2))
		ACCESS		read-only
		STATUS		mandatory
		DESCRIPTION	"Update Summary
						
					[Bit Description]
					  Bit 0 = CTRL (0:Not Update, 1:Updated)
					  Bit 1 = MODEM1
					  Bit 2 = MODEM2
					  Bit 3 = MAIN(WORK)
					  Bit 4 = SUB(PROT)
					  Bit 5 = ODU1
					  Bit 6 = ODU2
					  Bit 7 = CTRL PROGRAM VERSION
					  Bit 8 = TRU PROVISIONING INFO
					  Bit 9 = TRU FREQ INFO
					  Bit 10 = SUPPORTABILITY
					  Bit 11 = (FIXED to 0)
					  Bit 12 = (FIXED to 0)
					  Bit 13 = (FIXED to 0)
					  Bit 14 = (FIXED to 0)
					  Bit 15 = (FIXED to 0)"
		::= { pnSTDEventTrapItemVar 75 }

	eventItemPnSTDLanCollision OBJECT-TYPE
		SYNTAX		INTEGER (0..1)
		ACCESS		read-only
		STATUS		mandatory
		DESCRIPTION	"LAN COLLISION PORTx
					(x : 1-4)
					Indicates the status of any collision for the respective ports.
					*) The respective Port Collision Report function must be enabled (set to 'report')
					  0:Normal,
					  1:Collision"
		::= { pnSTDEventTrapItemVar 76 }

	eventItemPnSTDSCLanCollision OBJECT-TYPE
		SYNTAX		INTEGER (0..1)
		ACCESS		read-only
		STATUS		mandatory
		DESCRIPTION	"INTFC(2) LAN COLLISION PORTx
					(x : 1-2)
					  0:Normal,
					  1:Collision"
		::= { pnSTDEventTrapItemVar 77 }

	eventItemPnSTDAPSStatus OBJECT-TYPE
		SYNTAX		INTEGER (0..1)
		ACCESS		read-only
		STATUS		mandatory
		DESCRIPTION	"APS STATUS
					APS Online Status - indicates route when APS is available.
					  0:Working,
					  1:Protection"
		::= { pnSTDEventTrapItemVar 78 }

	eventItemPnSTDAtpcPowerModeStatus OBJECT-TYPE
		SYNTAX		INTEGER (0..1)
		ACCESS		read-only
		STATUS		mandatory
		DESCRIPTION	"ATPC POWER MODE
					  0:Normal,
					  1:Power Mode"
		::= { pnSTDEventTrapItemVar 80 }

	eventItemPnSTDAuxOutput OBJECT-TYPE
		SYNTAX		INTEGER (0..1)
		ACCESS		read-only
		STATUS		mandatory
		DESCRIPTION	"ITEM NAME(OUTPUT-x)
					(x : 1-4)
					  0:(STATUS STRING),
					  1:(STATUS STRING)"
		::= { pnSTDEventTrapItemVar 81 }

	eventItemPnSTDMMCMount OBJECT-TYPE
		SYNTAX		INTEGER (0..1)
		ACCESS		read-only
		STATUS		mandatory
		DESCRIPTION	"MMC MOUNT
					  0:Off,
					  1:On"
		::= { pnSTDEventTrapItemVar 82 }

	eventItemPnSTDAPSLockinStatus OBJECT-TYPE
		SYNTAX		INTEGER (0..1)
		ACCESS		read-only
		STATUS		mandatory
		DESCRIPTION	"Lockin Status
					  0:normal,
					  1:lockin"
		::= { pnSTDEventTrapItemVar 83 }

	eventItemPnSTDMaintLoopback1Prot OBJECT-TYPE
		SYNTAX		INTEGER (0..1)
		ACCESS		read-only
		STATUS		mandatory
		DESCRIPTION	"MAIN LOOPBACK-1 INTFC(2)
					  0:Off,
					  1:On"
		::= { pnSTDEventTrapItemVar 84 }

	eventItemPnSTDMaintTxSWMode OBJECT-TYPE
		SYNTAX		INTEGER (0..3)
		ACCESS		read-only
		STATUS		mandatory
		DESCRIPTION	"Maint TxSW Mode
					  0:auto-no1,
					  1:auto-no2,
					  2:manual-no1,
					  3:manual-no2"
		::= { pnSTDEventTrapItemVar 85 }

	eventItemPnSTDMaintRxSWMode OBJECT-TYPE
		SYNTAX		INTEGER (0..3)
		ACCESS		read-only
		STATUS		mandatory
		DESCRIPTION	"Maint RxSW Mode
					  0:auto-no1,
					  1:auto-no2,
					  2:manual-no1,
					  3:manual-no2"
		::= { pnSTDEventTrapItemVar 86 }

	eventItemPnSTDMaintAPSSWMode OBJECT-TYPE
		SYNTAX		INTEGER (0..3)
		ACCESS		read-only
		STATUS		mandatory
		DESCRIPTION	"Maint APSSW Mode
					  0:auto-working,
					  1:auto-protection,
					  2:manual-working,
					  3:manual-protection"
		::= { pnSTDEventTrapItemVar 87 }

	eventItemPnSTDGbELinkLossForward OBJECT-TYPE
		SYNTAX		INTEGER (0..1)
		ACCESS		read-only
		STATUS		mandatory
		DESCRIPTION "GbE LLF Port
					  0:Normal,
					  1:under-execution"
		::= { pnSTDEventTrapItemVar 88 }

	eventItemPnSTDGbESpeedDuplex OBJECT-TYPE
		SYNTAX		INTEGER
		ACCESS		read-only
		STATUS		mandatory
		DESCRIPTION "GbE Speed & Duplex
					[Bit Description]
					  11xxxx:1000M(SPEED-INITIAL)
					  10xxxx:1000M(SPEED)
					  01xxxx:100M(SPEED)
					  00xxxx:10M(SPEED)
					  xx1xxx:MDIX(MDIX)
					  xx0xxx:MDI(MDIX)
					  xxx1xx:FORCED(FORCED MODE)
					  xxx0xx:AUTONEGO(FORCED MODE)
					  xxxx1x:FULL(FULL DUPLEX)
					  xxxx0x:HALF(FULL DUPLEX)
					  xxxxx1:MASTER(MASTER/SLAVE)
					  xxxxx0:SLAVE(MASTER/SLAVE)"
		::= { pnSTDEventTrapItemVar 89 }

	eventItemPnSTDMaintLoopback3CH OBJECT-TYPE
		SYNTAX		OCTET STRING (SIZE (6))
		ACCESS		read-only
		STATUS		mandatory
		DESCRIPTION "MAIN CH LOOPBACK-2(DIR-B)(CHxx)
					  0:Off,
					  1:On"
		::= { pnSTDEventTrapItemVar 90 }

	eventItemPnSTDVlanPortSetting OBJECT-TYPE
		SYNTAX		OCTET STRING (SIZE (33))
		ACCESS		read-only
		STATUS		mandatory
		DESCRIPTION	"VLAN PORT SETTING
					  Byte 0 = SWITCHING FUNCTION
					       (0:INVALID, 1:DISABLED(No Report), 2:ENABLED(Report))
					  Byte 1 = MAC ADDRESS LEARNING
					       (0:INVALID, 1:OFF, 2:ON)
					  Byte 2 = 2M FRAMING
					  Byte 3 = 2M FRAMING --Not Used
					       (0:INVALID, 1:UNFRAMED, 2:PCM31C(FAS+CRC), 3:PCM31(FAS),
					        4:PCM30C(MFAS+CRC), 5:PCM30(MFAS))
					  Byte 4 = MAIN LAN LINK DOWN CONTROL
					       (0:INVALID,
					        1:DISABLED,
					        2:RADIO ONLY,
					        3:RADIO+LLF(ANY PORT),
					        4:RADIO+LLF(ALL PORT),
					        5-9:reserved,
					        10:GbE RADIO ONLY,
					        11:GbE RADIO+LLF(ANY PORT),
					        12:GbE RADIO+LLF(ALL PORT),
					        13-19:reserved,
					        20:DIR-A RADIO ONLY,
					        21:DIR-B RADIO ONLY,
					        22:DIR-A/DIR-B RADIO ONLY,
					        23:DIR-A RADIO+LLF(ANY PORT),
					        24:DIR-B RADIO+LLF(ANY PORT),
					        25:DIR-A RADIO+LLF(ALL PORT),
					        26:DIR-B RADIO+LLF(ALL PORT),
					        27:DIR-A/DIR-B RADIO+LLF(ALL PORT))
					  Byte 6 Not Used
					  Byte 7 Not Used
					
					  Byte 8 = LAN PORT1 USAGE
					        0:INVALID
					        1:NOT USED
					        2:USED
					  Byte 9 = SPEED & DUPLEX PORT1
					       (0:INVALID,2:AUTONEG(AUTO 1000M FULL DUPLEX),
					        3:AUTONEG(AUTO-MDI/MDIX),
					        6:100M-FULL(MDI),7:100M-FULL(MDIX),
					        8:100M-HALF(MDI),9:100M-HALF(MDIX),
					        10:10M-FULL(MDI),11:10M-FULL(MDIX),
					        12:10M-HALF(MDI),13:10M-HALF(MDIX))
					  Byte 10 = LINK LOSS FORWARDING PORT1
					       (0:INVALID, 1:DISABLED, 2:ENABLED)
					  Byte 11 = COLLISION REPORT PORT1
					       (0:INVALID, 1:NOT REPORT, 2:REPORT)
					  Byte 12 = FLOW CONTROL PORT1
					       (0:INVALID, 1:OFF, 2:ON)
					
					  Byte 16 = LAN PORT2 USAGE
					        0:INVALID
					        1:NOT USED
					        2:USED
					  Byte 17 = SPEED & DUPLEX PORT2
					       (0:INVALID,3:AUTONEG(AUTO-MDI/MDIX),
					        6:100M-FULL(MDI),7:100M-FULL(MDIX),
					        8:100M-HALF(MDI),9:100M-HALF(MDIX),
					        10:10M-FULL(MDI),11:10M-FULL(MDIX),
					        12:10M-HALF(MDI),13:10M-HALF(MDIX))
					  Byte 18 = LINK LOSS FORWARDING PORT2
					       (0:INVALID, 1:DISABLED, 2:ENABLED)
					  Byte 19 = COLLISION REPORT PORT2
					       (0:INVALID, 1:NOT REPORT, 2:REPORT)
					  Byte 20 = FLOW CONTROL PORT2
					       (0:INVALID, 1:OFF, 2:ON)
					
					  Byte 24 = LAN PORT3 USAGE
					        0:INVALID
					        1:NOT USED
					        2:USED
					  Byte 25 = SPEED & DUPLEX PORT3
					       (0:INVALID,3:AUTONEG(AUTO-MDI/MDIX),
					        6:100M-FULL(MDI),7:100M-FULL(MDIX),
					        8:100M-HALF(MDI),9:100M-HALF(MDIX),
					        10:10M-FULL(MDI),11:10M-FULL(MDIX),
					        12:10M-HALF(MDI),13:10M-HALF(MDIX))
					  Byte 26 = LINK LOSS FORWARDING PORT3
					       (0:INVALID, 1:DISABLED, 2:ENABLED)
					  Byte 27 = COLLISION REPORT PORT3
					       (0:INVALID, 1:NOT REPORT, 2:REPORT)
					  Byte 28 = FLOW CONTROL PORT3
					       (0:INVALID, 1:OFF, 2:ON)
					
					  Byte 32 = GbE MEDIA TYPE
					       (0:INVALID, 1:SFP, 2:RJ-45)"
		::= { pnSTDEventTrapItemVar 91 }

	eventItemPnSTDVlanPort4Setting OBJECT-TYPE
		SYNTAX		OCTET STRING (SIZE (8))
		ACCESS		read-only
		STATUS		mandatory
		DESCRIPTION	"VLAN PORT4 SETTING
					  Byte 0 = LAN PORT4 USAGE
					        0:INVALID
					        1:NOT USED
					        2:USED
					  Byte 1 = SPEED & DUPLEX PORT4
					       (0:INVALID,3:AUTONEG(AUTO-MDI/MDIX),
					        6:100M-FULL(MDI),7:100M-FULL(MDIX),
					        8:100M-HALF(MDI),9:100M-HALF(MDIX),
					        10:10M-FULL(MDI),11:10M-FULL(MDIX),
					        12:10M-HALF(MDI),13:10M-HALF(MDIX))
					  Byte 2 = LINK LOSS FORWARDING PORT4
					       (0:INVALID, 1:DISABLED, 2:ENABLED)
					  Byte 3 = COLLISION REPORT PORT4
					       (0:INVALID, 1:NOT REPORT, 2:REPORT)
					  Byte 4 = FLOW CONTROL PORT4
						(0:INVALID, 1:OFF, 2:ON)"
		::= { pnSTDEventTrapItemVar 92 }

	eventItemPnSTDVlanSetting OBJECT-TYPE
		SYNTAX		OCTET STRING (SIZE (352))
		ACCESS		read-only
		STATUS		mandatory
		DESCRIPTION	"VLAN SETTING
					  Byte 0 = VLAN MODE
					       (0:INVALID,1:DISABLE,2:PORT VLAN,
					        3:TAG VLAN,4:PORT VLAN + TAG VLAN,
					        5:DOUBLE TAG VLAN)
					  Byte 8 = PORT VLAN GROUP1
					  Byte 9 = PORT VLAN GROUP2
					    ...
					  Byte 14 = PORT VLAN GROUP7
					  Byte 15 = PORT VLAN GROUP8
					
					  Byte 24-27 = TAG VLAN GROUP1
					  Byte 28-31 = TAG VLAN GROUP2
					    ...
					  Byte 272-275 = TAG VLAN GROUP63
					  Byte 276-279 = TAG VLAN GROUP64
					
					  Byte 284-287 = DEFAULT TAG PORT1
					  Byte 288-291 = DEFAULT TAG PORT2
					  Byte 292-295 = DEFAULT TAG PORT3
					  Byte 296-299 = DEFAULT TAG PORT4
					
					  Byte 300 = INVALID VID FRAME HANDLING
					       (0:INVALID,1:DROP,2:FORWARD)
					  Byte 301 = NON TAG FRAME HANDLING
					       (0:INVALID,1:DROP,2:FORWARD)"
		::= { pnSTDEventTrapItemVar 93 }

	eventItemPnSTDQosSetting OBJECT-TYPE
		SYNTAX		OCTET STRING (SIZE (128))
		ACCESS		read-only
		STATUS		mandatory
		DESCRIPTION	"QoS SETTING
					  Byte 0 = QoS MODE
					       (0:INVALID,1:DISABLE,2:802.1p CoS,3:DSCP,4:ToS)
					  Byte 1 = QUEUE CONTROL MODE
					       (0:INVALID,1:WRR,2:SP(PQ3)+WRR(PQ2-0))
					  Byte 2 = WRR WEIGHT
					       (0: INVALID,1: 6:3:2:1,2: 12:6:3:1,3: 24:12:6:1,4: 48:24:12:1)
					
					  Byte 3 = 802.1Q USER PRIORITY 000
					  :
					  Byte 10 = 802.1Q USER PRIORITY 111
					       (0:INVALID,1:PQ0,2:PQ1,3:PQ2,4:PQ3)
					
					  Byte 11 = DSCP PRIORITY 000000
					  :
					  Byte 74 = DSCP PRIORITY 111111
					       (0:INVALID,1:PQ0,2:PQ1,3:PQ2,4:PQ3)
					
					  Byte 75 = ToS PRIORITY 000
					  :
					  Byte 82 = ToS PRIORITY 111
					       (0:INVALID,1:PQ0,2:PQ1,3:PQ2,4:PQ3)"
		::= { pnSTDEventTrapItemVar 94 }

	pnSTDStatusTrapItemVar OBJECT IDENTIFIER
		::= { pnSTDTrapItemVar 5 }

	statusItemPnSTDAuxInput OBJECT-TYPE
		SYNTAX		INTEGER (0..1)
		ACCESS		read-only
		STATUS		mandatory
		DESCRIPTION	"ITEM NAME(INPUT-x)
					(x : 1-6)
					  0:(STATUS STRING),
					  1:(STATUS STRING)
					severity=clear(0),invalid(ELSE)
					alarmType=invalid
					probableCause=invalid"
		::= { pnSTDStatusTrapItemVar 1 }

	pnSTDSystemTrapItemVar OBJECT IDENTIFIER
		::= { pnSTDTrapItemVar 8 }

	systemItemPnSTDLocalUpdate OBJECT-TYPE
		SYNTAX		INTEGER
		ACCESS		read-only
		STATUS		mandatory
		::= { pnSTDSystemTrapItemVar 2 }

	pnSTDEventTrapItemVar2 OBJECT IDENTIFIER
		::= { pnSTDTrapItemVar 17 }

	eventItemPnSTDMainLanModeSetting OBJECT-TYPE
		SYNTAX		INTEGER (0..2)
		ACCESS		read-only
		STATUS		mandatory
		DESCRIPTION	"MAIN LAN MODE SETTING
					  0:Invalid,
					  1:ENH NODAL Mode,
					  2:STD Mode"
		::= { pnSTDEventTrapItemVar2 1 }

	totalSummaryTrap	TRAP-TYPE
		ENTERPRISE	pasoNeoSTD
		VARIABLES	{
					  trapSequenceNumber,
					  trapDate,
					  trapTime,
					  trapSource,
					  severity,
					  alarmType,
					  probableCause,
					  totalSummaryItem
					}
		::= 101

	partialSummaryTrapTRU	TRAP-TYPE
		ENTERPRISE	pasoNeoSTD
		VARIABLES	{
					  trapSequenceNumber,
					  trapDate,
					  trapTime,
					  trapSource,
					  severity,
					  alarmType,
					  probableCause,
					  partialSummaryItemTRU
					}
		::= 201

	partialSummaryTrapINTFC1	TRAP-TYPE
		ENTERPRISE	pasoNeoSTD
		VARIABLES	{
					  trapSequenceNumber,
					  trapDate,
					  trapTime,
					  trapSource,
					  severity,
					  alarmType,
					  probableCause,
					  partialSummaryItemINTFC1
					}
		::= 202

	partialSummaryTrapCTRL	TRAP-TYPE
		ENTERPRISE	pasoNeoSTD
		VARIABLES	{
					  trapSequenceNumber,
					  trapDate,
					  trapTime,
					  trapSource,
					  severity,
					  alarmType,
					  probableCause,
					  partialSummaryItemCTRL
					}
		::= 203

	partialSummaryTrapAux	TRAP-TYPE
		ENTERPRISE	pasoNeoSTD
		VARIABLES	{
					  trapSequenceNumber,
					  trapDate,
					  trapTime,
					  trapSource,
					  severity,
					  alarmType,
					  probableCause,
					  partialSummaryItemAux
					}
		::= 204

	partialSummaryTrapLpm	TRAP-TYPE
		ENTERPRISE	pasoNeoSTD
		VARIABLES	{
					  trapSequenceNumber,
					  trapDate,
					  trapTime,
					  trapSource,
					  severity,
					  alarmType,
					  probableCause,
					  partialSummaryItemLpm
					}
		::= 205

	partialSummaryTrapINTFC2	TRAP-TYPE
		ENTERPRISE	pasoNeoSTD
		VARIABLES	{
					  trapSequenceNumber,
					  trapDate,
					  trapTime,
					  trapSource,
					  severity,
					  alarmType,
					  probableCause,
					  partialSummaryItemINTFC2
					}
		::= 206

	partialSummaryTrapMODEM	TRAP-TYPE
		ENTERPRISE	pasoNeoSTD
		VARIABLES	{
					  trapSequenceNumber,
					  trapDate,
					  trapTime,
					  trapSource,
					  severity,
					  alarmType,
					  probableCause,
					  partialSummaryItemMODEM
					}
		::= 207

	alarmTrapPnSTDTxPowerAlarm	TRAP-TYPE
		ENTERPRISE	pasoNeoSTD
		VARIABLES	{
					  trapSequenceNumber,
					  trapDate,
					  trapTime,
					  trapSource,
					  severity,
					  alarmType,
					  probableCause,
					  alarmItemPnSTDTxPowerAlarm
					}
		::= 301

	alarmTrapPnSTDTxInputAlarm	TRAP-TYPE
		ENTERPRISE	pasoNeoSTD
		VARIABLES	{
					  trapSequenceNumber,
					  trapDate,
					  trapTime,
					  trapSource,
					  severity,
					  alarmType,
					  probableCause,
					  alarmItemPnSTDTxInputAlarm
					}
		::= 302

	alarmTrapPnSTDRxLevelAlarm	TRAP-TYPE
		ENTERPRISE	pasoNeoSTD
		VARIABLES	{
					  trapSequenceNumber,
					  trapDate,
					  trapTime,
					  trapSource,
					  severity,
					  alarmType,
					  probableCause,
					  alarmItemPnSTDRxLevelAlarm
					}
		::= 303

	alarmTrapPnSTDApcAlarm	TRAP-TYPE
		ENTERPRISE	pasoNeoSTD
		VARIABLES	{
					  trapSequenceNumber,
					  trapDate,
					  trapTime,
					  trapSource,
					  severity,
					  alarmType,
					  probableCause,
					  alarmItemPnSTDApcAlarm
					}
		::= 304

	alarmTrapPnSTDTRUCPUAlarm	TRAP-TYPE
		ENTERPRISE	pasoNeoSTD
		VARIABLES	{
					  trapSequenceNumber,
					  trapDate,
					  trapTime,
					  trapSource,
					  severity,
					  alarmType,
					  probableCause,
					  alarmItemPnSTDTRUCPUAlarm
					}
		::= 305

	alarmTrapPnSTDModemAlarm	TRAP-TYPE
		ENTERPRISE	pasoNeoSTD
		VARIABLES	{
					  trapSequenceNumber,
					  trapDate,
					  trapTime,
					  trapSource,
					  severity,
					  alarmType,
					  probableCause,
					  alarmItemPnSTDModemAlarm
					}
		::= 306

	alarmTrapPnSTDModemUneq	TRAP-TYPE
		ENTERPRISE	pasoNeoSTD
		VARIABLES	{
					  trapSequenceNumber,
					  trapDate,
					  trapTime,
					  trapSource,
					  severity,
					  alarmType,
					  probableCause,
					  alarmItemPnSTDModemUneq
					}
		::= 307

	alarmTrapPnSTDHighBERAlarm	TRAP-TYPE
		ENTERPRISE	pasoNeoSTD
		VARIABLES	{
					  trapSequenceNumber,
					  trapDate,
					  trapTime,
					  trapSource,
					  severity,
					  alarmType,
					  probableCause,
					  alarmItemPnSTDHighBERAlarm
					}
		::= 308

	alarmTrapPnSTDLowBERAlarm	TRAP-TYPE
		ENTERPRISE	pasoNeoSTD
		VARIABLES	{
					  trapSequenceNumber,
					  trapDate,
					  trapTime,
					  trapSource,
					  severity,
					  alarmType,
					  probableCause,
					  alarmItemPnSTDLowBERAlarm
					}
		::= 309

	alarmTrapPnSTDModAlarm	TRAP-TYPE
		ENTERPRISE	pasoNeoSTD
		VARIABLES	{
					  trapSequenceNumber,
					  trapDate,
					  trapTime,
					  trapSource,
					  severity,
					  alarmType,
					  probableCause,
					  alarmItemPnSTDModAlarm
					}
		::= 310

	alarmTrapPnSTDDemAlarm	TRAP-TYPE
		ENTERPRISE	pasoNeoSTD
		VARIABLES	{
					  trapSequenceNumber,
					  trapDate,
					  trapTime,
					  trapSource,
					  severity,
					  alarmType,
					  probableCause,
					  alarmItemPnSTDDemAlarm
					}
		::= 311

	alarmTrapPnSTDXIfLevelAlarm	TRAP-TYPE
		ENTERPRISE	pasoNeoSTD
		VARIABLES	{
					  trapSequenceNumber,
					  trapDate,
					  trapTime,
					  trapSource,
					  severity,
					  alarmType,
					  probableCause,
					  alarmItemPnSTDXIfLevelAlarm
					}
		::= 312

	alarmTrapPnSTDXContAlarm	TRAP-TYPE
		ENTERPRISE	pasoNeoSTD
		VARIABLES	{
					  trapSequenceNumber,
					  trapDate,
					  trapTime,
					  trapSource,
					  severity,
					  alarmType,
					  probableCause,
					  alarmItemPnSTDXContAlarm
					}
		::= 313

	alarmTrapPnSTDPSAlarm	TRAP-TYPE
		ENTERPRISE	pasoNeoSTD
		VARIABLES	{
					  trapSequenceNumber,
					  trapDate,
					  trapTime,
					  trapSource,
					  severity,
					  alarmType,
					  probableCause,
					  alarmItemPnSTDPSAlarm
					}
		::= 314

	alarmTrapPnSTDIfCableShort	TRAP-TYPE
		ENTERPRISE	pasoNeoSTD
		VARIABLES	{
					  trapSequenceNumber,
					  trapDate,
					  trapTime,
					  trapSource,
					  severity,
					  alarmType,
					  probableCause,
					  alarmItemPnSTDIfCableShort
					}
		::= 315

	alarmTrapPnSTDLof	TRAP-TYPE
		ENTERPRISE	pasoNeoSTD
		VARIABLES	{
					  trapSequenceNumber,
					  trapDate,
					  trapTime,
					  trapSource,
					  severity,
					  alarmType,
					  probableCause,
					  alarmItemPnSTDLof
					}
		::= 316

	alarmTrapPnSTDCableEQLAlarm	TRAP-TYPE
		ENTERPRISE	pasoNeoSTD
		VARIABLES	{
					  trapSequenceNumber,
					  trapDate,
					  trapTime,
					  trapSource,
					  severity,
					  alarmType,
					  probableCause,
					  alarmItemPnSTDCableEQLAlarm
					}
		::= 317

	alarmTrapPnSTDXRefAlarm	TRAP-TYPE
		ENTERPRISE	pasoNeoSTD
		VARIABLES	{
					  trapSequenceNumber,
					  trapDate,
					  trapTime,
					  trapSource,
					  severity,
					  alarmType,
					  probableCause,
					  alarmItemPnSTDXRefAlarm
					}
		::= 318

	alarmTrapPnSTDIntfcMAlarm	TRAP-TYPE
		ENTERPRISE	pasoNeoSTD
		VARIABLES	{
					  trapSequenceNumber,
					  trapDate,
					  trapTime,
					  trapSource,
					  severity,
					  alarmType,
					  probableCause,
					  alarmItemPnSTDIntfcMAlarm
					}
		::= 319

	alarmTrapPnSTDIntfcMUneq	TRAP-TYPE
		ENTERPRISE	pasoNeoSTD
		VARIABLES	{
					  trapSequenceNumber,
					  trapDate,
					  trapTime,
					  trapSource,
					  severity,
					  alarmType,
					  probableCause,
					  alarmItemPnSTDIntfcMUneq
					}
		::= 320

	alarmTrapPnSTDInputLos	TRAP-TYPE
		ENTERPRISE	pasoNeoSTD
		VARIABLES	{
					  trapSequenceNumber,
					  trapDate,
					  trapTime,
					  trapSource,
					  severity,
					  alarmType,
					  probableCause,
					  alarmItemPnSTDInputLos
					}
		::= 321

	alarmTrapPnSTDLosMUXWork	TRAP-TYPE
		ENTERPRISE	pasoNeoSTD
		VARIABLES	{
					  trapSequenceNumber,
					  trapDate,
					  trapTime,
					  trapSource,
					  severity,
					  alarmType,
					  probableCause,
					  alarmItemPnSTDLosMUXWork
					}
		::= 323

	alarmTrapPnSTDLosDMRWork	TRAP-TYPE
		ENTERPRISE	pasoNeoSTD
		VARIABLES	{
					  trapSequenceNumber,
					  trapDate,
					  trapTime,
					  trapSource,
					  severity,
					  alarmType,
					  probableCause,
					  alarmItemPnSTDLosDMRWork
					}
		::= 324

	alarmTrapPnSTDUsageError	TRAP-TYPE
		ENTERPRISE	pasoNeoSTD
		VARIABLES	{
					  trapSequenceNumber,
					  trapDate,
					  trapTime,
					  trapSource,
					  severity,
					  alarmType,
					  probableCause,
					  alarmItemPnSTDUsageError
					}
		::= 325

	alarmTrapPnSTDLink	TRAP-TYPE
		ENTERPRISE	pasoNeoSTD
		VARIABLES	{
					  trapSequenceNumber,
					  trapDate,
					  trapTime,
					  trapSource,
					  severity,
					  alarmType,
					  probableCause,
					  alarmItemPnSTDLink
					}
		::= 326

	alarmTrapPnSTDE-BERMUXWork	TRAP-TYPE
		ENTERPRISE	pasoNeoSTD
		VARIABLES	{
					  trapSequenceNumber,
					  trapDate,
					  trapTime,
					  trapSource,
					  severity,
					  alarmType,
					  probableCause,
					  alarmItemPnSTDE-BERMUXWork
					}
		::= 328

	alarmTrapPnSTDE-BERDMRWork	TRAP-TYPE
		ENTERPRISE	pasoNeoSTD
		VARIABLES	{
					  trapSequenceNumber,
					  trapDate,
					  trapTime,
					  trapSource,
					  severity,
					  alarmType,
					  probableCause,
					  alarmItemPnSTDE-BERDMRWork
					}
		::= 329

	alarmTrapPnSTDSDMUXWork	TRAP-TYPE
		ENTERPRISE	pasoNeoSTD
		VARIABLES	{
					  trapSequenceNumber,
					  trapDate,
					  trapTime,
					  trapSource,
					  severity,
					  alarmType,
					  probableCause,
					  alarmItemPnSTDSDMUXWork
					}
		::= 330

	alarmTrapPnSTDSDDMRWork	TRAP-TYPE
		ENTERPRISE	pasoNeoSTD
		VARIABLES	{
					  trapSequenceNumber,
					  trapDate,
					  trapTime,
					  trapSource,
					  severity,
					  alarmType,
					  probableCause,
					  alarmItemPnSTDSDDMRWork
					}
		::= 331

	alarmTrapPnSTDIntfcSAlarm	TRAP-TYPE
		ENTERPRISE	pasoNeoSTD
		VARIABLES	{
					  trapSequenceNumber,
					  trapDate,
					  trapTime,
					  trapSource,
					  severity,
					  alarmType,
					  probableCause,
					  alarmItemPnSTDIntfcSAlarm
					}
		::= 332

	alarmTrapPnSTDIntfcSUneq	TRAP-TYPE
		ENTERPRISE	pasoNeoSTD
		VARIABLES	{
					  trapSequenceNumber,
					  trapDate,
					  trapTime,
					  trapSource,
					  severity,
					  alarmType,
					  probableCause,
					  alarmItemPnSTDIntfcSUneq
					}
		::= 333

	alarmTrapPnSTDLosMUXProt	TRAP-TYPE
		ENTERPRISE	pasoNeoSTD
		VARIABLES	{
					  trapSequenceNumber,
					  trapDate,
					  trapTime,
					  trapSource,
					  severity,
					  alarmType,
					  probableCause,
					  alarmItemPnSTDLosMUXProt
					}
		::= 334

	alarmTrapPnSTDE-BERMUXProt	TRAP-TYPE
		ENTERPRISE	pasoNeoSTD
		VARIABLES	{
					  trapSequenceNumber,
					  trapDate,
					  trapTime,
					  trapSource,
					  severity,
					  alarmType,
					  probableCause,
					  alarmItemPnSTDE-BERMUXProt
					}
		::= 335

	alarmTrapPnSTDE-BERDMRProt	TRAP-TYPE
		ENTERPRISE	pasoNeoSTD
		VARIABLES	{
					  trapSequenceNumber,
					  trapDate,
					  trapTime,
					  trapSource,
					  severity,
					  alarmType,
					  probableCause,
					  alarmItemPnSTDE-BERDMRProt
					}
		::= 336

	alarmTrapPnSTDSDMUXProt	TRAP-TYPE
		ENTERPRISE	pasoNeoSTD
		VARIABLES	{
					  trapSequenceNumber,
					  trapDate,
					  trapTime,
					  trapSource,
					  severity,
					  alarmType,
					  probableCause,
					  alarmItemPnSTDSDMUXProt
					}
		::= 337

	alarmTrapPnSTDSDDMRProt	TRAP-TYPE
		ENTERPRISE	pasoNeoSTD
		VARIABLES	{
					  trapSequenceNumber,
					  trapDate,
					  trapTime,
					  trapSource,
					  severity,
					  alarmType,
					  probableCause,
					  alarmItemPnSTDSDDMRProt
					}
		::= 338

	alarmTrapPnSTDWSLos	TRAP-TYPE
		ENTERPRISE	pasoNeoSTD
		VARIABLES	{
					  trapSequenceNumber,
					  trapDate,
					  trapTime,
					  trapSource,
					  severity,
					  alarmType,
					  probableCause,
					  alarmItemPnSTDWSLos
					}
		::= 339

	alarmTrapPnSTDSCLanLink	TRAP-TYPE
		ENTERPRISE	pasoNeoSTD
		VARIABLES	{
					  trapSequenceNumber,
					  trapDate,
					  trapTime,
					  trapSource,
					  severity,
					  alarmType,
					  probableCause,
					  alarmItemPnSTDSCLanLink
					}
		::= 340

	alarmTrapPnSTDCTRLAlarm	TRAP-TYPE
		ENTERPRISE	pasoNeoSTD
		VARIABLES	{
					  trapSequenceNumber,
					  trapDate,
					  trapTime,
					  trapSource,
					  severity,
					  alarmType,
					  probableCause,
					  alarmItemPnSTDCTRLAlarm
					}
		::= 342

	alarmTrapPnSTDAPSSWFail	TRAP-TYPE
		ENTERPRISE	pasoNeoSTD
		VARIABLES	{
					  trapSequenceNumber,
					  trapDate,
					  trapTime,
					  trapSource,
					  severity,
					  alarmType,
					  probableCause,
					  alarmItemPnSTDAPSSWFail
					}
		::= 344

	alarmTrapPnSTDTcn15minTotalOFS	TRAP-TYPE
		ENTERPRISE	pasoNeoSTD
		VARIABLES	{
					  trapSequenceNumber,
					  trapDate,
					  trapTime,
					  trapSource,
					  severity,
					  alarmType,
					  probableCause,
					  alarmItemPnSTDTcn15minTotalOFS
					}
		::= 346

	alarmTrapPnSTDTcn15minTotalUAS	TRAP-TYPE
		ENTERPRISE	pasoNeoSTD
		VARIABLES	{
					  trapSequenceNumber,
					  trapDate,
					  trapTime,
					  trapSource,
					  severity,
					  alarmType,
					  probableCause,
					  alarmItemPnSTDTcn15minTotalUAS
					}
		::= 347

	alarmTrapPnSTDTcn15minTotalES	TRAP-TYPE
		ENTERPRISE	pasoNeoSTD
		VARIABLES	{
					  trapSequenceNumber,
					  trapDate,
					  trapTime,
					  trapSource,
					  severity,
					  alarmType,
					  probableCause,
					  alarmItemPnSTDTcn15minTotalES
					}
		::= 348

	alarmTrapPnSTDTcn15minTotalSES	TRAP-TYPE
		ENTERPRISE	pasoNeoSTD
		VARIABLES	{
					  trapSequenceNumber,
					  trapDate,
					  trapTime,
					  trapSource,
					  severity,
					  alarmType,
					  probableCause,
					  alarmItemPnSTDTcn15minTotalSES
					}
		::= 349

	alarmTrapPnSTDTcn15minTotalBBE	TRAP-TYPE
		ENTERPRISE	pasoNeoSTD
		VARIABLES	{
					  trapSequenceNumber,
					  trapDate,
					  trapTime,
					  trapSource,
					  severity,
					  alarmType,
					  probableCause,
					  alarmItemPnSTDTcn15minTotalBBE
					}
		::= 350

	alarmTrapPnSTDTcn15minTotalSEP	TRAP-TYPE
		ENTERPRISE	pasoNeoSTD
		VARIABLES	{
					  trapSequenceNumber,
					  trapDate,
					  trapTime,
					  trapSource,
					  severity,
					  alarmType,
					  probableCause,
					  alarmItemPnSTDTcn15minTotalSEP
					}
		::= 351

	alarmTrapPnSTDTcn1dayTotalOFS	TRAP-TYPE
		ENTERPRISE	pasoNeoSTD
		VARIABLES	{
					  trapSequenceNumber,
					  trapDate,
					  trapTime,
					  trapSource,
					  severity,
					  alarmType,
					  probableCause,
					  alarmItemPnSTDTcn1dayTotalOFS
					}
		::= 358

	alarmTrapPnSTDTcn1dayTotalUAS	TRAP-TYPE
		ENTERPRISE	pasoNeoSTD
		VARIABLES	{
					  trapSequenceNumber,
					  trapDate,
					  trapTime,
					  trapSource,
					  severity,
					  alarmType,
					  probableCause,
					  alarmItemPnSTDTcn1dayTotalUAS
					}
		::= 359

	alarmTrapPnSTDTcn1dayTotalES	TRAP-TYPE
		ENTERPRISE	pasoNeoSTD
		VARIABLES	{
					  trapSequenceNumber,
					  trapDate,
					  trapTime,
					  trapSource,
					  severity,
					  alarmType,
					  probableCause,
					  alarmItemPnSTDTcn1dayTotalES
					}
		::= 360

	alarmTrapPnSTDTcn1dayTotalSES	TRAP-TYPE
		ENTERPRISE	pasoNeoSTD
		VARIABLES	{
					  trapSequenceNumber,
					  trapDate,
					  trapTime,
					  trapSource,
					  severity,
					  alarmType,
					  probableCause,
					  alarmItemPnSTDTcn1dayTotalSES
					}
		::= 361

	alarmTrapPnSTDTcn1dayTotalBBE	TRAP-TYPE
		ENTERPRISE	pasoNeoSTD
		VARIABLES	{
					  trapSequenceNumber,
					  trapDate,
					  trapTime,
					  trapSource,
					  severity,
					  alarmType,
					  probableCause,
					  alarmItemPnSTDTcn1dayTotalBBE
					}
		::= 362

	alarmTrapPnSTDTcn1dayTotalSEP	TRAP-TYPE
		ENTERPRISE	pasoNeoSTD
		VARIABLES	{
					  trapSequenceNumber,
					  trapDate,
					  trapTime,
					  trapSource,
					  severity,
					  alarmType,
					  probableCause,
					  alarmItemPnSTDTcn1dayTotalSEP
					}
		::= 363

	alarmTrapPnSTDTcnUAEDMRWork	TRAP-TYPE
		ENTERPRISE	pasoNeoSTD
		VARIABLES	{
					  trapSequenceNumber,
					  trapDate,
					  trapTime,
					  trapSource,
					  severity,
					  alarmType,
					  probableCause,
					  alarmItemPnSTDTcnUAEDMRWork
					}
		::= 370

	alarmTrapPnSTDTcnUAEDMRProt	TRAP-TYPE
		ENTERPRISE	pasoNeoSTD
		VARIABLES	{
					  trapSequenceNumber,
					  trapDate,
					  trapTime,
					  trapSource,
					  severity,
					  alarmType,
					  probableCause,
					  alarmItemPnSTDTcnUAEDMRProt
					}
		::= 371



	alarmTrapPnSTDTcnTCS15minRxLev	TRAP-TYPE
		ENTERPRISE	pasoNeoSTD
		VARIABLES	{
					  trapSequenceNumber,
					  trapDate,
					  trapTime,
					  trapSource,
					  severity,
					  alarmType,
					  probableCause,
					  alarmItemPnSTDTcnTCS15minRxLev
					}
		::= 372

	alarmTrapPnSTDTcnTCS1dayRxLev	TRAP-TYPE
		ENTERPRISE	pasoNeoSTD
		VARIABLES	{
					  trapSequenceNumber,
					  trapDate,
					  trapTime,
					  trapSource,
					  severity,
					  alarmType,
					  probableCause,
					  alarmItemPnSTDTcnTCS1dayRxLev
					}
		::= 373

	alarmTrapPnSTDTRULORefAlarm	TRAP-TYPE
		ENTERPRISE	pasoNeoSTD
		VARIABLES	{
					  trapSequenceNumber,
					  trapDate,
					  trapTime,
					  trapSource,
					  severity,
					  alarmType,
					  probableCause,
					  alarmItemPnSTDTRULORefAlarm
					}
		::= 374

	alarmTrapPnSTDLofMUXWork	TRAP-TYPE
		ENTERPRISE	pasoNeoSTD
		VARIABLES	{
					  trapSequenceNumber,
					  trapDate,
					  trapTime,
					  trapSource,
					  severity,
					  alarmType,
					  probableCause,
					  alarmItemPnSTDLofMUXWork
					}
		::= 375

	alarmTrapPnSTDLofDMRWork	TRAP-TYPE
		ENTERPRISE	pasoNeoSTD
		VARIABLES	{
					  trapSequenceNumber,
					  trapDate,
					  trapTime,
					  trapSource,
					  severity,
					  alarmType,
					  probableCause,
					  alarmItemPnSTDLofDMRWork
					}
		::= 376

	alarmTrapPnSTDLosDMRProt	TRAP-TYPE
		ENTERPRISE	pasoNeoSTD
		VARIABLES	{
					  trapSequenceNumber,
					  trapDate,
					  trapTime,
					  trapSource,
					  severity,
					  alarmType,
					  probableCause,
					  alarmItemPnSTDLosDMRProt
					}
		::= 377

	alarmTrapPnSTDLofMUXProt	TRAP-TYPE
		ENTERPRISE	pasoNeoSTD
		VARIABLES	{
					  trapSequenceNumber,
					  trapDate,
					  trapTime,
					  trapSource,
					  severity,
					  alarmType,
					  probableCause,
					  alarmItemPnSTDLofMUXProt
					}
		::= 378

	alarmTrapPnSTDLofDMRProt	TRAP-TYPE
		ENTERPRISE	pasoNeoSTD
		VARIABLES	{
					  trapSequenceNumber,
					  trapDate,
					  trapTime,
					  trapSource,
					  severity,
					  alarmType,
					  probableCause,
					  alarmItemPnSTDLofDMRProt
					}
		::= 379

	alarmTrapPnSTDStm1TFWorkAlarm	TRAP-TYPE
		ENTERPRISE	pasoNeoSTD
		VARIABLES	{
					  trapSequenceNumber,
					  trapDate,
					  trapTime,
					  trapSource,
					  severity,
					  alarmType,
					  probableCause,
					  alarmItemPnSTDStm1TFWorkAlarm
					}
		::= 380

	alarmTrapPnSTDStm1TFProtAlarm	TRAP-TYPE
		ENTERPRISE	pasoNeoSTD
		VARIABLES	{
					  trapSequenceNumber,
					  trapDate,
					  trapTime,
					  trapSource,
					  severity,
					  alarmType,
					  probableCause,
					  alarmItemPnSTDStm1TFProtAlarm
					}
		::= 381

	alarmTrapPnSTDTcnUAEMUXWork	TRAP-TYPE
		ENTERPRISE	pasoNeoSTD
		VARIABLES	{
					  trapSequenceNumber,
					  trapDate,
					  trapTime,
					  trapSource,
					  severity,
					  alarmType,
					  probableCause,
					  alarmItemPnSTDTcnUAEMUXWork
					}
		::= 382

	alarmTrapPnSTDTcnUAEMUXProt	TRAP-TYPE
		ENTERPRISE	pasoNeoSTD
		VARIABLES	{
					  trapSequenceNumber,
					  trapDate,
					  trapTime,
					  trapSource,
					  severity,
					  alarmType,
					  probableCause,
					  alarmItemPnSTDTcnUAEMUXProt
					}
		::= 383

	alarmTrapPnSTDAuxClusterAlarm	TRAP-TYPE
		ENTERPRISE	pasoNeoSTD
		VARIABLES	{
					  trapSequenceNumber,
					  trapDate,
					  trapTime,
					  trapSource,
					  severity,
					  alarmType,
					  probableCause,
					  alarmItemPnSTDAuxClusterAlarm
					}
		::= 384

	alarmTrapPnSTDLinearizerFail	TRAP-TYPE
		ENTERPRISE	pasoNeoSTD
		VARIABLES	{
					  trapSequenceNumber,
					  trapDate,
					  trapTime,
					  trapSource,
					  severity,
					  alarmType,
					  probableCause,
					  alarmItemPnSTDLinearizerFail
					}
		::= 385

	alarmTrapPnSTDRouteID	TRAP-TYPE
		ENTERPRISE	pasoNeoSTD
		VARIABLES	{
					  trapSequenceNumber,
					  trapDate,
					  trapTime,
					  trapSource,
					  severity,
					  alarmType,
					  probableCause,
					  alarmItemPnSTDRouteID
					}
		::= 386

	alarmTrapPnSTDEarlyWarning	TRAP-TYPE
		ENTERPRISE	pasoNeoSTD
		VARIABLES	{
					  trapSequenceNumber,
					  trapDate,
					  trapTime,
					  trapSource,
					  severity,
					  alarmType,
					  probableCause,
					  alarmItemPnSTDEarlyWarning
					}
		::= 387

	alarmTrapPnSTDInputVoltage	TRAP-TYPE
		ENTERPRISE	pasoNeoSTD
		VARIABLES	{
					  trapSequenceNumber,
					  trapDate,
					  trapTime,
					  trapSource,
					  severity,
					  alarmType,
					  probableCause,
					  alarmItemPnSTDInputVoltage
					}
		::= 388

	alarmTrapPnSTDIntfcMTypeMismatch	TRAP-TYPE
		ENTERPRISE	pasoNeoSTD
		VARIABLES	{
					  trapSequenceNumber,
					  trapDate,
					  trapTime,
					  trapSource,
					  severity,
					  alarmType,
					  probableCause,
					  alarmItemPnSTDIntfcMTypeMismatch
					}
		::= 389

	alarmTrapPnSTDIntfcSTypeMismatch	TRAP-TYPE
		ENTERPRISE	pasoNeoSTD
		VARIABLES	{
					  trapSequenceNumber,
					  trapDate,
					  trapTime,
					  trapSource,
					  severity,
					  alarmType,
					  probableCause,
					  alarmItemPnSTDIntfcSTypeMismatch
					}
		::= 390

	alarmTrapPnSTDXpicModeMismatch	TRAP-TYPE
		ENTERPRISE	pasoNeoSTD
		VARIABLES	{
					  trapSequenceNumber,
					  trapDate,
					  trapTime,
					  trapSource,
					  severity,
					  alarmType,
					  probableCause,
					  alarmItemPnSTDXpicModeMismatch
					}
		::= 391

	alarmTrapPnSTDXControlAlarm	TRAP-TYPE
		ENTERPRISE	pasoNeoSTD
		VARIABLES	{
					  trapSequenceNumber,
					  trapDate,
					  trapTime,
					  trapSource,
					  severity,
					  alarmType,
					  probableCause,
					  alarmItemPnSTDXControlAlarm
					}
		::= 392

	alarmTrapPnSTDGbELink	TRAP-TYPE
		ENTERPRISE	pasoNeoSTD
		VARIABLES	{
					  trapSequenceNumber,
					  trapDate,
					  trapTime,
					  trapSource,
					  severity,
					  alarmType,
					  probableCause,
					  alarmItemPnSTDGbELink
					}
		::= 393

	alarmTrapPnSTDModemTypeMismatch	TRAP-TYPE
		ENTERPRISE	pasoNeoSTD
		VARIABLES	{
					  trapSequenceNumber,
					  trapDate,
					  trapTime,
					  trapSource,
					  severity,
					  alarmType,
					  probableCause,
					  alarmItemPnSTDModemTypeMismatch
					}
		::= 394

	alarmTrapPnSTDTRUTypeMismatch	TRAP-TYPE
		ENTERPRISE	pasoNeoSTD
		VARIABLES	{
					  trapSequenceNumber,
					  trapDate,
					  trapTime,
					  trapSource,
					  severity,
					  alarmType,
					  probableCause,
					  alarmItemPnSTDTRUTypeMismatch
					}
		::= 395

	alarmTrapPnSTDStackConnection	TRAP-TYPE
		ENTERPRISE	pasoNeoSTD
		VARIABLES	{
					  trapSequenceNumber,
					  trapDate,
					  trapTime,
					  trapSource,
					  severity,
					  alarmType,
					  probableCause,
					  alarmItemPnSTDStackConnection
					}
		::= 396

	eventTrapPnSTDConfigDataUp	TRAP-TYPE
		ENTERPRISE	pasoNeoSTD
		VARIABLES	{
					  trapSequenceNumber,
					  trapDate,
					  trapTime,
					  trapSource,
					  eventItemPnSTDConfigDataUp
					}
		::= 402

	eventTrapPnSTDTxMuteStatus	TRAP-TYPE
		ENTERPRISE	pasoNeoSTD
		VARIABLES	{
					  trapSequenceNumber,
					  trapDate,
					  trapTime,
					  trapSource,
					  eventItemPnSTDTxMuteStatus
					}
		::= 403

	eventTrapPnSTDTxSWStatus	TRAP-TYPE
		ENTERPRISE	pasoNeoSTD
		VARIABLES	{
					  trapSequenceNumber,
					  trapDate,
					  trapTime,
					  trapSource,
					  eventItemPnSTDTxSWStatus
					}
		::= 404

	eventTrapPnSTDSCLanLinkLossForward	TRAP-TYPE
		ENTERPRISE	pasoNeoSTD
		VARIABLES	{
					  trapSequenceNumber,
					  trapDate,
					  trapTime,
					  trapSource,
					  eventItemPnSTDSCLanLinkLossForward
					}
		::= 405

	eventTrapPnSTDRxSWStatus	TRAP-TYPE
		ENTERPRISE	pasoNeoSTD
		VARIABLES	{
					  trapSequenceNumber,
					  trapDate,
					  trapTime,
					  trapSource,
					  eventItemPnSTDRxSWStatus
					}
		::= 406

	eventTrapPnSTDXPICFuncStatus	TRAP-TYPE
		ENTERPRISE	pasoNeoSTD
		VARIABLES	{
					  trapSequenceNumber,
					  trapDate,
					  trapTime,
					  trapSource,
					  eventItemPnSTDXPICFuncStatus
					}
		::= 407

	eventTrapPnSTDLinearizerFunc	TRAP-TYPE
		ENTERPRISE	pasoNeoSTD
		VARIABLES	{
					  trapSequenceNumber,
					  trapDate,
					  trapTime,
					  trapSource,
					  eventItemPnSTDLinearizerFunc
					}
		::= 408

	eventTrapPnSTDSTM-1OutContWork	TRAP-TYPE
		ENTERPRISE	pasoNeoSTD
		VARIABLES	{
					  trapSequenceNumber,
					  trapDate,
					  trapTime,
					  trapSource,
					  eventItemPnSTDSTM-1OutContWork
					}
		::= 410

	eventTrapPnSTDAisGeneratedCH	TRAP-TYPE
		ENTERPRISE	pasoNeoSTD
		VARIABLES	{
					  trapSequenceNumber,
					  trapDate,
					  trapTime,
					  trapSource,
					  eventItemPnSTDAisGeneratedCH
					}
		::= 411

	eventTrapPnSTDAisReceivedCH	TRAP-TYPE
		ENTERPRISE	pasoNeoSTD
		VARIABLES	{
					  trapSequenceNumber,
					  trapDate,
					  trapTime,
					  trapSource,
					  eventItemPnSTDAisReceivedCH
					}
		::= 412

	eventTrapPnSTDLinkLossForward	TRAP-TYPE
		ENTERPRISE	pasoNeoSTD
		VARIABLES	{
					  trapSequenceNumber,
					  trapDate,
					  trapTime,
					  trapSource,
					  eventItemPnSTDLinkLossForward
					}
		::= 413

	eventTrapPnSTDSpeedDuplex	TRAP-TYPE
		ENTERPRISE	pasoNeoSTD
		VARIABLES	{
					  trapSequenceNumber,
					  trapDate,
					  trapTime,
					  trapSource,
					  eventItemPnSTDSpeedDuplex
					}
		::= 414

	eventTrapPnSTDInphaseWork	TRAP-TYPE
		ENTERPRISE	pasoNeoSTD
		VARIABLES	{
					  trapSequenceNumber,
					  trapDate,
					  trapTime,
					  trapSource,
					  eventItemPnSTDInphaseWork
					}
		::= 415

	eventTrapPnSTDSTM-1OutContProt	TRAP-TYPE
		ENTERPRISE	pasoNeoSTD
		VARIABLES	{
					  trapSequenceNumber,
					  trapDate,
					  trapTime,
					  trapSource,
					  eventItemPnSTDSTM-1OutContProt
					}
		::= 416

	eventTrapPnSTDInphaseProt	TRAP-TYPE
		ENTERPRISE	pasoNeoSTD
		VARIABLES	{
					  trapSequenceNumber,
					  trapDate,
					  trapTime,
					  trapSource,
					  eventItemPnSTDInphaseProt
					}
		::= 417

	eventTrapPnSTDWSAisGeneratedCH	TRAP-TYPE
		ENTERPRISE	pasoNeoSTD
		VARIABLES	{
					  trapSequenceNumber,
					  trapDate,
					  trapTime,
					  trapSource,
					  eventItemPnSTDWSAisGeneratedCH
					}
		::= 418

	eventTrapPnSTDWSAisReceivedCH	TRAP-TYPE
		ENTERPRISE	pasoNeoSTD
		VARIABLES	{
					  trapSequenceNumber,
					  trapDate,
					  trapTime,
					  trapSource,
					  eventItemPnSTDWSAisReceivedCH
					}
		::= 419

	eventTrapPnSTDCHUsage	TRAP-TYPE
		ENTERPRISE	pasoNeoSTD
		VARIABLES	{
					  trapSequenceNumber,
					  trapDate,
					  trapTime,
					  trapSource,
					  eventItemPnSTDCHUsage
					}
		::= 420

	eventTrapPnSTDCHCondition	TRAP-TYPE
		ENTERPRISE	pasoNeoSTD
		VARIABLES	{
					  trapSequenceNumber,
					  trapDate,
					  trapTime,
					  trapSource,
					  eventItemPnSTDCHCondition
					}
		::= 421

	eventTrapPnSTDCHImpedance	TRAP-TYPE
		ENTERPRISE	pasoNeoSTD
		VARIABLES	{
					  trapSequenceNumber,
					  trapDate,
					  trapTime,
					  trapSource,
					  eventItemPnSTDCHImpedance
					}
		::= 422

	eventTrapPnSTDMSAisGeneration	TRAP-TYPE
		ENTERPRISE	pasoNeoSTD
		VARIABLES	{
					  trapSequenceNumber,
					  trapDate,
					  trapTime,
					  trapSource,
					  eventItemPnSTDMSAisGeneration
					}
		::= 423

	eventTrapPnSTDDxcFunction	TRAP-TYPE
		ENTERPRISE	pasoNeoSTD
		VARIABLES	{
					  trapSequenceNumber,
					  trapDate,
					  trapTime,
					  trapSource,
					  eventItemPnSTDDxcFunction
					}
		::= 424

	eventTrapPnSTDDxcCHSetting	TRAP-TYPE
		ENTERPRISE	pasoNeoSTD
		VARIABLES	{
					  trapSequenceNumber,
					  trapDate,
					  trapTime,
					  trapSource,
					  eventItemPnSTDDxcCHSetting
					}
		::= 425

	eventTrapPnSTDGbELanCollision	TRAP-TYPE
		ENTERPRISE	pasoNeoSTD
		VARIABLES	{
					  trapSequenceNumber,
					  trapDate,
					  trapTime,
					  trapSource,
					  eventItemPnSTDGbELanCollision
					}
		::= 426

	eventTrapPnSTDBERThreshold	TRAP-TYPE
		ENTERPRISE	pasoNeoSTD
		VARIABLES	{
					  trapSequenceNumber,
					  trapDate,
					  trapTime,
					  trapSource,
					  eventItemPnSTDBERThreshold
					}
		::= 427

	eventTrapPnSTDSubIntfc	TRAP-TYPE
		ENTERPRISE	pasoNeoSTD
		VARIABLES	{
					  trapSequenceNumber,
					  trapDate,
					  trapTime,
					  trapSource,
					  eventItemPnSTDSubIntfc
					}
		::= 428

	eventTrapPnSTDSCAssign	TRAP-TYPE
		ENTERPRISE	pasoNeoSTD
		VARIABLES	{
					  trapSequenceNumber,
					  trapDate,
					  trapTime,
					  trapSource,
					  eventItemPnSTDSCAssign
					}
		::= 429

	eventTrapPnSTDLanPortSetting	TRAP-TYPE
		ENTERPRISE	pasoNeoSTD
		VARIABLES	{
					  trapSequenceNumber,
					  trapDate,
					  trapTime,
					  trapSource,
					  eventItemPnSTDLanPortSetting
					}
		::= 430

	eventTrapPnSTDAlsFunction	TRAP-TYPE
		ENTERPRISE	pasoNeoSTD
		VARIABLES	{
					  trapSequenceNumber,
					  trapDate,
					  trapTime,
					  trapSource,
					  eventItemPnSTDAlsFunction
					}
		::= 431

	eventTrapPnSTDTxPowerContValue	TRAP-TYPE
		ENTERPRISE	pasoNeoSTD
		VARIABLES	{
					  trapSequenceNumber,
					  trapDate,
					  trapTime,
					  trapSource,
					  eventItemPnSTDTxPowerContValue
					}
		::= 432

	eventTrapPnSTDSCLanSpeedDuplex	TRAP-TYPE
		ENTERPRISE	pasoNeoSTD
		VARIABLES	{
					  trapSequenceNumber,
					  trapDate,
					  trapTime,
					  trapSource,
					  eventItemPnSTDSCLanSpeedDuplex
					}
		::= 435

	eventTrapPnSTDSWCondTxRx	TRAP-TYPE
		ENTERPRISE	pasoNeoSTD
		VARIABLES	{
					  trapSequenceNumber,
					  trapDate,
					  trapTime,
					  trapSource,
					  eventItemPnSTDSWCondTxRx
					}
		::= 436

	eventTrapPnSTDSWCondAPS	TRAP-TYPE
		ENTERPRISE	pasoNeoSTD
		VARIABLES	{
					  trapSequenceNumber,
					  trapDate,
					  trapTime,
					  trapSource,
					  eventItemPnSTDSWCondAPS
					}
		::= 437

	eventTrapPnSTDRelayConfigData	TRAP-TYPE
		ENTERPRISE	pasoNeoSTD
		VARIABLES	{
					  trapSequenceNumber,
					  trapDate,
					  trapTime,
					  trapSource,
					  eventItemPnSTDRelayConfigData
					}
		::= 438

	eventTrapPnSTDRelayClusterAssign	TRAP-TYPE
		ENTERPRISE	pasoNeoSTD
		VARIABLES	{
					  trapSequenceNumber,
					  trapDate,
					  trapTime,
					  trapSource,
					  eventItemPnSTDRelayClusterAssign
					}
		::= 439

	eventTrapPnSTDTCNTreshold15minTotal	TRAP-TYPE
		ENTERPRISE	pasoNeoSTD
		VARIABLES	{
					  trapSequenceNumber,
					  trapDate,
					  trapTime,
					  trapSource,
					  eventItemPnSTDTCNTreshold15minTotal
					}
		::= 440

	eventTrapPnSTDTCNTreshold1dayTotal	TRAP-TYPE
		ENTERPRISE	pasoNeoSTD
		VARIABLES	{
					  trapSequenceNumber,
					  trapDate,
					  trapTime,
					  trapSource,
					  eventItemPnSTDTCNTreshold1dayTotal
					}
		::= 442

	eventTrapPnSTDXpicCondLOSignalFail	TRAP-TYPE
		ENTERPRISE	pasoNeoSTD
		VARIABLES	{
					  trapSequenceNumber,
					  trapDate,
					  trapTime,
					  trapSource,
					  eventItemPnSTDXpicCondLOSignalFail
					}
		::= 445

	eventTrapPnSTDEOWIntfcType	TRAP-TYPE
		ENTERPRISE	pasoNeoSTD
		VARIABLES	{
					  trapSequenceNumber,
					  trapDate,
					  trapTime,
					  trapSource,
					  eventItemPnSTDEOWIntfcType
					}
		::= 446

	eventTrapPnSTDAlarmCorrelation	TRAP-TYPE
		ENTERPRISE	pasoNeoSTD
		VARIABLES	{
					  trapSequenceNumber,
					  trapDate,
					  trapTime,
					  trapSource,
					  eventItemPnSTDAlarmCorrelation
					}
		::= 447

	eventTrapPnSTDPmonSelect	TRAP-TYPE
		ENTERPRISE	pasoNeoSTD
		VARIABLES	{
					  trapSequenceNumber,
					  trapDate,
					  trapTime,
					  trapSource,
					  eventItemPnSTDPmonSelect
					}
		::= 448

	eventTrapPnSTDMaintMode	TRAP-TYPE
		ENTERPRISE	pasoNeoSTD
		VARIABLES	{
					  trapSequenceNumber,
					  trapDate,
					  trapTime,
					  trapSource,
					  eventItemPnSTDMaintMode
					}
		::= 449

	eventTrapPnSTDMaintLoopback1CH	TRAP-TYPE
		ENTERPRISE	pasoNeoSTD
		VARIABLES	{
					  trapSequenceNumber,
					  trapDate,
					  trapTime,
					  trapSource,
					  eventItemPnSTDMaintLoopback1CH
					}
		::= 453

	eventTrapPnSTDMaintLoopback2CH	TRAP-TYPE
		ENTERPRISE	pasoNeoSTD
		VARIABLES	{
					  trapSequenceNumber,
					  trapDate,
					  trapTime,
					  trapSource,
					  eventItemPnSTDMaintLoopback2CH
					}
		::= 454

	eventTrapPnSTDMaintLoopback1Work	TRAP-TYPE
		ENTERPRISE	pasoNeoSTD
		VARIABLES	{
					  trapSequenceNumber,
					  trapDate,
					  trapTime,
					  trapSource,
					  eventItemPnSTDMaintLoopback1Work
					}
		::= 455

	eventTrapPnSTDMaintLoopback2	TRAP-TYPE
		ENTERPRISE	pasoNeoSTD
		VARIABLES	{
					  trapSequenceNumber,
					  trapDate,
					  trapTime,
					  trapSource,
					  eventItemPnSTDMaintLoopback2
					}
		::= 456

	eventTrapPnSTDMaintDADEAdjust	TRAP-TYPE
		ENTERPRISE	pasoNeoSTD
		VARIABLES	{
					  trapSequenceNumber,
					  trapDate,
					  trapTime,
					  trapSource,
					  eventItemPnSTDMaintDADEAdjust
					}
		::= 457

	eventTrapPnSTDMaintDADEAdjustEn	TRAP-TYPE
		ENTERPRISE	pasoNeoSTD
		VARIABLES	{
					  trapSequenceNumber,
					  trapDate,
					  trapTime,
					  trapSource,
					  eventItemPnSTDMaintDADEAdjustEn
					}
		::= 458

	eventTrapPnSTDMaintLanDeviceReset	TRAP-TYPE
		ENTERPRISE	pasoNeoSTD
		VARIABLES	{
					  trapSequenceNumber,
					  trapDate,
					  trapTime,
					  trapSource,
					  eventItemPnSTDMaintLanDeviceReset
					}
		::= 459

	eventTrapPnSTDMaintAlsRestart	TRAP-TYPE
		ENTERPRISE	pasoNeoSTD
		VARIABLES	{
					  trapSequenceNumber,
					  trapDate,
					  trapTime,
					  trapSource,
					  eventItemPnSTDMaintAlsRestart
					}
		::= 460

	eventTrapPnSTDMaintAlsManualRestart	TRAP-TYPE
		ENTERPRISE	pasoNeoSTD
		VARIABLES	{
					  trapSequenceNumber,
					  trapDate,
					  trapTime,
					  trapSource,
					  eventItemPnSTDMaintAlsManualRestart
					}
		::= 461

	eventTrapPnSTDMaintATPCManualControl	TRAP-TYPE
		ENTERPRISE	pasoNeoSTD
		VARIABLES	{
					  trapSequenceNumber,
					  trapDate,
					  trapTime,
					  trapSource,
					  eventItemPnSTDMaintATPCManualControl
					}
		::= 462

	eventTrapPnSTDMaintATPCManualContPower	TRAP-TYPE
		ENTERPRISE	pasoNeoSTD
		VARIABLES	{
					  trapSequenceNumber,
					  trapDate,
					  trapTime,
					  trapSource,
					  eventItemPnSTDMaintATPCManualContPower
					}
		::= 463

	eventTrapPnSTDMaintTxMuteControl	TRAP-TYPE
		ENTERPRISE	pasoNeoSTD
		VARIABLES	{
					  trapSequenceNumber,
					  trapDate,
					  trapTime,
					  trapSource,
					  eventItemPnSTDMaintTxMuteControl
					}
		::= 464

	eventTrapPnSTDMaintTxMuteContReleaseTime	TRAP-TYPE
		ENTERPRISE	pasoNeoSTD
		VARIABLES	{
					  trapSequenceNumber,
					  trapDate,
					  trapTime,
					  trapSource,
					  eventItemPnSTDMaintTxMuteContReleaseTime
					}
		::= 465

	eventTrapPnSTDMaintCW	TRAP-TYPE
		ENTERPRISE	pasoNeoSTD
		VARIABLES	{
					  trapSequenceNumber,
					  trapDate,
					  trapTime,
					  trapSource,
					  eventItemPnSTDMaintCW
					}
		::= 466

	eventTrapPnSTDMaintIfLoopback	TRAP-TYPE
		ENTERPRISE	pasoNeoSTD
		VARIABLES	{
					  trapSequenceNumber,
					  trapDate,
					  trapTime,
					  trapSource,
					  eventItemPnSTDMaintIfLoopback
					}
		::= 467

	eventTrapPnSTDMaintForcedXPICCont	TRAP-TYPE
		ENTERPRISE	pasoNeoSTD
		VARIABLES	{
					  trapSequenceNumber,
					  trapDate,
					  trapTime,
					  trapSource,
					  eventItemPnSTDMaintForcedXPICCont
					}
		::= 468

	eventTrapPnSTDMaintForcedLinearizerCont	TRAP-TYPE
		ENTERPRISE	pasoNeoSTD
		VARIABLES	{
					  trapSequenceNumber,
					  trapDate,
					  trapTime,
					  trapSource,
					  eventItemPnSTDMaintForcedLinearizerCont
					}
		::= 469

	eventTrapPnSTDMaintRFSubBandSelect	TRAP-TYPE
		ENTERPRISE	pasoNeoSTD
		VARIABLES	{
					  trapSequenceNumber,
					  trapDate,
					  trapTime,
					  trapSource,
					  eventItemPnSTDMaintRFSubBandSelect
					}
		::= 470

	eventTrapPnSTDMaintAntennaAlignMode	TRAP-TYPE
		ENTERPRISE	pasoNeoSTD
		VARIABLES	{
					  trapSequenceNumber,
					  trapDate,
					  trapTime,
					  trapSource,
					  eventItemPnSTDMaintAntennaAlignMode
					}
		::= 472

	eventTrapPnSTDinvUpdateMainWorkModule	TRAP-TYPE
		ENTERPRISE	pasoNeoSTD
		VARIABLES	{
					  trapSequenceNumber,
					  trapDate,
					  trapTime,
					  trapSource,
					  eventItemPnSTDinvUpdateMainWorkModule
					}
		::= 473

	eventTrapPnSTDinvUpdateSubProtModule	TRAP-TYPE
		ENTERPRISE	pasoNeoSTD
		VARIABLES	{
					  trapSequenceNumber,
					  trapDate,
					  trapTime,
					  trapSource,
					  eventItemPnSTDinvUpdateSubProtModule
					}
		::= 474

	eventTrapPnSTDinvUpdateSummary	TRAP-TYPE
		ENTERPRISE	pasoNeoSTD
		VARIABLES	{
					  trapSequenceNumber,
					  trapDate,
					  trapTime,
					  trapSource,
					  eventItemPnSTDinvUpdateSummary
					}
		::= 475

	eventTrapPnSTDLanCollision	TRAP-TYPE
		ENTERPRISE	pasoNeoSTD
		VARIABLES	{
					  trapSequenceNumber,
					  trapDate,
					  trapTime,
					  trapSource,
					  eventItemPnSTDLanCollision
					}
		::= 476

	eventTrapPnSTDSCLanCollision	TRAP-TYPE
		ENTERPRISE	pasoNeoSTD
		VARIABLES	{
					  trapSequenceNumber,
					  trapDate,
					  trapTime,
					  trapSource,
					  eventItemPnSTDSCLanCollision
					}
		::= 477

	eventTrapPnSTDAPSStatus	TRAP-TYPE
		ENTERPRISE	pasoNeoSTD
		VARIABLES	{
					  trapSequenceNumber,
					  trapDate,
					  trapTime,
					  trapSource,
					  eventItemPnSTDAPSStatus
					}
		::= 478

	eventTrapPnSTDAtpcPowerModeStatus	TRAP-TYPE
		ENTERPRISE	pasoNeoSTD
		VARIABLES	{
					  trapSequenceNumber,
					  trapDate,
					  trapTime,
					  trapSource,
					  eventItemPnSTDAtpcPowerModeStatus
					}
		::= 480

	eventTrapPnSTDAuxOutput	TRAP-TYPE
		ENTERPRISE	pasoNeoSTD
		VARIABLES	{
					  trapSequenceNumber,
					  trapDate,
					  trapTime,
					  trapSource,
					  eventItemPnSTDAuxOutput
					}
		::= 481

	eventTrapPnSTDMMCMount	TRAP-TYPE
		ENTERPRISE	pasoNeoSTD
		VARIABLES	{
					  trapSequenceNumber,
					  trapDate,
					  trapTime,
					  trapSource,
					  eventItemPnSTDMMCMount
					}
		::= 482

	eventTrapPnSTDAPSLockinStatus	TRAP-TYPE
		ENTERPRISE	pasoNeoSTD
		VARIABLES	{
					  trapSequenceNumber,
					  trapDate,
					  trapTime,
					  trapSource,
					  eventItemPnSTDAPSLockinStatus
					}
		::= 483

	eventTrapPnSTDMaintLoopback1Prot	TRAP-TYPE
		ENTERPRISE	pasoNeoSTD
		VARIABLES	{
					  trapSequenceNumber,
					  trapDate,
					  trapTime,
					  trapSource,
					  eventItemPnSTDMaintLoopback1Prot
					}
		::= 484

	eventTrapPnSTDMaintTxSWMode	TRAP-TYPE
		ENTERPRISE	pasoNeoSTD
		VARIABLES	{
					  trapSequenceNumber,
					  trapDate,
					  trapTime,
					  trapSource,
					  eventItemPnSTDMaintTxSWMode
					}
		::= 485

	eventTrapPnSTDMaintRxSWMode	TRAP-TYPE
		ENTERPRISE	pasoNeoSTD
		VARIABLES	{
					  trapSequenceNumber,
					  trapDate,
					  trapTime,
					  trapSource,
					  eventItemPnSTDMaintRxSWMode
					}
		::= 486

	eventTrapPnSTDMaintAPSSWMode	TRAP-TYPE
		ENTERPRISE	pasoNeoSTD
		VARIABLES	{
					  trapSequenceNumber,
					  trapDate,
					  trapTime,
					  trapSource,
					  eventItemPnSTDMaintAPSSWMode
					}
		::= 487

	eventTrapPnSTDGbELinkLossForward	TRAP-TYPE
		ENTERPRISE	pasoNeoSTD
		VARIABLES	{
					  trapSequenceNumber,
					  trapDate,
					  trapTime,
					  trapSource,
					  eventItemPnSTDGbELinkLossForward
					}
		::= 488

	eventTrapPnSTDGbESpeedDuplex	TRAP-TYPE
		ENTERPRISE	pasoNeoSTD
		VARIABLES	{
					  trapSequenceNumber,
					  trapDate,
					  trapTime,
					  trapSource,
					  eventItemPnSTDGbESpeedDuplex
					}
		::= 489

	eventTrapPnSTDMaintLoopback3CH	TRAP-TYPE
		ENTERPRISE	pasoNeoSTD
		VARIABLES	{
					  trapSequenceNumber,
					  trapDate,
					  trapTime,
					  trapSource,
					  eventItemPnSTDMaintLoopback3CH
					}
		::= 490

	eventTrapPnSTDVlanPortSetting	TRAP-TYPE
		ENTERPRISE	pasoNeoSTD
		VARIABLES	{
					  trapSequenceNumber,
					  trapDate,
					  trapTime,
					  trapSource,
					  eventItemPnSTDVlanPortSetting
					}
		::= 491

	eventTrapPnSTDVlanPort4Setting	TRAP-TYPE
		ENTERPRISE	pasoNeoSTD
		VARIABLES	{
					  trapSequenceNumber,
					  trapDate,
					  trapTime,
					  trapSource,
					  eventItemPnSTDVlanPort4Setting
					}
		::= 492

	eventTrapPnSTDVlanSetting	TRAP-TYPE
		ENTERPRISE	pasoNeoSTD
		VARIABLES	{
					  trapSequenceNumber,
					  trapDate,
					  trapTime,
					  trapSource,
					  eventItemPnSTDVlanSetting
					}
		::= 493

	eventTrapPnSTDQosSetting	TRAP-TYPE
		ENTERPRISE	pasoNeoSTD
		VARIABLES	{
					  trapSequenceNumber,
					  trapDate,
					  trapTime,
					  trapSource,
					  eventItemPnSTDQosSetting
					}
		::= 494

	statusTrapPnSTDAuxInput	TRAP-TYPE
		ENTERPRISE	pasoNeoSTD
		VARIABLES	{
					  trapSequenceNumber,
					  trapDate,
					  trapTime,
					  trapSource,
					  severity,
					  alarmType,
					  probableCause,
					  statusTypeAux,
					  statusItemPnSTDAuxInput
					}
		::= 501

	systemTrapPnSTDLocalUpdate	TRAP-TYPE
		ENTERPRISE	pasoNeoSTD
		VARIABLES	{
					  trapSequenceNumber,
					  trapDate,
					  trapTime,
					  trapSource,
					  systemItemPnSTDLocalUpdate
					}
		::= 802

	eventTrapPnSTDMainLanModeSetting	TRAP-TYPE
		ENTERPRISE	pasoNeoSTD
		VARIABLES	{
					  trapSequenceNumber,
					  trapDate,
					  trapTime,
					  trapSource,
					  eventItemPnSTDMainLanModeSetting
					}
		::= 1701


-----------------------------------------------
-- alarmStatusGroup Group Definitions
-----------------------------------------------

	asTrGroup OBJECT IDENTIFIER
		::= { alarmStatusGroup 1 }

	trSysGroupTable OBJECT-TYPE
		SYNTAX		SEQUENCE OF TrSysGroupEntry
		ACCESS		not-accessible
		STATUS		mandatory
		DESCRIPTION	"TR SYS Group Table"
		::= { asTrGroup 1 }

	trSysGroupEntry OBJECT-TYPE
		SYNTAX		TrSysGroupEntry
		ACCESS		not-accessible
		STATUS		mandatory
		INDEX		{
						trGroupIndex
					}
		::= { trSysGroupTable 1 }

	TrSysGroupEntry ::= SEQUENCE {
					  trGroupIndex   INTEGER,
					  txPowerAlarm   INTEGER,
					  txInputAlarm   INTEGER,
					  rxLevelAlarm   INTEGER,
					  apcAlarm       INTEGER,
					  truCpuAlarm    INTEGER,
					  truLORefAlarm  INTEGER,
					  muteStatus     INTEGER,
					  truTypeMismatch  INTEGER
					}

	trGroupIndex OBJECT-TYPE
		SYNTAX		INTEGER (1..2)
		ACCESS		read-only
		STATUS		mandatory
		DESCRIPTION	"TR Group Index
					  1:No.1/DIR-A
					  2:No.2/DIR-B
					
					*)No.2 is available for 1+1 system.
					*)DIR-A/B is available for 2-WAY system."
		::= { trSysGroupEntry 1 }

	txPowerAlarm OBJECT-TYPE
		SYNTAX		INTEGER (0..1)
		ACCESS		read-only
		STATUS		mandatory
		DESCRIPTION	"TX POWER
					Indicates the status of the transmitter in the ODU.
	 				It is issued when the transmission level decreases 3 dB or more from the preset minimum ATPC level.
	 				  0:Normal,
	 				  1:Alarm
					TRAP=alarmTrapPnSTDTxPowerAlarm"
		::= { trSysGroupEntry 2 }

	txInputAlarm OBJECT-TYPE
		SYNTAX		INTEGER (0..1)
		ACCESS		read-only
		STATUS		mandatory
		DESCRIPTION	"TX INPUT
					Indicates the status of the ODU input signal from the IDU.
					It is issued when the input signal from the IDU is lost.
	 				  0:Normal,
	 				  1:Alarm
					TRAP=alarmTrapPnSTDTxInputAlarm"
		::= { trSysGroupEntry 3 }

	rxLevelAlarm OBJECT-TYPE
		SYNTAX		INTEGER (0..1)
		ACCESS		read-only
		STATUS		mandatory
		DESCRIPTION	"RX LEVEL
					Indicates the status of the received RF signal level of the ODU.
					It is issued when the RF signal drops below the RX threshold.
	 				  0:Normal,
	 				  1:Alarm
					TRAP=alarmTrapPnSTDRxLevelAlarm"
		::= { trSysGroupEntry 4 }

	apcAlarm OBJECT-TYPE
		SYNTAX		INTEGER (0..1)
		ACCESS		read-only
		STATUS		mandatory
		DESCRIPTION	"APC
					Indicates the status of the synthesizer in the ODU.
					It is issued when an anomaly occurs in the synthesizer.
	 				  0:Normal,
	 				  1:Alarm
					TRAP=alarmTrapPnSTDApcAlarm"
		::= { trSysGroupEntry 5 }

	truCpuAlarm OBJECT-TYPE
		SYNTAX		INTEGER (0..1)
		ACCESS		read-only
		STATUS		mandatory
		DESCRIPTION	"ODU CPU/CABLE OPEN
					Indicates the status of the CPU in the ODU.
					It is issued when an anomaly occurs during CPU operation.
					  0:Normal,
					  1:Alarm
					TRAP=alarmTrapPnSTDTRUCPUAlarm"
		::= { trSysGroupEntry 6 }

	truLORefAlarm OBJECT-TYPE
		SYNTAX		INTEGER (0..1)
		ACCESS		read-only
		STATUS		mandatory
		DESCRIPTION	"LO REF
	 				  0:Normal,
	 				  1:Alarm
					TRAP=alarmTrapPnSTDTRULORefAlarm"
		::= { trSysGroupEntry 7 }

	muteStatus OBJECT-TYPE
		SYNTAX		INTEGER (0..1)
		ACCESS		read-only
		STATUS		mandatory
		DESCRIPTION	"MUTE STATUS
					  0: transmitter output is muted (off),
					  1: transmitter output is normal (on)
					TRAP=eventTrapPnSTDTxMuteStatus"
		::= { trSysGroupEntry 8 }

	truTypeMismatch OBJECT-TYPE
		SYNTAX		INTEGER (0..1)
		ACCESS		read-only
		STATUS		mandatory
		DESCRIPTION	"ODU TYPE MISMATCH
					  0:Normal,
					  1:Alarm
					TRAP=alarmTrapPnSTDTRUTypeMismatch"
		::= { trSysGroupEntry 9 }

	txSWStatus OBJECT-TYPE
		SYNTAX		INTEGER (0..1)
		ACCESS		read-only
		STATUS		mandatory
		DESCRIPTION	"TX SW STATUS
					Indicates the modem-ODU configuration currently used for transmitting signals.
					*) only for 1 + 1 hot standby
					  0:No.1,
					  1:No.2
					TRAP=eventTrapPnSTDTxSWStatus"
		::= { asTrGroup 2 }

	rxSWStatus OBJECT-TYPE
		SYNTAX		INTEGER (0..1)
		ACCESS		read-only
		STATUS		mandatory
		DESCRIPTION	"RX SW STATUS
					Indicates the modem-ODU configuration currently used for receiving signals.
					*) only for 1 + 1 hot
					  0:No.1,
					  1:No.2
					TRAP=eventTrapPnSTDRxSWStatus"
		::= { asTrGroup 3 }

	asModemGroup OBJECT IDENTIFIER
		::= { alarmStatusGroup 2 }

	modemSysGroupTable OBJECT-TYPE
		SYNTAX		SEQUENCE OF ModemSysGroupEntry
		ACCESS		not-accessible
		STATUS		mandatory
		DESCRIPTION	"MODEM Sys Group Table"
		::= { asModemGroup 1 }

	modemSysGroupEntry OBJECT-TYPE
		SYNTAX		ModemSysGroupEntry
		ACCESS		not-accessible
		STATUS		mandatory
		INDEX		{
						modemSyGroupIndex
					}
		::= { modemSysGroupTable 1 }

	ModemSysGroupEntry ::= SEQUENCE {
					  modemSyGroupIndex    INTEGER,
					  modemAlarm           INTEGER,
					  modemUnequipped      INTEGER,
					  highBERAlarm         INTEGER,
					  lowBERAlarm          INTEGER,
					  modAlarm             INTEGER,
					  demAlarm             INTEGER,
					  xIFLevelAlarm        INTEGER,
					  xControlAlarm        INTEGER,
					  xpicFuncStatus       INTEGER,
					  powerSupplyAlarm     INTEGER,
					  ifCableShortAlarm    INTEGER,
					  lof                  INTEGER,
					  linearizerFunc       INTEGER,
					  cableEQLAlarm        INTEGER,
					  xRefAlarm            INTEGER,
					  linearizerFail       INTEGER,
					  routeId              INTEGER,
					  earlyWarning         INTEGER,
					  atpcPowerModeStatus  INTEGER,
					  inputVoltageAlarm    INTEGER,
					  modemTypeMismatch    INTEGER
					}

	modemSyGroupIndex OBJECT-TYPE
		SYNTAX		INTEGER (1..2)
		ACCESS		not-accessible
		STATUS		mandatory
		DESCRIPTION	"Modem Group Index
					  1:No.1/DIR-A,
					  2:No.2/DIR-B
					
					*)No.2 is available for 1+1 system.
					*)DIR-A/B is available for 2-WAY system."
		::= { modemSysGroupEntry 1 }

	modemAlarm OBJECT-TYPE
		SYNTAX		INTEGER (0..1)
		ACCESS		read-only
		STATUS		mandatory
		DESCRIPTION	"MODEM MODULE
					Indicates the status of the modulator-demodulator.
					This alarm is issued when an anomaly occurs in the modulator-demodulator.
					  0:Normal,
					  1:Alarm
					TRAP=alarmTrapPnSTDModemAlarm"
		::= { modemSysGroupEntry 2 }

	modemUnequipped OBJECT-TYPE
		SYNTAX		INTEGER (0..1)
		ACCESS		read-only
		STATUS		mandatory
		DESCRIPTION	"MODEM UNEQUIPPED
					Indicates whether a MODEM is properly mounted.
					If the MODEM contact is unplugged or if none is mounted (in accordance with the Equipment Setup),
					 this alarm is issued.
					  0:Normal,
					  1:Alarm
					TRAP=alarmTrapPnSTDModemUneq"
		::= { modemSysGroupEntry 3 }

	highBERAlarm OBJECT-TYPE
		SYNTAX		INTEGER (0..1)
		ACCESS		read-only
		STATUS		mandatory
		DESCRIPTION	"HIGH BER
					Indicates severe quality deterioration status.
					If the signal deteriorates below the preset threshold level,
					 this alarm is issued and the RX-Hitless Switch is operated.
					The selectable threshold levels are 1E-3, 1E-4 and 1E-5.
					  0:Normal,
					  1:Alarm
					TRAP=alarmTrapPnSTDHighBERAlarm"
		::= { modemSysGroupEntry 4 }

	lowBERAlarm OBJECT-TYPE
		SYNTAX		INTEGER (0..1)
		ACCESS		read-only
		STATUS		mandatory
		DESCRIPTION	"LOW BER
					Indicates low to moderate quality deterioration status between radio sections.
					When the signal deteriorates below the present threshold value,
					 this alarm is issued and the RX-Hitless Switch is activated.
					The selectable threshold values are: 1E-6, 1E-7, 1E-8 and 1E-9.
					  0:Normal,
					  1:Alarm
					TRAP=alarmTrapPnSTDLowBERAlarm"
		::= { modemSysGroupEntry 5 }

	modAlarm OBJECT-TYPE
		SYNTAX		INTEGER (0..1)
		ACCESS		read-only
		STATUS		mandatory
		DESCRIPTION	"MOD
					Indicates the operating status of the MOD.
					If any anomaly occurs in the modulator, this alarm is issued.
					  0:Normal,
					  1:Alarm
					TRAP=alarmTrapPnSTDModAlarm"
		::= { modemSysGroupEntry 6 }

	demAlarm OBJECT-TYPE
		SYNTAX		INTEGER (0..1)
		ACCESS		read-only
		STATUS		mandatory
		DESCRIPTION	"DEM
					Indicates the operating status of the DEM.
					If any anomaly occurs in the demodulator, this alarm is issued.
					  0:Normal,
					  1:Alarm
					TRAP=alarmTrapPnSTDDemAlarm"
		::= { modemSysGroupEntry 7 }

	xIFLevelAlarm OBJECT-TYPE
		SYNTAX		INTEGER (0..1)
		ACCESS		read-only
		STATUS		mandatory
		DESCRIPTION	"XIF
					  0:Normal,
					  1:Alarm
					TRAP=alarmTrapPnSTDXIfLevelAlarm"
		::= { modemSysGroupEntry 8 }

	xControlAlarm OBJECT-TYPE
		SYNTAX		INTEGER (0..1)
		ACCESS		read-only
		STATUS		mandatory
		DESCRIPTION	"XCTRL
					  0:Normal,
					  1:Alarm
					TRAP=alarmTrapPnSTDXContAlarm"
		::= { modemSysGroupEntry 9 }

	xpicFuncStatus OBJECT-TYPE
		SYNTAX		INTEGER (0..1)
		ACCESS		read-only
		STATUS		mandatory
		DESCRIPTION	"XPIC STATUS
					  0:Normal,
					  1:Reset
					TRAP=eventTrapPnSTDXPICFuncStatus"
		::= { modemSysGroupEntry 10 }

	powerSupplyAlarm OBJECT-TYPE
		SYNTAX		INTEGER (0..1)
		ACCESS		read-only
		STATUS		mandatory
		DESCRIPTION	"POWER SUPPLY
					Indicates the operating status of the power supply.
					When there is an anomaly in the power supply, this alarm is issued.
					  0:Normal,
					  1:Alarm
					TRAP=alarmTrapPnSTDPSAlarm"
		::= { modemSysGroupEntry 11 }

	ifCableShortAlarm OBJECT-TYPE
		SYNTAX		INTEGER (0..1)
		ACCESS		read-write
		STATUS		mandatory
		DESCRIPTION	"IF CABLE SHORT
					Indicates the status of IF cable between IDU and ODU.
					If a short circuit is caused between ODU and the IDU, this alarm is issued.
					  0:Normal,
					  1:Alarm
					TRAP=alarmTrapPnSTDIfCableShort"
		::= { modemSysGroupEntry 12 }

	lof OBJECT-TYPE
		SYNTAX		INTEGER (0..1)
		ACCESS		read-only
		STATUS		mandatory
		DESCRIPTION	"LOF
					Indicates the frame synchronization status.
					If the synchronization with DMR is lost, this alarm is issued.
					  0:Normal,
					  1:Alarm
					TRAP=alarmTrapPnSTDLof"
		::= { modemSysGroupEntry 13 }

	linearizerFunc OBJECT-TYPE
		SYNTAX		INTEGER (0..2)
		ACCESS		read-only
		STATUS		mandatory
		DESCRIPTION	"LINEARIZER FUNCTION
					Indicates the status of linearizer function.
					N/A:When the ODU is used without linearizer function.
					NO OPR:When the linearizer function is not used.
	               			In this case, TX output power decreases approx.
	               			4 dBm from a standard value.
					OPR:When the linearizer function is used.
					*) Not available in QPSK modulation Scheme.
	
					  0:N/A,
					  1:NON OPR,
					  2:OPR
					TRAP=eventTrapPnSTDLinearizerFunc"
		::= { modemSysGroupEntry 14 }

	cableEQLAlarm OBJECT-TYPE
		SYNTAX		INTEGER (0..1)
		ACCESS		read-only
		STATUS		mandatory
		DESCRIPTION	"CABLE EQL
					Indicates the status of the IF cable equalizer.
					This alarm is issued when the equalizer function does not kick in.
					  0:Normal,
					  1:Alarm
					TRAP=alarmTrapPnSTDCableEQLAlarm"
		::= { modemSysGroupEntry 15 }

	xRefAlarm OBJECT-TYPE
		SYNTAX		INTEGER (0..1)
		ACCESS		read-only
		STATUS		mandatory
		DESCRIPTION	"XREF
					  0:Normal,
					  1:Alarm
					TRAP=alarmTrapPnSTDXRefAlarm"
		::= { modemSysGroupEntry 17 }

	linearizerFail OBJECT-TYPE
		SYNTAX		INTEGER (0..1)
		ACCESS		read-only
		STATUS		mandatory
		DESCRIPTION	"LINEARIZER
					Indicates the linearizer operating status.
					This alarm is issued when the linearizer is not properly operating in the OPR state.
					*) Not available in QPSK modulation Scheme.
					  0:Normal,
					  1:Alarm
					TRAP=alarmTrapPnSTDLinearizerFail"
		::= { modemSysGroupEntry 18 }

	routeId OBJECT-TYPE
		SYNTAX		INTEGER (0..1)
		ACCESS		read-only
		STATUS		mandatory
		DESCRIPTION	"FRAME ID
					  0:Normal,
					  1:Alarm
					TRAP=alarmTrapPnSTDRouteID"
		::= { modemSysGroupEntry 19 }

	earlyWarning OBJECT-TYPE
		SYNTAX		INTEGER (0..1)
		ACCESS		read-only
		STATUS		mandatory
		DESCRIPTION	"EARLY WARNING
					Indicates quality deterioration status.
					If the signal deteriorates beyond the present threshold level,
					 this alarm is issued and the RX-Hitless Switch is activated.
					The present threshold is a BER of 1E-9.
					  0:Normal,
					  1:Alarm
					TRAP=alarmTrapPnSTDEarlyWarning"
		::= { modemSysGroupEntry 20 }

	atpcPowerModeStatus OBJECT-TYPE
		SYNTAX		INTEGER(0..1)
		ACCESS		read-only
		STATUS		mandatory
		DESCRIPTION	"ATPC POWER MODE
					Indicates the operating status of the ATPC.
					If the ATPC is not properly functioning,
					 stop the control and maintain the TX output level at HOLD /MIN (selectable).
					*) Only when ATPC is used.
					  0:ACTIVE,
					  1:STOP
					TRAP=eventTrapPnSTDAtpcPowerModeStatus"
		::= { modemSysGroupEntry 21 }

	inputVoltageAlarm OBJECT-TYPE
		SYNTAX		INTEGER(0..1)
		ACCESS		read-only
		STATUS		mandatory
		DESCRIPTION	"INPUT VOLTAGE
					  0:Normal,
					  1:Alarm
					TRAP=alarmTrapPnSTDInputVoltage"
		::= { modemSysGroupEntry 22 }

	modemTypeMismatch OBJECT-TYPE
		SYNTAX		INTEGER(0..1)
		ACCESS		read-only
		STATUS		mandatory
		DESCRIPTION	"MODEM TYPE MISMATCH
					  0:Normal,
					  1:Alarm
					TRAP=alarmTrapPnSTDModemTypeMismatch"
		::= { modemSysGroupEntry 23 }

	asIntfcMainWorkGroup OBJECT IDENTIFIER
		::= { alarmStatusGroup 3 }

	intfcMAlarm OBJECT-TYPE
		SYNTAX		INTEGER(0..1)
		ACCESS		read-only
		STATUS		mandatory
		DESCRIPTION	"INTFC(1) MODULE
					Indicates the operating status of the Main Interface.
					If any anomaly occurs in the INTFC(1) Module, this alarm is issued.
					  0:Normal,
					  1:Alarm
					TRAP=alarmTrapPnSTDIntfcMAlarm"
		::= { asIntfcMainWorkGroup 1 }

	intfcMUnequipped OBJECT-TYPE
		SYNTAX		INTEGER(0..1)
		ACCESS		read-only
		STATUS		mandatory
		DESCRIPTION	"INTFC(1) UNEQUIPPED
					Indicates whether there is any Main Interface.
					If there is no INTFC (1), this alarm is issued.
					  0:Normal,
					  1:Alarm
					TRAP=alarmTrapPnSTDIntfcMUneq"
		::= { asIntfcMainWorkGroup 2 }

	inputLoss OBJECT-TYPE
		SYNTAX		OCTET STRING (SIZE (6))
		ACCESS		read-only
		STATUS		mandatory
		DESCRIPTION	"INPUT LOS CHxx
					(xx : 01-48)
					Indicates the input status of the input E1 signal from MUX.
					If the input is disconnected, this alarm is issued.
					*) Only when CH USAGE is set as 'used'
					
					  0:Normal,
					  1:Alarm
					
					 [Bit Description]
					  Bit0 = CH01 (0:Normal, 1:Alarm)
					  Bit1 = CH02
					  Bit2 = CH03
					  ...
					  Bit46 = CH47
					  Bit47 = CH48
					
					TRAP=alarmTrapPnSTDInputLos"
		::= { asIntfcMainWorkGroup 3 }

	losMUXWork OBJECT-TYPE
		SYNTAX		INTEGER(0..1)
		ACCESS		read-only
		STATUS		mandatory
		DESCRIPTION	"STM-1(1) LOS(MUX)
					Indicates the input signal status of the STM-1 from MUX.
					If the input is disconnected this alarm is issued.
					  0:Normal,
					  1:Alarm
					TRAP=alarmTrapPnSTDLosMUXWork"
		::= { asIntfcMainWorkGroup 5 }

	losDMRWork OBJECT-TYPE
		SYNTAX		INTEGER(0..1)
		ACCESS		read-only
		STATUS		mandatory
		DESCRIPTION	"STM-1(1) LOS(DMR)
					Indicates the signal status of the STM-1 from DMR.
					If the input is disconnected, this alarm is issued.
					  0:Normal,
					  1:Alarm
					TRAP=alarmTrapPnSTDLosDMRWork"
		::= { asIntfcMainWorkGroup 6 }

	lofMUXWork OBJECT-TYPE
		SYNTAX		INTEGER(0..1)
		ACCESS		read-only
		STATUS		mandatory
		DESCRIPTION	"STM-1(1) LOF(MUX)
					Indicates the status of the input STM-1 signal from DMR.
					If the input signal is out of synch, this alarm is issued.
					  0:Normal,
					  1:Alarm
					TRAP=alarmTrapPnSTDLofMUXWork"
		::= { asIntfcMainWorkGroup 7 }

	lofDMRWork OBJECT-TYPE
		SYNTAX		INTEGER(0..1)
		ACCESS		read-only
		STATUS		mandatory
		DESCRIPTION	"STM-1(1) LOF(DMR)
					Indicates the status of the input STM-1 signal from DMR.
					If the input signal is out of synch, this alarm is issued.
					  0:Normal,
					  1:Alarm
					TRAP=alarmTrapPnSTDLofDMRWork"
		::= { asIntfcMainWorkGroup 8 }

	stm1OutContWork OBJECT-TYPE
		SYNTAX		INTEGER(0..1)
		ACCESS		read-only
		STATUS		mandatory
		DESCRIPTION	"STM-1(1) OUTPUT CONTROL
					Indicates signal interruption status when MS-AIS Generation is set to Disable.
					Indicates UNDER EXECUTION, when there is no STM-1 output signal from STM-1 INTERFACE.
					*) Only when APS Function is available and MS-AIS Generation is disabled.
					  0:Normal,
					  1:Under Execution
					TRAP=eventTrapPnSTDSTM-1OutContWork"
		::= { asIntfcMainWorkGroup 9 }

	usageError OBJECT-TYPE
		SYNTAX		OCTET STRING (SIZE (6))
		ACCESS		read-only
		STATUS		mandatory
		DESCRIPTION	"USAGE ERROR CHxx
					(xx : 01-48)
					Indicates the status of the E1 signal interface.
					When E1 signal is applied to the input interface as long as it is set to 'Not Used',
					 this alarm is generated.
					This parameter is indicated only when CH Usage Error Report has been selected.
					*) CH Usage Error Report function must be enabled (set to 'report') and CH USAGE is set as 'not used'.
					  0:Normal,
					  1:Alarm
					
					 [Bit Description]
					  Bit0 = CH01 (0: Normal,1: Alarm)
					  Bit1 = CH02
					  Bit2 = CH03
					  ...
					  Bit46 = CH47
					  Bit47 = CH48
					TRAP=alarmTrapPnSTDUsageError"
		::= { asIntfcMainWorkGroup 10 }

	aisGeneratedCH OBJECT-TYPE
		SYNTAX		OCTET STRING (SIZE (6))
		ACCESS		read-only
		STATUS		mandatory
		DESCRIPTION	"AIS GENERATED CHxx
					(xx : 01-48)
					Indicates the E1 signal receiving status.
					If AIS is generated in the E1 INTFC, this alarm is issued.
					*) AIS Generated Report function must be enabled (set to 'report') and CH USAGE is set as 'used'.
					  0:Normal,
					  1:Generated
					
					 [Bit Description]
					  Bit0 = CH01 (0: Normal,1: Generated)
					  Bit1 = CH02
					  Bit2 = CH03
					  ...
					  Bit46 = CH47
					  Bit47 = CH48
					TRAP=eventTrapPnSTDAisGeneratedCH"
		::= { asIntfcMainWorkGroup 11 }

	aisReceivedCH OBJECT-TYPE
		SYNTAX		OCTET STRING (SIZE (6))
		ACCESS		read-only
		STATUS		mandatory
		DESCRIPTION	"AIS RECEIVED CHxx
					(xx : 01-48)
					Indicates the E1 signal transmitting status.
					If AIS is received from MUX, this alarm is issued.
					*) AIS Received Report function must be enabled (set to 'report') and CH USAGE is set as 'used'.
					   Depending on whether the AIS Received Condition (Provisioning) is set to 'Status' or 'Alarm'.
					  0:Normal,
					  1:Received
					
					 [Bit Description]
					  Bit0 = CH01 (0: Normal,1: Received)
					  Bit1 = CH02
					  Bit2 = CH03
					  ...
					  Bit46 = CH47
					  Bit47 = CH48
					TRAP=eventTrapPnSTDAisReceivedCH"
		::= { asIntfcMainWorkGroup 12 }

	eBERMUXWork OBJECT-TYPE
		SYNTAX		INTEGER (0..1)
		ACCESS		read-only
		STATUS		mandatory
		DESCRIPTION	"STM-1(1) E-BER(MUX)
					Indicates Excessive-BER of the input STM-1 signal from MUX.
					If the signal deteriorates below the present threshold level, this alarm is issued.
					The settable threshold values are 1E-3, 1E-4 and 1E-5.
					  0:Normal,
					  1:Alarm
					TRAP=alarmTrapPnSTDE-BERMUXWork"
		::= { asIntfcMainWorkGroup 15 }

	eBERDMRWork OBJECT-TYPE
		SYNTAX		INTEGER (0..1)
		ACCESS		read-only
		STATUS		mandatory
		DESCRIPTION	"STM-1(1) E-BER(DMR)
					Indicates Excessive-BER of the input STM-1 signal from the DMR unit.
					If the signal deteriorates below the present threshold level, this alarm is issued.
					The settable threshold values are 1E-6, 1E-7, 1E-8 and IE-9.
					  0:Normal,
					  1:Alarm
					TRAP=alarmTrapPnSTDE-BERDMRWork"
		::= { asIntfcMainWorkGroup 16 }

	signalDegradeMUXWork OBJECT-TYPE
		SYNTAX		INTEGER (0..1)
		ACCESS		read-only
		STATUS		mandatory
		DESCRIPTION	"STM-1(1) SD(MUX)
					Indicates the input signal status of the STM-1 from MUX.
					If the signal deteriorates below the preset threshold level, the alarm is issued.
					The selectable threshold values are: 1E-6, IE-7, 1E-8 and 1E-9.
					  0:Normal,
					  1:Alarm
					TRAP=alarmTrapPnSTDSDMUXWork"
		::= { asIntfcMainWorkGroup 17 }

	signalDegradeDMRWork OBJECT-TYPE
		SYNTAX		INTEGER (0..1)
		ACCESS		read-only
		STATUS		mandatory
		DESCRIPTION	"STM-1(1) SD(DMR)
					Indicates the input signal status of the STM-1 from DMR.
					If the signal deteriorates beyond the preset threshold level, this alarm is issued.
					The selectable BER threshold values are 1E-3, 1E-4 and 1E-5.
					  0:Normal,
					  1:Alarm
					TRAP=alarmTrapPnSTDSDDMRWork"
		::= { asIntfcMainWorkGroup 18 }

	inPhaseWork OBJECT-TYPE
		SYNTAX		INTEGER (0..1)
		ACCESS		read-only
		STATUS		mandatory
		DESCRIPTION	"INTFC(1) INPHASE
					Indicates the DADE status of the received No.1 and No.2 signal at E1 INTFC.
					If the received signal delay time is out of the permissible range, an Out-of-phase alarm is issued.
					*) Only for 1+1 hot standby or twinpath.
					  0:OUTPHASE,
					  1:INPHASE
					TRAP=eventTrapPnSTDInphaseWork"
		::= { asIntfcMainWorkGroup 19 }

	lanStatusTable OBJECT-TYPE
		SYNTAX		SEQUENCE OF LanStatusEntry
		ACCESS		not-accessible
		STATUS		mandatory
		DESCRIPTION	"LAN Status Table"
		::= { asIntfcMainWorkGroup 20 }

	lanStatusEntry OBJECT-TYPE
		SYNTAX		LanStatusEntry
		ACCESS		not-accessible
		STATUS		mandatory
		INDEX		{
						lanStatusIndex
					}
		::= { lanStatusTable 1 }

	LanStatusEntry ::= SEQUENCE {
					  lanStatusIndex      INTEGER,
					  link                INTEGER,
					  collision           INTEGER,
					  linkLossForwarding  INTEGER,
					  speedDuplex         INTEGER
					}

	lanStatusIndex OBJECT-TYPE
		SYNTAX		INTEGER (1..4)
		ACCESS		read-only
		STATUS		mandatory
		DESCRIPTION	"PORTx(x:1-4) Index
					  1: Port 1,
					  2: Port 2,
					  3: Port 3,
					  4: Port 4"
		::= { lanStatusEntry 1 }

	link OBJECT-TYPE
		SYNTAX		INTEGER(0..1)
		ACCESS		read-only
		STATUS		mandatory
		DESCRIPTION	"LAN LINK PORTx
					(x : 1-4)
					Indicates the LAN Link Port status:
					an alarm occurs when the link fails for the respective ports.
					*) The respective Port Usage must be set at 'used'.
					  0:NORMAL,
					  1:ALARM,
					TRAP=alarmTrapPnSTDLink"
		::= { lanStatusEntry 2 }

	collision OBJECT-TYPE
		SYNTAX		INTEGER (0..1)
		ACCESS		read-only
		STATUS		mandatory
		DESCRIPTION	"LAN COLLISION PORTx
					(x : 1-4)
					Indicates the status of any collision for the respective ports.
					*) The respective Port Collision Report function must be enabled (set to 'report').
					  0:Normal,
					  1:Collision
					TRAP=eventTrapPnSTDLanCollision"
		::= { lanStatusEntry 3 }

	linkLossForwarding OBJECT-TYPE
		SYNTAX		INTEGER(0..1)
		ACCESS		read-only
		STATUS		mandatory
		DESCRIPTION	"LINK LOSS FORWARDING PORTx
					(x : 1-4)
					Indicates the status of Link Loss Forwarding status for the respective ports.
					*) The LLF function must be 'enabled'.
					  0:Normal,
					  1:Under Execution
					TRAP=eventTrapPnSTDLinkLossForward"
		::= { lanStatusEntry 4 }

	speedDuplex OBJECT-TYPE
		SYNTAX		INTEGER (0..7)
		ACCESS		read-only
		STATUS		mandatory
		DESCRIPTION	"SPEED & DUPLEX PORTx
					(x : 1-4)
					Indicates the status of LAN Mode (Speed & Duplex)  for the respective ports.
					*) The respective Port Usage must be set at 'used'.
					  0:10M-HALF(MDI),
					  1:10M-FULL(MDI),
					  2:100M-HALF(MDI),
					  3:100M-FULL(MDI),
					  4:10M-HALF(MDIX),
					  5:10M-FULL(MDIX),
					  6:100M-HALF(MDIX),
					  7:100M-FULL(MDIX)
					TRAP=eventTrapPnSTDSpeedDuplex"
		::= { lanStatusEntry 5 }

	stm1TFWorkAlarm OBJECT-TYPE
		SYNTAX		INTEGER (0..1)
		ACCESS		read-only
		STATUS		mandatory
		DESCRIPTION	"STM-1(1) TF
					Indicates 'alarm' when there is a defect in this interface that interrupts the STM-1 signal.
					  0:Normal,
					  1:Alarm
					TRAP=alarmTrapPnSTDStm1TFWorkAlarm"
		::= { asIntfcMainWorkGroup 21 }

	intfcMTypeMismatch OBJECT-TYPE
		SYNTAX		INTEGER(0..1)
		ACCESS		read-only
		STATUS		mandatory
		DESCRIPTION	"INTFC(1) TYPE MISMATCH
					  0:Normal,
					  1:Alarm
					TRAP=alarmTrapPnSTDIntfcMTypeMismatch"
		::= { asIntfcMainWorkGroup 22 }

	gbelink OBJECT-TYPE
		SYNTAX		INTEGER (0..1)
		ACCESS		read-only
		STATUS		mandatory
		DESCRIPTION	"GbE LAN LINK PORT
					  0:Normal,
					  1:Alarm
					TRAP=alarmTrapPnSTDGbELink"
		::= { asIntfcMainWorkGroup 23 }

	gbelinkLossForwarding OBJECT-TYPE
		SYNTAX		INTEGER
		ACCESS		read-only
		STATUS		mandatory
		DESCRIPTION	"GbE LLF PORT
					  0:Normal,
					  1:Under Execution
					TRAP=eventTrapPnSTDGbELinkLossForward"
		::= { asIntfcMainWorkGroup 24 }

	gbespeedDuplex OBJECT-TYPE
		SYNTAX		INTEGER
		ACCESS		read-only
		STATUS		mandatory
		DESCRIPTION	"GbE SPEED & DUPLEX
					  [Bit Description]
					    11xxxx:1000M(SPEED-INITIAL)
					    10xxxx:1000M(SPEED)
					    01xxxx:100M(SPEED)
					    00xxxx:10M(SPEED)
					    xx1xxx:MDIX(MDIX)
					    xx0xxx:MDI(MDIX)
					    xxx1xx:FORCED(FORCED MODE)
					    xxx0xx:AUTONEGO(FORCED MODE)
					    xxxx1x:FULL(FULL DUPLEX)
					    xxxx0x:HALF(FULL DUPLEX)
					    xxxxx1:MASTER(MASTER/SLAVE)
					    xxxxx0:SLAVE(MASTER/SLAVE)
					TRAP=eventTrapPnSTDGbESpeedDuplex"
		::= { asIntfcMainWorkGroup 25 }

	stackConnection OBJECT-TYPE
		SYNTAX		INTEGER
		ACCESS		read-only
		STATUS		mandatory
		DESCRIPTION	"STACK CONNECTION
						  0:Normal,
						  1:Alarm
					TRAP=alarmTrapPnSTDStackConnection"
		::= { asIntfcMainWorkGroup 26 }

	gbecollision OBJECT-TYPE
		SYNTAX		INTEGER
		ACCESS		read-only
		STATUS		mandatory
		DESCRIPTION	"GbE LAN COLLISION PORT1(MAIN)
						  0:Normal,
						  1:Collision
					TRAP=eventTrapPnSTDGbELanCollision"
		::= { asIntfcMainWorkGroup 27 }

	asIntfcSubProtGroup OBJECT IDENTIFIER
		::= { alarmStatusGroup 4 }

	intfcSAlarm OBJECT-TYPE
		SYNTAX		INTEGER (0..1)
		ACCESS		read-only
		STATUS		mandatory
		DESCRIPTION	"INTFC(2) MODULE
					Indicates the operating status of the MAIN INTFC.
					If any anomaly occurs in the MAIN INTFC, this alarm is issued.
					*) Only when APS Function is available.
					  0:Normal,
					  1:Alarm
					TRAP=alarmTrapPnSTDIntfcSAlarm"
		::= { asIntfcSubProtGroup 1 }

	intfcSUnequipped OBJECT-TYPE
		SYNTAX		INTEGER (0..1)
		ACCESS		read-only
		STATUS		mandatory
		DESCRIPTION	"INTFC(2) UNEQUIPPED
					Indicates whether there is any Main Interface.
					If there is no INTFC (2), this alarm is issued.
					*) Only when APS Function is available.
					  0:Normal,
					  1:Alarm
					TRAP=alarmTrapPnSTDIntfcSUneq"
		::= { asIntfcSubProtGroup 2 }

	losMUXProt OBJECT-TYPE
		SYNTAX		INTEGER (0..1)
		ACCESS		read-only
		STATUS		mandatory
		DESCRIPTION	"STM-1(2) LOS(MUX)
					Indicates the input signal status of the STM-1 from MUX.
					If the input is disconnected this alarm is issued.
					*) Only when APS Function is available.
					  0:Normal,
					  1:Alarm
					TRAP=alarmTrapPnSTDLosMUXProt"
		::= { asIntfcSubProtGroup 3 }

	losDMRProt OBJECT-TYPE
		SYNTAX		INTEGER (0..1)
		ACCESS		read-only
		STATUS		mandatory
		DESCRIPTION	"STM-1(2) LOS(DMR)
					Indicates the signal status of the STM-1 from DMR.
					If the input is disconnected, this alarm is issued.
					*) Only when APS Function is available.
					  0:Normal,
					  1:Alarm
					TRAP=alarmTrapPnSTDLosDMRProt"
		::= { asIntfcSubProtGroup 4 }

	eBERMUXProt OBJECT-TYPE
		SYNTAX		INTEGER (0..1)
		ACCESS		read-only
		STATUS		mandatory
		DESCRIPTION	"STM-1(2) E-BER(MUX)
					Indicates Excessive-BER of the input STM-1 signal from MUX.
					If the signal deteriorates below the present threshold level, this alarm is issued.
					The settable threshold values are 1E-3, 1E-4 and 1E-5.
					*) Only when APS Function is available.
					  0:Normal,
					  1:Alarm
					TRAP=alarmTrapPnSTDE-BERMUXProt"
		::= { asIntfcSubProtGroup 5 }

	eBERDMRProt OBJECT-TYPE
		SYNTAX		INTEGER (0..1)
		ACCESS		read-only
		STATUS		mandatory
		DESCRIPTION	"STM-1(2) E-BER(DMR)
					Indicates Excessive-BER of the input STM-1 signal from the DMR unit.
					If the signal deteriorates below the present threshold level, this alarm is issued.
					The settable threshold values are 1E-6, 1E-7, 1E-8 and IE-9.
					*) Only when APS Function is available.
					  0:Normal,
					  1:Alarm
					TRAP=alarmTrapPnSTDE-BERDMRProt"
		::= { asIntfcSubProtGroup 6 }

	signalDegradeMUXProt OBJECT-TYPE
		SYNTAX		INTEGER (0..1)
		ACCESS		read-only
		STATUS		mandatory
		DESCRIPTION	"STM-1(2) SD(MUX)
					Indicates the input signal status of the STM-1 from MUX.
					If the signal deteriorates below the preset threshold level, the alarm is issued.
					The selectable threshold values are: 1E-6, IE-7, 1E-8 and 1E-9.
					*) Only when APS Function is available.
					  0:Normal,
					  1:Alarm
					TRAP=alarmTrapPnSTDSDMUXProt"
		::= { asIntfcSubProtGroup 7 }

	signalDegradeDMRProt OBJECT-TYPE
		SYNTAX		INTEGER (0..1)
		ACCESS		read-only
		STATUS		mandatory
		DESCRIPTION	"STM-1(2) SD(DMR)
					Indicates the input signal status of the STM-1 from DMR.
					If the signal deteriorates beyond the preset threshold level, this alarm is issued.
					The selectable BER threshold values are 1E-3, 1E-4 and 1E-5.
					*) Only when APS Function is available.
					  0:Normal,
					  1:Alarm
					TRAP=alarmTrapPnSTDSDDMRProt"
		::= { asIntfcSubProtGroup 8 }

	stm1OutContProt OBJECT-TYPE
		SYNTAX		INTEGER(0..1)
		ACCESS		read-only
		STATUS		mandatory
		DESCRIPTION	"STM-1(2) OUTPUT CONTROL
					Indicates signal interruption status when MS-AIS Generation is set to Disable. 
					Indicates UNDER EXECUTION, when there is no STM-1 output signal from STM-1 INTERFACE.
					*) Only when APS Function is available and MS-AIS Generation is disabled.
					  0:Normal,
					  1:Under Execution
					TRAP=eventTrapPnSTDSTM-1OutContProt"
		::= { asIntfcSubProtGroup 9 }

	inPhaseProt OBJECT-TYPE
		SYNTAX		INTEGER(0..1)
		ACCESS		read-only
		STATUS		mandatory
		DESCRIPTION	"INTFC(2) INPHASE
					Indicates the DADE status of the received No.1 and No.2 signal at E1 INTFC.
					If the received signal delay time is out of the permissible range, an Out-of-phase alarm is issued.
					*) Only when APS Function is available and only for 1+1 hot standby or twinpath.
					  0:OUTPHASE,
					  1:INPHASE
					TRAP=eventTrapPnSTDInphaseProt"
		::= { asIntfcSubProtGroup 10 }

	wsLos OBJECT-TYPE
		SYNTAX		NormalAlarmValue
		ACCESS		read-only
		STATUS		mandatory
		DESCRIPTION	"WS INPUT LOS
					TRAP=alarmTrapPnSTDWSLos"
		::= { asIntfcSubProtGroup 11 }

	wsAisReceived OBJECT-TYPE
		SYNTAX		INTEGER(0..1)
		ACCESS		read-only
		STATUS		mandatory
		DESCRIPTION	"WS AIS RECEIVED
					  0:Normal,
					  1:Recieved
					TRAP=eventTrapPnSTDWSAisReceivedCH"
		::= { asIntfcSubProtGroup 12 }

	wsAisGenerated OBJECT-TYPE
		SYNTAX		INTEGER(0..1)
		ACCESS		read-only
		STATUS		mandatory
		DESCRIPTION	"WS AIS GENERATED
					  0:Normal,
					  1:Generated
					TRAP=eventTrapPnSTDWSAisGeneratedCH"
		::= { asIntfcSubProtGroup 13 }

	lofMUXProt OBJECT-TYPE
		SYNTAX		INTEGER(0..1)
		ACCESS		read-only
		STATUS		mandatory
		DESCRIPTION	"STM-1(2) LOF(MUX)
					Indicates the input signal status of the STM-1 from MUX.
					If the input signal is out of frame synchronization, this alarm is issued.
					*) Only when APS Function is available.
					  0:Normal,
					  1:Alarm
					TRAP=alarmTrapPnSTDLofMUXProt"
		::= { asIntfcSubProtGroup 14 }

	lofDMRProt OBJECT-TYPE
		SYNTAX		INTEGER(0..1)
		ACCESS		read-only
		STATUS		mandatory
		DESCRIPTION	"STM-1(2) LOF(DMR)
					Indicates the status of the input STM-1 signal from DMR.
					If the input signal is out of synch, this alarm is issued.
					*) Only when APS Function is available.
					  0:Normal,
					  1:Alarm
					TRAP=alarmTrapPnSTDLofDMRProt"
		::= { asIntfcSubProtGroup 15 }

	stm1TFProtAlarm OBJECT-TYPE
		SYNTAX		INTEGER(0..1)
		ACCESS		read-only
		STATUS		mandatory
		DESCRIPTION	"STM-1(2) TF
					Indicates alarm  when there is a defect in this interface that interrupts the STM-1 signal.
					*) Only when APS Function is available.
					  0:Normal,
					  1:Alarm
					TRAP=alarmTrapPnSTDStm1TFProtAlarm"
		::= { asIntfcSubProtGroup 16 }

	scLanStatusTable OBJECT-TYPE
		SYNTAX		SEQUENCE OF ScLanStatusEntry
		ACCESS		not-accessible
		STATUS		mandatory
		DESCRIPTION	"SC LAN STATUS TABLE"
		::= { asIntfcSubProtGroup 17 }

	scLanStatusEntry OBJECT-TYPE
		SYNTAX		ScLanStatusEntry
		ACCESS		not-accessible
		STATUS		mandatory
		INDEX		{
						scLanStatusIndex
					}
		::= { scLanStatusTable 1 }

	ScLanStatusEntry ::= SEQUENCE {
					  scLanStatusIndex         INTEGER,
					  scLanLink                INTEGER,
					  scLanCollision           INTEGER,
					  scLanLinkLossForwarding  INTEGER,
					  scLanSpeedDuplex         INTEGER
					}

	scLanStatusIndex OBJECT-TYPE
		SYNTAX		INTEGER (1..2)
		ACCESS		read-only
		STATUS		mandatory
		DESCRIPTION	"PORTx(x:1-2) Index
					  1: Port 1,
					  2: Port 2"
		::= { scLanStatusEntry 1 }

	scLanLink OBJECT-TYPE
		SYNTAX		INTEGER(0..1)
		ACCESS		read-only
		STATUS		mandatory
		DESCRIPTION	"INTFC(2) LAN LINK PORTx
					(x : 1-2)
					  0:Normal,
					  1:Alarm
					TRAP=alarmTrapPnSTDSCLanLink"
		::= { scLanStatusEntry 2 }

	scLanCollision OBJECT-TYPE
		SYNTAX		INTEGER(0..1)
		ACCESS		read-only
		STATUS		mandatory
		DESCRIPTION	"INTFC(2) LAN COLLISION PORTx
					(x : 1-2)
					  0:Normal,
					  1:Collision
					TRAP=eventTrapPnSTDSCLanCollision"
		::= { scLanStatusEntry 3 }

	scLanLinkLossForwarding OBJECT-TYPE
		SYNTAX		INTEGER (0..1)
		ACCESS		read-only
		STATUS		mandatory
		DESCRIPTION	"INTFC(2) LINK LOSS FORWARDINGx
					(x : 1-2)
					  0:Normal,
					  1:Under Execution
					TRAP=eventTrapPnSTDSCLanLinkLossForward"
		::= { scLanStatusEntry 4 }

	scLanSpeedDuplex OBJECT-TYPE
		SYNTAX		INTEGER(0..7)
		ACCESS		read-only
		STATUS		mandatory
		DESCRIPTION	"INTFC(2) SPEED & DUPLEX PORTx
					(x : 1-4)
					  0:10M-HALF(MDI),
					  1:10M-FULL(MDI),
					  2:100M-HALF(MDI),
					  3:100M-FULL(MDI),
					  4:10M-HALF(MDIX),
					  5:10M-FULL(MDIX),
					  6:100M-HALF(MDIX),
					  7:100M-FULL(MDIX)
					TRAP=eventTrapPnSTDSCLanSpeedDuplex"
		::= { scLanStatusEntry 5 }

	intfcSTypeMismatch OBJECT-TYPE
		SYNTAX		INTEGER(0..1)
		ACCESS		read-only
		STATUS		mandatory
		DESCRIPTION	"INTFC(2) TYPE MISMATCH
					  0:Normal,
					  1:Alarm
					TRAP=alarmTrapPnSTDIntfcSTypeMismatch"
		::= { asIntfcSubProtGroup 18 }

	asCtrlGroup OBJECT IDENTIFIER
		::= { alarmStatusGroup 5 }

	ctrlAlarm OBJECT-TYPE
		SYNTAX		INTEGER (0..1)
		ACCESS		read-only
		STATUS		mandatory
		DESCRIPTION	"CTRL MODULE
					  0:Normal,
					  1:Alarm
					TRAP=alarmTrapPnSTDCTRLAlarm"
		::= { asCtrlGroup 1 }

	multiMediaCardMount OBJECT-TYPE
		SYNTAX		INTEGER (0..1)
		ACCESS		read-only
		STATUS		mandatory
		DESCRIPTION	"MMC MOUNT
					  0:Off,
					  1:On
					TRAP=eventTrapPnSTDMMCMount"
		::= { asCtrlGroup 2 }

	apsSWFail OBJECT-TYPE
		SYNTAX		INTEGER (0..1)
		ACCESS		read-only
		STATUS		mandatory
		DESCRIPTION	"APS SW FAIL
					  0:Normal,
					  1:Alarm
					TRAP=alarmTrapPnSTDAPSSWFail"
		::= { asCtrlGroup 3 }

	apsStatus OBJECT-TYPE
		SYNTAX		INTEGER(0..1)
		ACCESS		read-only
		STATUS		mandatory
		DESCRIPTION	"APS STATUS
					APS Online Status - indicates route when APS is available.
					  0:Working,
					  1:Protection
					TRAP=eventTrapPnSTDAPSStatus"
		::= { asCtrlGroup 5 }

	apsLockinStatus OBJECT-TYPE
		SYNTAX		INTEGER(0..1)
		ACCESS		read-only
		STATUS		mandatory
		DESCRIPTION	"APS LOCK IN STATUS
					  0:Normal,
					  1:Lock in
					TRAP=eventTrapPnSTDAPSLockinStatus"
		::= { asCtrlGroup 6 }

	xCtrlAlarm OBJECT-TYPE
		SYNTAX		INTEGER(0..1)
		ACCESS		read-only
		STATUS		mandatory
		DESCRIPTION	"XCTRL ALARM
					  0:Normal,
					  1:Alarm
					TRAP=alarmTrapPnSTDXControlAlarm"
		::= { asCtrlGroup 7 }

	xpicModeMismatch OBJECT-TYPE
		SYNTAX		INTEGER(0..1)
		ACCESS		read-only
		STATUS		mandatory
		DESCRIPTION	"XPIC MODE MISMATCH
					  0:Normal,
					  1:Alarm
					TRAP=alarmTrapPnSTDXpicModeMismatch"
		::= { asCtrlGroup 8 }

	asTcnGroup OBJECT IDENTIFIER
		::= { alarmStatusGroup 6 }

	tcn15minCurrentTotalTable OBJECT-TYPE
		SYNTAX		SEQUENCE OF Tcn15minCurrentTotalEntry
		ACCESS		not-accessible
		STATUS		mandatory
		DESCRIPTION	"TCN 15min Current Total Table"
		::= { asTcnGroup 1 }

	tcn15minCurrentTotalEntry OBJECT-TYPE
		SYNTAX		Tcn15minCurrentTotalEntry
		ACCESS		not-accessible
		STATUS		mandatory
		INDEX		{
						tcn15minCurrentTotalWPIndex
					}
		::= { tcn15minCurrentTotalTable 1 }

	Tcn15minCurrentTotalEntry ::= SEQUENCE {
					  tcn15minCurrentTotalWPIndex  INTEGER,
					  tcn15minCurrentTotalOFS      INTEGER,
					  tcn15minCurrentTotalUAS      INTEGER,
					  tcn15minCurrentTotalES       INTEGER,
					  tcn15minCurrentTotalSES      INTEGER,
					  tcn15minCurrentTotalBBE      INTEGER,
					  tcn15minCurrentTotalSEP      INTEGER
					}

	tcn15minCurrentTotalWPIndex OBJECT-TYPE
		SYNTAX		INTEGER (1..4)
		ACCESS		read-only
		STATUS		mandatory
		DESCRIPTION	"TCN 15min Current Total Index
					  1:Working - MUX,
					  2:Protection - MUX
					  3:Working - DMR - DIR-B
					  4:Protection - DMR - DIR-B
					
					*) Using DIR-B side when Redundancy isn't 1+0 TERM."
		::= { tcn15minCurrentTotalEntry 1 }

	tcn15minCurrentTotalOFS OBJECT-TYPE
		SYNTAX		INTEGER (0..1)
		ACCESS		read-only
		STATUS		mandatory
		DESCRIPTION	"TCN-OFS-15min TOTAL
					  0:Normal,
					  1:Alarm
					TRAP=alarmTrapPnSTDTcn15minTotalOFS"
		::= { tcn15minCurrentTotalEntry 2 }

	tcn15minCurrentTotalUAS OBJECT-TYPE
		SYNTAX		INTEGER (0..1)
		ACCESS		read-only
		STATUS		mandatory
		DESCRIPTION	"TCN-UAS-15min TOTAL
					  0:Normal,
					  1:Alarm
					TRAP=alarmTrapPnSTDTcn15minTotalUAS"
		::= { tcn15minCurrentTotalEntry 3 }

	tcn15minCurrentTotalES OBJECT-TYPE
		SYNTAX		INTEGER (0..1)
		ACCESS		read-only
		STATUS		mandatory
		DESCRIPTION	"TCN-ES-15min TOTAL
					  0:Normal,
					  1:Alarm
					TRAP=alarmTrapPnSTDTcn15minTotalES"
		::= { tcn15minCurrentTotalEntry 4 }

	tcn15minCurrentTotalSES OBJECT-TYPE
		SYNTAX		INTEGER (0..1)
		ACCESS		read-only
		STATUS		mandatory
		DESCRIPTION	"TCN-SES-15min TOTAL
					  0:Normal,
					  1:Alarm
					TRAP=alarmTrapPnSTDTcn15minTotalSES"
		::= { tcn15minCurrentTotalEntry 5 }

	tcn15minCurrentTotalBBE OBJECT-TYPE
		SYNTAX		INTEGER (0..1)
		ACCESS		read-only
		STATUS		mandatory
		DESCRIPTION	"TCN-BBE-15min TOTAL
					  0:Normal,
					  1:Alarm
					TRAP=alarmTrapPnSTDTcn15minTotalBBE"
		::= { tcn15minCurrentTotalEntry 6 }

	tcn15minCurrentTotalSEP OBJECT-TYPE
		SYNTAX		INTEGER (0..1)
		ACCESS		read-only
		STATUS		mandatory
		DESCRIPTION	"TCN-SEP-15min TOTAL
					  0:Normal,
					  1:Alarm
					TRAP=alarmTrapPnSTDTcn15minTotalSEP"
		::= { tcn15minCurrentTotalEntry 7 }

	tcn1dayCurrentTotalTable OBJECT-TYPE
		SYNTAX		SEQUENCE OF Tcn1dayCurrentTotalEntry
		ACCESS		not-accessible
		STATUS		mandatory
		DESCRIPTION	"1day Current Total Table"
		::= { asTcnGroup 3 }

	tcn1dayCurrentTotalEntry OBJECT-TYPE
		SYNTAX		Tcn1dayCurrentTotalEntry
		ACCESS		not-accessible
		STATUS		mandatory
		INDEX		{
						tcn1dayCurrentTotalWPIndex
					}
		::= { tcn1dayCurrentTotalTable 1 }

	Tcn1dayCurrentTotalEntry ::= SEQUENCE {
					  tcn1dayCurrentTotalWPIndex  INTEGER,
					  tcn1dayCurrentTotalOFS      INTEGER,
					  tcn1dayCurrentTotalUAS      INTEGER,
					  tcn1dayCurrentTotalES       INTEGER,
					  tcn1dayCurrentTotalSES      INTEGER,
					  tcn1dayCurrentTotalBBE      INTEGER,
					  tcn1dayCurrentTotalSEP      INTEGER
					}

	tcn1dayCurrentTotalWPIndex OBJECT-TYPE
		SYNTAX		INTEGER (1..4)
		ACCESS		read-only
		STATUS		mandatory
		DESCRIPTION	"TCN 1day Current Total Index
					  1:Working(MUX),
					  2:Protection(MUX),
					  3:Working(DMR)/Working(DIR-A)
					  4:Protection(DMR)/Working(DIR-B)
					
					*) MUX side is not used when using LAN.
					*) Protection is only used when APS function is used.
					*) DIR-* is only used when Redundancy is 2-Way."
		::= { tcn1dayCurrentTotalEntry 1 }

	tcn1dayCurrentTotalOFS OBJECT-TYPE
		SYNTAX		INTEGER (1..4)
		ACCESS		read-only
		STATUS		mandatory
		DESCRIPTION	"TCN-OFS-1day TOTAL
					  0:Normal,
					  1:Alarm
					TRAP=alarmTrapPnSTDTcn1dayTotalOFS"
		::= { tcn1dayCurrentTotalEntry 2 }

	tcn1dayCurrentTotalUAS OBJECT-TYPE
		SYNTAX		INTEGER (0..1)
		ACCESS		read-only
		STATUS		mandatory
		DESCRIPTION	"TCN-UAS-1day TOTAL
					  0:Normal,
					  1:Alarm
					TRAP=alarmTrapPnSTDTcn1dayTotalUAS"
		::= { tcn1dayCurrentTotalEntry 3 }

	tcn1dayCurrentTotalES OBJECT-TYPE
		SYNTAX		INTEGER (0..1)
		ACCESS		read-only
		STATUS		mandatory
		DESCRIPTION	"TCN-ES-1day TOTAL
					  0:Normal,
					  1:Alarm
					TRAP=alarmTrapPnSTDTcn1dayTotalES"
		::= { tcn1dayCurrentTotalEntry 4 }

	tcn1dayCurrentTotalSES OBJECT-TYPE
		SYNTAX		INTEGER (0..1)
		ACCESS		read-only
		STATUS		mandatory
		DESCRIPTION	"TCN-SES-1day TOTAL
					  0:Normal,
					  1:Alarm
					TRAP=alarmTrapPnSTDTcn1dayTotalSES"
		::= { tcn1dayCurrentTotalEntry 5 }

	tcn1dayCurrentTotalBBE OBJECT-TYPE
		SYNTAX		INTEGER (0..1)
		ACCESS		read-only
		STATUS		mandatory
		DESCRIPTION	"TCN-BBE-1day TOTAL
					  0:Normal,
					  1:Alarm
					TRAP=alarmTrapPnSTDTcn1dayTotalBBE"
		::= { tcn1dayCurrentTotalEntry 6 }

	tcn1dayCurrentTotalSEP OBJECT-TYPE
		SYNTAX		INTEGER (0..1)
		ACCESS		read-only
		STATUS		mandatory
		DESCRIPTION	"TCN-SEP-1day TOTAL
					  0:Normal,
					  1:Alarm
					TRAP=alarmTrapPnSTDTcn1dayTotalSEP"
		::= { tcn1dayCurrentTotalEntry 7 }

	tcnCurrentUAE OBJECT IDENTIFIER
		::= { asTcnGroup 5 }

	tcnUAEDMRWork OBJECT-TYPE
		SYNTAX		INTEGER (0..1)
		ACCESS		read-only
		STATUS		mandatory
		DESCRIPTION	"TCN-UAE-DMR WORK
					  0:Normal,
					  1:Alarm
					TRAP=alarmTrapPnSTDTcnUAEDMRWork"
		::= { tcnCurrentUAE 1 }

	tcnUAEDMRProt OBJECT-TYPE
		SYNTAX		INTEGER (0..1)
		ACCESS		read-only
		STATUS		mandatory
		DESCRIPTION	"TCN-UAE-DMR PROT
					  0:Normal,
					  1:Alarm
					TRAP=alarmTrapPnSTDTcnUAEDMRProt"
		::= { tcnCurrentUAE 2 }

	tcnUAEMUXWork OBJECT-TYPE
		SYNTAX		INTEGER (0..1)
		ACCESS		read-only
		STATUS		mandatory
		DESCRIPTION	"TCN-UAE-MUX WORK
					  0:Normal,
					  1:Alarm
					TRAP=alarmTrapPnSTDTcnUAEMUXWork"
		::= { tcnCurrentUAE 4 }

	tcnUAEMUXProt OBJECT-TYPE
		SYNTAX		INTEGER (0..1)
		ACCESS		read-only
		STATUS		mandatory
		DESCRIPTION	"TCN-UAE-MUX PROT
					  0:Normal,
					  1:Alarm
					TRAP=alarmTrapPnSTDTcnUAEMUXProt"
		::= { tcnCurrentUAE 5 }


	tcnTCSTable OBJECT-TYPE
		SYNTAX		SEQUENCE OF TcnTCSEntry
		ACCESS		not-accessible
		STATUS		mandatory
		DESCRIPTION	"TCN TCS Table"
		::= { asTcnGroup 6 }

	tcnTCSEntry OBJECT-TYPE
		SYNTAX		TcnTCSEntry
		ACCESS		not-accessible
		STATUS		mandatory
		INDEX		{
						tcnTCSSysIndex
					}
		::= { tcnTCSTable 1 }

	TcnTCSEntry ::= SEQUENCE {
					  tcnTCSSysIndex    INTEGER,
					  tcnTCS15minRxLev  INTEGER,
					  tcnTCS1dayRxLev   INTEGER
					}

	tcnTCSSysIndex OBJECT-TYPE
		SYNTAX		INTEGER (1..2)
		ACCESS		read-only
		STATUS		mandatory
		DESCRIPTION	"TCN TCS System Index
					  1:No.1/DIR-A,
					  2:No.2/DIR-B
					
					*)No.2 is available for 1+1 system.
					*)DIR-A/B is available for 2-WAY system."
		::= { tcnTCSEntry 1 }

	tcnTCS15minRxLev OBJECT-TYPE
		SYNTAX		INTEGER (0..1)
		ACCESS		read-only
		STATUS		mandatory
		DESCRIPTION	"TCN-RX LEV-15min
					The (lower) Threshold Crossing Notice level for 15 min alarm.
					  0:Normal,
					  1:Alarm
					TRAP=alarmTrapPnSTDTcnTCS15minRxLev"
		::= { tcnTCSEntry 2 }

	tcnTCS1dayRxLev OBJECT-TYPE
		SYNTAX		INTEGER (0..1)
		ACCESS		read-only
		STATUS		mandatory
		DESCRIPTION	"TCN-RX LEV-1day
					The (lower) Threshold Crossing Notice level for 1 day alarm.
					  0:Normal,
					  1:Alarm
					TRAP=alarmTrapPnSTDTcnTCS1dayRxLev"
		::= { tcnTCSEntry 3 }

	asAuxIOGroup OBJECT IDENTIFIER
		::= { alarmStatusGroup 7 }

	auxInputStatusTable OBJECT-TYPE
		SYNTAX		SEQUENCE OF AuxInputStatusEntry
		ACCESS		not-accessible
		STATUS		mandatory
		DESCRIPTION	"AUX Input Status Table"
		::= { asAuxIOGroup 1 }

	auxInputStatusEntry OBJECT-TYPE
		SYNTAX		AuxInputStatusEntry
		ACCESS		not-accessible
		STATUS		mandatory
		INDEX		{
						auxInputStatusIndex
					}
		::= { auxInputStatusTable 1 }

	AuxInputStatusEntry ::= SEQUENCE {
					  auxInputStatusIndex  INTEGER,
					  auxInputStatusValue  INTEGER
					}

	auxInputStatusIndex OBJECT-TYPE
		SYNTAX		INTEGER (1..6)
		ACCESS		read-only
		STATUS		mandatory
		DESCRIPTION	"AUX Input Status Index
					  1:Input 1,
					  2:Input 2,
					  3:Input 3,
					  4:Input 4,
					  5:Input 5,
					  6:Input 6"
		::= { auxInputStatusEntry 1 }

	auxInputStatusValue OBJECT-TYPE
		SYNTAX		INTEGER (0..1)
		ACCESS		read-only
		STATUS		mandatory
		DESCRIPTION	"ITEM NAME(INPUT-x)
					(x : 1-6)
					  0:(STATUS STRING),
					  1:(STATUS STRING)
					TRAP=statusTrapPnSTDAuxInput"
		::= { auxInputStatusEntry 2 }

	auxOutputStatusTable OBJECT-TYPE
		SYNTAX		SEQUENCE OF AuxOutputStatusEntry
		ACCESS		not-accessible
		STATUS		mandatory
		DESCRIPTION	"AUX Output Status Table"
		::= { asAuxIOGroup 2 }

	auxOutputStatusEntry OBJECT-TYPE
		SYNTAX		AuxOutputStatusEntry
		ACCESS		not-accessible
		STATUS		mandatory
		INDEX		{
						auxOutputStatusIndex
					}
		::= { auxOutputStatusTable 1 }

	AuxOutputStatusEntry ::= SEQUENCE {
					  auxOutputStatusIndex  INTEGER,
					  auxOutputStatusValue  INTEGER
					}

	auxOutputStatusIndex OBJECT-TYPE
		SYNTAX		INTEGER (1..4)
		ACCESS		read-only
		STATUS		mandatory
		DESCRIPTION	"AUX Output Status Index
					  1:Output 1,
					  2:Output 2,
					  3:Output 3,
					  4:Output 4"
		::= { auxOutputStatusEntry 1 }

	auxOutputStatusValue OBJECT-TYPE
		SYNTAX		INTEGER (0..1)
		ACCESS		read-write
		STATUS		mandatory
		DESCRIPTION	"ITEM NAME(OUTPUT-x)
					(x : 1-4)
					  0:(STATUS STRING),
					  1:(STATUS STRING)
					
					*) This value is for control house keeping
					TRAP=eventTrapPnSTDAuxOutput"
		::= { auxOutputStatusEntry 2 }

	auxClusterAlarmTable OBJECT-TYPE
		SYNTAX		SEQUENCE OF AuxClusterAlarmEntry
		ACCESS		not-accessible
		STATUS		mandatory
		DESCRIPTION	"AUX Cluster Alarm Table"
		::= { asAuxIOGroup 3 }

	auxClusterAlarmEntry OBJECT-TYPE
		SYNTAX		AuxClusterAlarmEntry
		ACCESS		not-accessible
		STATUS		mandatory
		INDEX		{
						auxClusterAlarmIndex
					}
		::= { auxClusterAlarmTable 1 }

	AuxClusterAlarmEntry ::= SEQUENCE {
					  auxClusterAlarmIndex  INTEGER,
					  auxClusterAlarmValue  INTEGER
					}

	auxClusterAlarmIndex OBJECT-TYPE
		SYNTAX		INTEGER (1..4)
		ACCESS		read-only
		STATUS		mandatory
		DESCRIPTION	"AUX Cluster Alarm Index
					  1:Cluster Alarm 1
					  2:Cluster Alarm 2
					  3:Cluster Alarm 3
					  4:Cluster Alarm 4
					
					TRAP=alarmTrapPnSTDAuxClusterAlarm"
		::= { auxClusterAlarmEntry 1 }

	auxClusterAlarmValue OBJECT-TYPE
		SYNTAX		INTEGER (0..1)
		ACCESS		read-only
		STATUS		mandatory
		DESCRIPTION	"CLUSTERx ALARM
					(x : 1-4)
					  0:Normal,
					  1:Alarm
					TRAP=alarmTrapPnSTDAuxClusterAlarm"
		::= { auxClusterAlarmEntry 2 }

-----------------------------------------------
-- equipmentSetUpGroup Group Definitions
-----------------------------------------------

	esCommonItem OBJECT IDENTIFIER
		::= { equipmentSetUpGroup 1 }

	esSystemArchitecture OBJECT-TYPE
		SYNTAX		INTEGER (1..8)
		ACCESS		read-only
		STATUS		mandatory
		DESCRIPTION	"USER INTERFACE
					To select the desired user interface manually.
					  1:PDH E1,
					  2:PDH E1 with LAN,
					  3:4PORT LAN with E1,
					  4:PDH E3,
					  5:PDH E3 with LAN,
					  6:SDH STM-1,
					  7:2PORT LAN over STM-1,
					  8:GbE over STM-1"
		::= { esCommonItem 1 }

	esRedundancy OBJECT-TYPE
		SYNTAX		INTEGER (1..8)
		ACCESS		read-only
		STATUS		mandatory
		DESCRIPTION	"REDUNDANCY SETTING
				To select the desired redundancy setting.
				  1:1+0(TERM),
				  2:1+1(HOT STANDBY TERM),
     			  3:1+1(TWINPATH TERM),
	     			  8:2-WAY PDH
						
					*) 2-WAY is available, when System Architecture is PDH."
		::= { esCommonItem 2 }

	esXPICTypeSelect OBJECT-TYPE
		SYNTAX		INTEGER (0..3)
		ACCESS		read-only
		STATUS		mandatory
		DESCRIPTION	"XPIC USAGE
					To select the XPIC Usage (where supported).
					  0:INVALID,
					  1:NOT USED,
					  2:USED(MAIN MASTER),
					  3:USED(SUB MASTER)
					
					*) This value is fixed to 0 when System Architecture is PDH."
		::= { esCommonItem 4 }

	esAPSFunction OBJECT-TYPE
		SYNTAX		INTEGER(0..2)
		ACCESS		read-only
		STATUS		mandatory
		DESCRIPTION	"APS FUNCTION
					APS function can only be set when both Main (WORK) and SUB(PROT) interfaces are STM-1 (optical).
					  0:Invalid,
					  1:Unavailable,
					  2:Available
					
					*) This value is fixed to 1 when INTFC(2) is OPT INTFC."
		::= { esCommonItem 5 }

	esIntfcMainWorkSelect OBJECT-TYPE
		SYNTAX		INTEGER (0..13)
		ACCESS		read-only
		STATUS		mandatory
		DESCRIPTION	"MAIN(WORK)
					Main (work) - the main work interface setting.
					  0:BLANK,
					  1:16xE1 BASIC PKG,
					  2:16xE1 STANDARD PKG(E/W LAN),
					  3:32xE1 PKG(E/W LAN),
					  4:48xE1 PKG,
					  5:4PORT LAN WITH E1,
					  6:STM-1(OPTICAL),
					  7:STM-1(ELECTRICAL),
					  8:2PORT LAN OVER STM-1,
					  9:GbE OVER STM-1,
					  10:E3 PKG(E/W LAN),
					  11:16E1 2-WAY/XC PKG(E/W LAN),
					  12:,
					  13:GbE(10/100/1000B) OVER STM-1,
					  14:32E1 XC PKG,
					  15:4PORT LAN WITH E1(VLAN),
					  16:GbE OVER STM-1(VLAN)"
		::= { esCommonItem 6 }

	esIntfcSubProtSelect OBJECT-TYPE
		SYNTAX		INTEGER (0..4)
		ACCESS		read-only
		STATUS		mandatory
		DESCRIPTION	"SUB(PROT)
					SUB (PROT) - the SUB (PROTECTION) Interface setting.
					*) Applies only to SDH interface.
					  0:INVALID,
					  1:NOT USED,
					  2:STM-1(OPTICAL),
					  3:WS/LAN
					  4:WS
						
					*) This value is fixed to 0 when System Architecture is PDH"
		::= { esCommonItem 7 }

	esModulationScheme OBJECT-TYPE
		SYNTAX		INTEGER (1..6)
		ACCESS		read-only
		STATUS		mandatory
		DESCRIPTION	"MODULATION SCHEME
					Modulation scheme - the currently used modulation type.
					  1:QPSK,
					  2:16QAM,
					  3:32QAM,
					  4:64QAM, -- Not used
					  5:128QAM,
					  6:256QAM -- Not used
					
					*) This Value shows for DIR-A when Redundancy is 2-way."
		::= { esCommonItem 8 }

	esTransmissionCapacity OBJECT-TYPE
		SYNTAX		INTEGER (0..8)
		ACCESS		read-only
		STATUS		mandatory
		DESCRIPTION	"TRANSMISSION CAPACITY
					Transmission Capacity - the transmission capacity of the system.
					  0:Invalid,
					  1:5MB, -- Not used
					  2:10MB,
					  3:20MB,
					  4:40MB,
					  5:80MB,
					  6:100MB,
					  7:156MB(STM-1/2P LAN),
					  8:311MB(2xSTM-1) -- Not used
					
					*) This Value shows for DIR-A when Redundancy is 2-way."
		::= { esCommonItem 9 }

	esLANPortUsage OBJECT-TYPE
		SYNTAX		INTEGER (0..89)
		ACCESS		read-only
		STATUS		mandatory
		DESCRIPTION	"LAN PORT USAGE
					For setting the usage of the LAN interface ports (1, 2).
					*) Only for PDH with LAN  interface.
					  0:INVALID,
					  1:NOT USED,
					  2:P1-2 SHARED/1PORT ONLY(MAIN),
					  3:P1-2 SEPARATED(MAIN),
					  4:P1-2 SHARED/1PORT ONLY(SC),
					  5:P1-2 SEPARATED(SC),
					  6:P1-4 SHARED(MAIN),
					  7:P1-2 SHARED/P3-4 SHARED(MAIN),
					  8:P1-4 SEPARATED(MAIN),
					  9:P1-4 SHARED(SC),
					  10:P1-2 SHARED/P3-4 SHARED(SC),
					  11:P1=75MB/P2=75MB,
					  12:P1=100MB/P2=50MB,
					  13:BEST EFFORT,
					  14:P1=100MB/P2=NOT USED,
					  15:P1-2 SHARED/1PORT ONLY(WS),
					  16:P1-2 SEPARATED(WS),
					  17-19:reserve,
					  20:P1=75MB/P2=75MB+WS LAN,
					  21:P1=100MB/P2=50MB+WS LAN,
					  22:BEST EFFORT+WS LAN,
					  23:P1=100MB/P2=NOT USED+WS LAN,
					  24:P1=75MB/P2=75MB+SC LAN,
					  25:P1=100MB/P2=50MB+SC LAN,
					  26:BEST EFFORT+SC LAN,
					  27:P1=100MB/P2=NOT USED+SC LAN,
					  28-29:reserve,
					  30:GbE Only,
					  31:GbE+WS LAN,
					  32:GbE+SC LAN,
					  33-39:reserve,
					  40:STM-1+WS LAN,
					  41:STM-1+SC LAN,
					  42-49:reserve,
					  50:P1-2 SHARED/1PORT ONLY(DIR-A M),
					  51:P1-2 SHARED/1PORT ONLY(DIR-A SC),
					  52:P1-2 SHARED/1PORT ONLY(DIR-B M),
					  53:P1-2 SHARED/1PORT ONLY(DIR-B SC),
					  54:P1-2 STAR (DIR-A M, DIR-B M),
					  55:P1-2 STAR (DIR-A SC, DIR-B SC),
					  56:P1-2 STAR (DIR-A M, DIR-B SC),
					  57:P1-2 STAR (DIR-A SC, DIR-B M),
					  58:P1-2 MIXED (DIR-A M, DIR-B M),
					  59:P1-2 MIXED (DIR-A M, DIR-B SC),
					  60:P1-2 MIXED (DIR-A SC, DIR-B M),
					  61:P1-2 MIXED (DIR-A SC, DIR-B SC)
					  62:VLAN(DIR-A M)
					  63:VLAN(DIR-B M)
					  64:VLAN(DIR-A M, DIR-B M)
					  65-69:reserved
					  70:P1-4 VLAN
					  71:P1-4 SHARED(MAIN)
					  72:P1-2 SHARED/P3-4 SHARED(MAIN)
					  73:P1-4 SEPARATED(MAIN)
					  74-79:reserved
					  80:GbE PORT SHARED
					  81:GbE STACK MASTER(PORT SHARED)
					  82:GbE STACK SLAVE
					  83:GbE PORT SHARED+WS LAN(PORT4) 
					  84:GbE STACK MASTER(PORT SHARED)+WS LAN(PORT4)
					  85:GbE STACK SLAVE+WS LAN(PORT4)
					  86:GbE PORT SHARED+SC LAN(PORT4)
					  87:GbE STACK MASTER(PORT SHARED)+SC LAN(PORT4)
					  88:GbE STACK SLAVE+SC LAN(PORT4)
					  89:reserved
					
					*) The values from 1 to 9 and 15 and 50 to 73 are only for PDH.
					   The values from 11 to 14 and 20 to 41 and 80 to 88 are only for SDH.
					   This value is fixed to 0 when LAN is not used."
		::= { esCommonItem 10 }

	esTxSWType OBJECT-TYPE
		SYNTAX		INTEGER (1..2)
		ACCESS		read-only
		STATUS		mandatory
		DESCRIPTION	"TX SW TYPE
					  1:MUTE,
					  2:RF SW TYPE"
		::= { esCommonItem 12 }

	esModulationSchemeDirB OBJECT-TYPE
		SYNTAX		INTEGER (0..6)
		ACCESS		read-only
		STATUS		mandatory
		DESCRIPTION	"MODULATION SCHEME DIR-B
					Modulation scheme - the currently used modulation type.
					  0:Invalid,
					  1:QPSK,
					  2:16QAM,
					  3:32QAM,
					  4:64QAM, -- Not used
					  5:128QAM,
					  6:256QAM -- Not used
					
					*) This Value is fixed to 0 when Redundancy isn't 2-way."
		::= { esCommonItem 13 }

	esTransmissionCapacityDirB OBJECT-TYPE
		SYNTAX		INTEGER (0..8)
		ACCESS		read-only
		STATUS		mandatory
		DESCRIPTION	"TRANSMISSION CAPACITY DIR-B
					Transmission Capacity - the transmission capacity of the system. 
					  0:Invalid,
					  1:5MB, -- Not used
					  2:10MB,
					  3:20MB,
					  4:40MB,
					  5:80MB,
					  6:100MB,
					  7:156MB(STM-1/2P LAN),
					  8:311MB(2xSTM-1) -- Not used
					
					*) This Value is fixed to 0 when Redundancy isn't 2-way."
		::= { esCommonItem 14 }

	esLan2mCapacityDirA OBJECT-TYPE
		SYNTAX		INTEGER (0..150)
		ACCESS		read-only
		STATUS		mandatory
		DESCRIPTION	"LAN & 2M CAPACITY[Mbps]
					
					*) This Value shows for DIR-A when Redundancy is 2-way.
					*) This Value is fixed 0 when Main CH isn't used by LAN."
		::= { esCommonItem 15 }

	esLanScAssignmentDirA OBJECT-TYPE
		SYNTAX		INTEGER (0..10)
		ACCESS		read-only
		STATUS		mandatory
		DESCRIPTION	"LAN & SC ASSIGNMENT
					  0:INVALID,
					  1:64Kbps,
					  2:128Kbps,
				  3:256Kbps,
				  4:64Kbps(E1<DMR>),
					  5:64Kbps(F1<DMR>),
					  6:192Kbps(DCCr<DMR>),
					  7:64Kbps(E1<MUX>),
					  8:64Kbps(F1<MUX>),
					  9:192Kbps(DCCr<MUX>),
					  10:2Mbps (WS)
						
					*) This Value shows for DIR-A when Redundancy is 2-way.
					*) This Value is fixed to 0 when SC isn't used by LAN."
		::= { esCommonItem 16 }

	esLan2mCapacityDirB OBJECT-TYPE
		SYNTAX		INTEGER (0..100)
		ACCESS		read-only
		STATUS		mandatory
		DESCRIPTION	"LAN & 2M CAPACITY(DIR-B)[Mbps]
					  0-100:Value(int)
						
					*) This Value is fixed to 0 when Redundancy isn't 2-way.
					*) This Value is fixed 0 when Main CH isn't used by LAN."
		::= { esCommonItem 17 }

	esLanScAssignmentDirB OBJECT-TYPE
		SYNTAX		INTEGER (0..3)
		ACCESS		read-only
		STATUS		mandatory
		DESCRIPTION	"LAN & SC ASSIGNMENT(DIR-B)
					  0:INVALID,
					  1:64Kbps,
					  2:128Kbps,
					  3:256Kbps,
					  4:64Kbps(E1<DMR>),
					  5:64Kbps(F1<DMR>),
					  6:192Kbps(DCCr<DMR>),
					  7:64Kbps(E1<MUX>),
					  8:64Kbps(F1<MUX>),
					  9:192Kbps(DCCr<MUX>),
					  10:2Mbps (WS)
					
					*) This Value is fixed to 0 when Redundancy isn't 2-way.
					*) This Value is fixed 0 to when SC isn't used by LAN."
		::= { esCommonItem 18 }

	esSysTable OBJECT-TYPE
		SYNTAX		SEQUENCE OF EsSysEntry
		ACCESS		not-accessible
		STATUS		mandatory
		DESCRIPTION	"Sys Item Table"
		::= { equipmentSetUpGroup 2 }

	esSysEntry OBJECT-TYPE
		SYNTAX		EsSysEntry
		ACCESS		not-accessible
		STATUS		mandatory
		INDEX		{
						esSysIndex
					}
		::= { esSysTable 1 }

	EsSysEntry ::= SEQUENCE {
					  esSysIndex        INTEGER,
					  esSysTxFreq       DisplayString,
					  esSysRxFreq       DisplayString,
					  esSysTxPowerCont  INTEGER,
					  esSysFrameID      INTEGER
					}

	esSysIndex OBJECT-TYPE
		SYNTAX		INTEGER (1..2)
		ACCESS		read-only
		STATUS		mandatory
		DESCRIPTION	"System Index
					  1:NO1/DIRA,
					  2:NO2/DIRB
					
					*)No.2 is available for 1+1 system.
					*)DIR-A/B is available for 2-WAY system."
		::= { esSysEntry 1 }

	esSysTxFreq OBJECT-TYPE
		SYNTAX		DisplayString (SIZE (0..9))
		ACCESS		read-only
		STATUS		mandatory
		DESCRIPTION	"TX RF Frequency - tthe currently used transmission frequency.
					*) For Twin path configuration both respective parameters (1, 2) are shown.
					TX RF FREQUENCY(No.x) [MHz]  x=1 or 2
					TX RF FREQUENCY(DIR-y) [MHz] y=A or B
					*) No.2 is available when Redundancy is 1+1(HS) or 1+1(TP).
					*) DIR-A and DIR-B is available when Redundancy is 2-way."
		::= { esSysEntry 2 }

	esSysRxFreq OBJECT-TYPE
		SYNTAX		DisplayString (SIZE (0..9))
		ACCESS		read-only
		STATUS		mandatory
		DESCRIPTION	"RX RF Frequency - the currently used receiving frequency.
					*) For Twin path configuration both respective parameters (1, 2) are shown.
					RX RF FREQUENCY(No.x) [MHz]   x=1 or 2
					RX RF FREQUENCY(DIR-y) [MHz]  y=A or B
					*) No.2 is available when Redundancy is 1+1(HS) or 1+1(TP).
					*) DIR-A and DIR-B is available when Redundancy is 2-way."
		::= { esSysEntry 3 }

	esSysTxPowerCont OBJECT-TYPE
		SYNTAX		INTEGER(1..2)
		ACCESS		read-only
		STATUS		mandatory
		DESCRIPTION	"TX POWER CONTROL
					TX POWER CONTROL(DIR-y)   y=A or B 
					TX Power Control - shows the power control mode currently used by the ODU.
					The TX Power Control is
					 either Automatic Transmitter Power Control (ATPC) or Manual Transmitter Power Control (MTPC).
					  1:MTPC,
					  2:ATPC
						
					*) No.2 is not used.
					*) DIR-A and DIR-B is available when Redundancy is 2-way."
		::= { esSysEntry 4 }

	esSysFrameID OBJECT-TYPE
		SYNTAX		INTEGER (0..32)
		ACCESS		read-only
		STATUS		mandatory
		DESCRIPTION	"FRAME ID(No.x)  x=1 or 2
					FRAME ID(DIR-y) y=A or B
					Indicates that the frame ID numbers of an NE and its opposite are out of sync.
					  0:Invalid,
					  Other: Frame ID Number.
					
					*) No.2 is unavailable when Redundancy is 1+0 or 1+1(HS).
					*) No.2 is fixed to 0 when Redundancy is 1+0 or 1+1(HS).
					*) DIR-A and DIR-B is available when Redundancy is 2-way."
		::= { esSysEntry 5 }
		

-----------------------------------------------
-- provisioningGroup Group Definitions
-----------------------------------------------

	provCHGroup OBJECT IDENTIFIER
		::= { provisioningGroup 1 }

	chUsage OBJECT-TYPE
		SYNTAX		OCTET STRING (SIZE (48))
		ACCESS		read-write
		STATUS		mandatory
		DESCRIPTION	"CH USAGE(CHxx)
					  (xx=01-48)
					For setting the respective usage of the 48 available channels.
					  0:Invalid,
					  1:Not Used,
					  2:Used(E1),
					  3:Used(LAN)
					
					[Byte Description]
					  Byte 0 = CH01(0:Invalid, 1:Not Used, 2:Used(E1), 3:Used(LAN))
					  Byte 1 = CH02
					  ...
					  Byte 46 = CH47
					  Byte 47 = CH48
					TRAP=eventTrapPnSTDCHUsage"
		::= { provCHGroup 1 }

	chCondition OBJECT-TYPE
		SYNTAX		OCTET STRING (SIZE (6))
		ACCESS		read-write
		STATUS		mandatory
		DESCRIPTION	"CH CONDITION
					[Byte Description]
					  Byte 0 = CH USAGE ERROR REPORT (0:Invalid, 1:Disabled, 2:Enabled)
					  Byte 1 = AIS ACTIVATION CONDITION (0:INVALID, 1:LOF + HIGH BER, 2:LOF)
					  Byte 2 = AIS ACTIVATION DELAY (0:INVALID, 1:OFF, 2:ON) -- Not used
					  Byte 3 = AIS GENERATED REPORT (0:INVALID, 1:NOT REPORT, 2:REPORT)
					  Byte 4 = AIS RECEIVED REPORT (0:INVALID, 1:NOT REPORT, 2:REPORT)
					  Byte 5 = AIS RECEIVED CONDITION (0:INVALID, 1:ALARM, 2:STATUS)
					TRAP=eventTrapPnSTDCHCondition"
		::= { provCHGroup 2 }

	chImpedance OBJECT-TYPE
		SYNTAX		OCTET STRING (SIZE (10))
		ACCESS		read-write
		STATUS		mandatory
		DESCRIPTION	"E1 PORT IMPEDANCE
					For setting the impedance of the E1 interface port.
					*) The designated channel(s) must have been selected for use.
					  0:Invalid,
					  1:120[ohm],
					  2:75[ohm]
						
					[Byte Description]
					  Byte 0 = E1 PORT IMPEDANCE(CH1) (0:Invalid, 1:120[ohm], 2:75[ohm])
					  Byte 1 = E1 PORT IMPEDANCE(CH2)
					  Byte 2 = E1 PORT IMPEDANCE(CH3)
					  Byte 3 = E1 PORT IMPEDANCE(CH4)
					  Byte 4 = E1 PORT IMPEDANCE(CH5-8)
					  Byte 5 = E1 PORT IMPEDANCE(CH9-16)
					  Byte 6 = E1 PORT IMPEDANCE(CH17-24)
					  Byte 7 = E1 PORT IMPEDANCE(CH25-32)
					  Byte 8 = E1 PORT IMPEDANCE(CH33-40)
					  Byte 9 = E1 PORT IMPEDANCE(CH41-48)
	
					TRAP=eventTrapPnSTDCHImpedance"
		::= { provCHGroup 3 }

	msAisGeneration OBJECT-TYPE
		SYNTAX		INTEGER (0..2)
		ACCESS		read-write
		STATUS		mandatory
		DESCRIPTION	"MS-AIS GENERATION
					  0:Invalid,
					  1:Disabled,
					  2:Enabled
					TRAP=eventTrapPnSTDMSAisGeneration"
		::= { provCHGroup 4 }

	provDXCGroup OBJECT IDENTIFIER
		::= { provisioningGroup 2 }

	dxcFunction OBJECT-TYPE
		SYNTAX		INTEGER (0..2)
		ACCESS		read-write
		STATUS		mandatory
		DESCRIPTION	"DXC FUNCTION
					  0:Invalid,
					  1:Disabled,
					  2:Enabled
					TRAP=eventTrapPnSTDDxcFunction"
		::= { provDXCGroup 1 }

	dxcCHSetting OBJECT-TYPE
		SYNTAX		OCTET STRING (SIZE (156))
		ACCESS		read-write
		STATUS		mandatory
		DESCRIPTION	"DXC CH SETTING
					[Byte Description]
					  Byte 0 = TRIB CH01 Setting
					  ...
					  Byte 47 = TRIB CH 48 Setting
					  
					  Byte 48 - Byte 51 = reserve
					  
					  Byte 52 = DIR-A CH01 Setting
					  ...
					  Byte 99 = DIR-A CH048 Setting
					
					  Byte 100 - Byte 103 = reserve
					  
					  Byte 104 = DIR-B CH01 Setting
					  ...
					  Byte 151 = DIR-B CH48 Setting
					
					  Byte 152 - Byte 155 = reserve
					  
					[Bit Description]
					  6bit(5-0)
					  000001 = CH1
					  ...
					  110000 = CH48
					  000000 = Invalid
	
					  2bit(7-6)
					  00 = TRIB
					  01 = DIR-A
					  10 = DIR-B
					  11 = LAN
	
					  *)Reserved : 0x11111111
					  *)Invalid : 0x00000000
					TRAP=eventTrapPnSTDDxcCHSetting"
		::= { provDXCGroup 2 }













	provBERThresholdGroup OBJECT IDENTIFIER
		::= { provisioningGroup 3 }

	provBERThreshold OBJECT-TYPE
		SYNTAX		OCTET STRING (SIZE (8))
		ACCESS		read-write
		STATUS		mandatory
		DESCRIPTION	"BER THRESHOLD SETTING
					 High/Low BER Threshold:Allows the setting of the BER value that is to trigger the alarm.
					 E-BER(DMR):Sets the E-BER threshold for the digital microwave radio (DMR).
					 SD(DMR):Sets the Signal Degrade threshold for the DMR.
					 E-BER(MUX):Sets the E-BER threshold for the multiplexer (MUX).
					 SD(MUX):Sets the Signal Degrade threshold for the multiplexer (MUX).
	
					[Byte Description]
					  Byte 0 = HIGH BER THRESHOLD/HIGH BER THRESHOLD(DIR-A)  
							(0:INVALID, 1:1E-3, 2:1E-4, 3:1E-5)
					  Byte 1 = HIGH BER THRESHOLD(DIR-B) 
							(0:INVALID, 1:1E-3, 2:1E-4, 3:1E-5)
					*) This Value is fixed to 0 when Redundancy isn't 2-way.
					  Byte 2 = LOW BER THRESHOLD/LOW BER THRESHOLD(DIR-A) 
							(0:INVALID, 1:1E-6, 2:1E-7, 3:1E-8, 4:1E-9)
					  Byte 3 = LOW BER THRESHOLD(DIR-B) 
					              (0:INVALID, 1:1E-6, 2:1E-7, 3:1E-8, 4:1E-9)
					*) This Value is fixed to 0 when Redundancy isn't 2-way.
					  Byte 4 = E-BER(DMR)
					              (0:INVALID, 1:1E-3, 2:1E-4, 3:1E-5)
					  Byte 5 = SD(DMR)
					              (0:INVALID, 1:1E-6, 2:1E-7, 3:1E-8, 4:1E-9)
					  Byte 6 = E-BER(MUX)
					              (0:INVALID, 1:1E-3, 2:1E-4, 3:1E-5)
					  Byte 7 = SD(MUX)
					              (0:INVALID, 1:1E-6, 2:1E-7, 3:1E-8, 4:1E-9)
					TRAP=eventTrapPnSTDBERThreshold"
		::= { provBERThresholdGroup 1 }

	provSubIntfcGroup OBJECT IDENTIFIER
		::= { provisioningGroup 4 }

	provSubIntfc OBJECT-TYPE
		SYNTAX		OCTET STRING (SIZE (4))
		ACCESS		read-write
		STATUS		mandatory
		DESCRIPTION	"SUB INTERFACE
					  0:INVALID,
					  1:NOT USED,
					  2:E1 WAYSIDE+SC LAN(SC),
					  3:E1 WAYSIDE,
					  4:SC LAN(WAYSIDE),
					  5:SC LAN(SC)

					TRAP=eventTrapPnSTDSubIntfc"
		::= { provSubIntfcGroup 1 }

	provSCAssignmentGroup OBJECT IDENTIFIER
		::= { provisioningGroup 5 }

	provSCAssign OBJECT-TYPE
		SYNTAX		OCTET STRING (SIZE (8))
		ACCESS		read-write
		STATUS		mandatory
		DESCRIPTION	"SC ASSIGNMENT
					RS-232C-1/2,V-11-1/V-11-2:Assigns the respective SC to an interface.
					V-11-1/V-11-2 Direction Setting:Enables the V-11-1 / V-11-2 service channel clocking to be set
					 (i.e. co-directional or contra-directional).
					*) Only if SC have been assigned (without SC assignment it is inactive).
						
					[Byte Description]
					  Byte 0 = RS-232C-1
							(0:INVALID, 1:NOT USED, 2:SC1, 3:SC2,
							 4:SC3, 5:SC4, 16:E1(MUX), 17:F1(MUX),
							 19:E1(DMR), 20:F1(DMR))
					  Byte 1 = RS-232C-2
							(0:INVALID, 1:NOT USED, 2:SC1, 3:SC2,
							 4:SC3, 5:SC4, 16:E1(MUX), 17:F1(MUX),
							 19:E1(DMR), 20:F1(DMR))
					  Byte 2 = V11-1
							(0:INVALID, 1:NOT USED, 2:SC1, 3:SC2, 
							 4:SC3, 5:SC4, 16:E1(MUX), 17:F1(MUX), 
							 18:DCCr(MUX), 19:E1(DMR), 20:F1(DMR), 
							 21:DCCr(DMR))
							((2WAY) 0:INVALID, 1:NOT USED, 2:SC1(DIR-A), 
							 3:SC2(DIR-A), 4:SC3(DIR-A), 5:SC4(DIR-A), 
							 6:SC1(DIR-B), 7:SC2(DIR-B), 8:SC3(DIR-B), 
							 9:SC4(DIR-B), 10:-, 11:-, 12:-, 13:-, 14:-, 15:-, 
							 16:-, 17:-, 18:-, 19:-, 20:-, 21:-)
					  Byte 3 = V11-2
							(0:INVALID, 1:NOT USED, 2:SC1, 3:SC2, 
							 4:SC3, 5:SC4, 16:E1(MUX), 17:F1(MUX), 
							 18:DCCr(MUX), 19:E1(DMR), 20:F1(DMR), 
							 21:DCCr(DMR))
							((2WAY) 0:INVALID, 1:NOT USED, 2:SC1(DIR-A), 
							 3:SC2(DIR-A), 4:SC3(DIR-A), 5:SC4(DIR-A), 
							 6:SC1(DIR-B), 7:SC2(DIR-B), 8:SC3(DIR-B), 
							 9:SC4(DIR-B), 10:-, 11:-, 12:-, 13:-, 14:-, 15:-, 
							 16:-, 17:-, 18:-, 19:-, 20:-, 21:-)
					  Byte 4 = SC LAN1
							(0:INVALID, 1:NOT USED, 2:SC1, 10:SC1-2,
							 14:SC1-4, 16:E1(MUX), 17:F1(MUX), 18:DCCr(MUX),
							 19:E1(DMR), 20:F1(DMR), 21:DCCr(DMR))
							((2WAY)0:INVALID, 1:NOT USED, 2:SC1, 3:SC2, 
							 4:SC3, 5:SC4, 6:-, 7:-, 8:-, 9:-, 10:-, 11:SC1-2, 12:-, 
							 13:-, 14:-, 15:SC1-4, 16:E1(MUX), 17:F1(MUX), 18:DCCr(MUX), 
							 19:E1(DMR), 20:F1(DMR), 21:DCCr(DMR))
					  Byte 5 = SC LAN2
							(0:INVALID, 1:NOT USED, 2:SC1, 10:SC1-2,
							 14:SC1-4, 16:E1(MUX), 17:F1(MUX), 18:DCCr(MUX),
							 19:E1(DMR), 20:F1(DMR), 21:DCCr(DMR))
							((2WAY)0:INVALID, 1:NOT USED, 2:SC1, 3:SC2, 
							 4:SC3, 5:SC4, 6:-, 7:-, 8:-, 9:-, 10:-, 11:SC1-2, 12:-, 
							 13:-, 14:-, 15:SC1-4, 16:E1(MUX), 17:F1(MUX), 18:DCCr(MUX), 
							 19:E1(DMR), 20:F1(DMR), 21:DCCr(DMR))
					  Byte 6 = V11-1 DIRECTION SETTING
							(0:INVALID, 1:CO-DIRECTIONAL, 2:CONTRA-DIRECTIONAL)
					  Byte 7 = V11-2 DIRECTION SETTING
							(0:INVALID, 1:CO-DIRECTIONAL, 2:CONTRA-DIRECTIONAL)
					TRAP=eventTrapPnSTDSCAssign"
		::= { provSCAssignmentGroup 1 }

	provLANPortSetGroup OBJECT IDENTIFIER
		::= { provisioningGroup 6 }

	provLANPortSet OBJECT-TYPE
		SYNTAX		OCTET STRING (SIZE (41))
		ACCESS		read-write
		STATUS		mandatory
		DESCRIPTION	"LAN PORT SETTING
					LAN Switching Function:Allows the port switching function to be 'enabled' / 'disabled'.
					*) When 2-Port LAN interface is used in the flwng.
					   configuration:Port1-2 Shared/1 Port Only (Main), or Port1-2 Shared/1 Port Only (SC)
					LAN Speed & Duplex Port 1-2:
					For setting the speed and duplex parameters of the LAN interface ports (1, 2).
					*) When LAN Port1 (or 2) has been selected for use.
					LAN Flow Control Port 1-2:
					For setting the flow control parameters of the LAN interface ports (1, 2).
					*) When LAN Port1 (or 2) has been selected for use.
					LAN Collision Report Port 1-2:
					For setting whether collision status is reported (or not) for the interface ports (1, 2).
					*) Only when Speed & Duplex Port 1-2 = AUTONEG or HALF-DUPLEX.
					LAN Link Loss Forwarding Port 1-2:
					For enabling/disabling the Link Loss Forwarding function for LAN interface ports (1, 2).
					*) Only when LAN Port1 (or 2) has been selected for use.
					   Not available when LAN Switching Function is 'enabled'.
					LAN 2M Framing:For setting the type of 2M framing of the LAN interface ports (1, 2).
					*) Only during the following conditions:
					2-Port LAN >> Radio Mapping
					 = Port1-2 Shared / 1 Port Only (Main) and 2Port LAN
					 = 2Mbps in Equipment Setup window.
					LAN Port 1 -2 Usage:For setting the usage of the LAN interface ports (1, 2).
					*) Only for PDH with LAN  interface.
					[Byte Description]
					  Byte 0 = SWITCHING FUNCTION
					       (0:INVALID, 1:DISABLED, 2:ENABLED)
					
					  Byte 1 = SPEED & DUPLEX PORT1
					  Byte 2 = SPEED & DUPLEX PORT2
					  Byte 3 = SPEED & DUPLEX PORT3
					  Byte 4 = SPEED & DUPLEX PORT4
					  Byte 5 = INTFC(2) SPEED & DUPLEX PORT1
					  Byte 6 = INTFC(2) SPEED & DUPLEX PORT2
					       (0:INVALID, 1:AUTONEG(AUTO-MDI/MDIX),
					        2:10M-HALF(MDI), 3:10M-FULL(MDI), 
					        4:100M-HALF(MDI), 5:100M-FULL(MDI), 
					        6:10M-HALF(MDIX), 7:10M-FULL(MDIX), 
					        8:100M-HALF(MDIX), 9:100M-FULL(MDIX))
					
					  Byte 7 = FLOW CONTROL PORT1
					  Byte 8 = FLOW CONTROL PORT2
					  Byte 9 = FLOW CONTROL PORT3
					  Byte 10 = FLOW CONTROL PORT4
					  Byte 11 = INTFC(2) FLOW CONTROL PORT1
					  Byte 12 = INTFC(2) FLOW CONTROL PORT2
					       (0:INVALID, 1:OFF, 2:ON)
					
					  Byte 13 = COLLISION REPORT PORT1
					  Byte 14 = COLLISION REPORT PORT2
					  Byte 15 = COLLISION REPORT PORT3
					  Byte 16 = COLLISION REPORT PORT4
					  Byte 17 = INTFC(2) COLLISION REPORT PORT1
					  Byte 18 = INTFC(2) COLLISION REPORT PORT2
					       (0:INVALID, 1:DISABLED, 2:ENABLED)
					
					  Byte 19 = LINK LOSS FORWARDING PORT1
					  Byte 20 = LINK LOSS FORWARDING PORT2
					  Byte 21 = LINK LOSS FORWARDING PORT3
					  Byte 22 = LINK LOSS FORWARDING PORT4
					  Byte 23 = INTFC(2) LINK LOSS FWD PORT1
					  Byte 24 = INTFC(2) LINK LOSS FWD PORT2
					       (0:INVALID, 1:DISABLED, 2:ENABLED)
					
					  Byte 25 = LOCK SOURCE SETTING
					       (0:INVALID, 1:INTERNAL CLOCK, 
					        2:DMR -> INTERNAL CLOCK)
					
					  Byte 26 = 2M FRAMING PORT1
					  Byte 27 = 2M FRAMING PORT2
					  Byte 28 = 2M FRAMING PORT3
					  Byte 29 = 2M FRAMING PORT4
					       (0:INVALID, 1:UNFRAMED, 2:PCM31C(FAS+CRC), 
					        3:PCM31(FAS), 4:PCM30C(MFAS+CRC), 5:PCM30(MFAS))
					
					  Byte 30 = PORT1 USAGE
					  Byte 31 = PORT2 USAGE
					  Byte 32 = PORT3 USAGE
					  Byte 33 = PORT4 USAGE
					  Byte 34 = INTFC(2) PORT1 USAGE
					  Byte 35 = INTFC(2) PORT2 USAGE
					       (0:INVALID, 1:NOT USED, 2:USED)
					  Byte 36 = SUB SWITCHING FUNCTION
					       (0:INVALID, 1:DISABLED, 2:ENABLED)
	
					  Byte 37 = MEDIA TYPE
						   (0:INVALID, 1:SFP, 2:RJ-45)
	
					  Byte 38 = GbE SPEED & DUPLEX
					       (0:INVALID, 1:RESERVE1, 
							2:AUTONEG(AUTO 1000MB FULL DUPLEX),
							3:AUTONEG(AUTO MDI/MDIX),4:RESERVE4, 
							5:RESERVE5, 6100MB-FULL(MDI),
							7:100MB-FULL(MDIX), 8:100MB-HALF(MDI),
							9:100MB-HALF(MDIX), 10:10MB-FULL(MDI),
							11:10MB-FULL(MDIX), 12:10MB-HALF(MDI),
							13:10MB-HALF(MDIX))
	
					  Byte 39 = GbE LINK LOSS FORWARDING
					       (0:INVALID, 1:DISABLED, 2:ENABLED)
	
					  Byte 40 = GbE FLOW CONTROL
					       (0:INVALID, 1:OFF, 2:ON)
					TRAP=eventTrapPnSTDLanPortSetting"
		::= { provLANPortSetGroup 1 }

	provALSGroup OBJECT IDENTIFIER
		::= { provisioningGroup 7 }

	alsFunc OBJECT-TYPE
		SYNTAX		OCTET STRING (SIZE (2))
		ACCESS		read-write
		STATUS		mandatory
		DESCRIPTION	"ALS FUNCTION
					The Automatic Laser Shutdown (ALS) that intermittently turns the laser output on/off after a designated interval from the start of LOS mode is 'Enabled' or 'Disabled'.
					*) Only when  MAIN(WORK) = STM-1 (OPTICAL) interface.
					  0:Invalid,
					  1:Disabled,
					  2:Enabled
					TRAP=eventTrapPnSTDAlsFunction"
		::= { provALSGroup 1 }

	provTxPowerContGroup OBJECT IDENTIFIER
		::= { provisioningGroup 8 }

	provTxPowerContTable OBJECT-TYPE
		SYNTAX		SEQUENCE OF ProvTxPowerContEntry
		ACCESS		not-accessible
		STATUS		mandatory
		DESCRIPTION	"PROV TX Power Cont Table"
		::= { provTxPowerContGroup 1 }

	provTxPowerContEntry OBJECT-TYPE
		SYNTAX		ProvTxPowerContEntry
		ACCESS		not-accessible
		STATUS		mandatory
		INDEX		{
						provTxPowerContIndex
					}
		::= { provTxPowerContTable 1 }

	ProvTxPowerContEntry ::= SEQUENCE {
					  provTxPowerContIndex  INTEGER,
					  provTxPowerContValue  OCTET STRING
					}

	provTxPowerContIndex OBJECT-TYPE
		SYNTAX		INTEGER (1..2)
		ACCESS		read-only
		STATUS		mandatory
		DESCRIPTION	"PROV TX Power Cont Index
					 1:No. 1/DIR-A
					 2:No. 2/DIR-B
					
					*)No.2 is available for 1+1 system.
					*)DIR-A/B is available for 2-WAY system."
		::= { provTxPowerContEntry 1 }

	provTxPowerContValue OBJECT-TYPE
		SYNTAX		OCTET STRING (SIZE (9))
		ACCESS		read-write
		STATUS		mandatory
		DESCRIPTION	"TX POWER CTRL
					MTPC TX Power:Allows the transmission power (dB) to be set for MTPC operation.
					*) Only when MTPC is used.
					ATPC THRESHOLD LEVEL:Allows the transmission power (dB) thresholds to be set for ATPC operation.
					Additional ATT:For setting the additional attenuation parameters (dB).
					*) Not available if Modulation Scheme = QPSK.
					ATPC Range (Max/Min):For setting the minimum and maximum ATPC transmission power (dB).
					*) Only when ATPC is used.
					ATPC Power Mode:For setting the power mode (Hold: maintaining present status, MIN: minimum level).
					*) Only when ATPC is used.
						
					[Byte Description]
					  Byte 0 = MTPC TX POWER
					      (0 - 255)
					  Byte 1 = ATPC THRESHOLD LEVEL integral number(signed char)
					      (-128 - 127)
					  Byte 2 = ATPC THRESHOLD LEVEL a place of decimal
					      (0 - 9) 
					  *) ATPC THRESHOLD LEVEL should be set 0.
					  Byte 3 = ADDITIONAL ATT
					      (0 - 255)
					  Byte 4 = ATPC(MAX)
					      (0 - 255)
					  Byte 5 = ATPC(MIN)
					      (0 - 255)
					  Byte 6 = HYSTERESIS -- Not used
					      (0 - 255)
					  *) This value can't be changed by user.
					  In case of setting provTxPowerContValue, HYSTERESIS is same as the value that is got from NE.
					  Byte 7 = ATPC POWER MODE
					      (0:INVALID, 1:HOLD, 2:MAX, 3:MIN)
					  *) 2:MAX is not available.
					  Byte 8 = COMM ALARM MODE -- No.2 is not used.
					      (0:INVALID, 1:HOLD, 2:MUTE)
					  *) This value can't be changed by user.
					  In case of setting provTxPowerContValue, COMM ALARM MODE is same as the value that is got from NE.
					TRAP=eventTrapPnSTDTxPowerContValue"
		::= { provTxPowerContEntry 2 }

	provSWCondGroup OBJECT IDENTIFIER
		::= { provisioningGroup 9 }

	provSWCondTxRxSW OBJECT-TYPE
		SYNTAX		OCTET STRING (SIZE (5))
		ACCESS		read-write
		STATUS		mandatory
		DESCRIPTION	"CONDITION for TX/RX SW 
					TX / RX SW Priority:Enables the respective priority to be set (pre-alarm TX / RX route or No. 1).
					*) Only for 1+1 hot standby.
	 				RX SW Maintenance Mode:
	 				Has two settings: 'manual' for disabling the RX switch and 'forced' for overriding the disabled switch.
					*) Only for 1+1 hot standby / twinpath.
					RX SW Condition-Early Warning:
					For setting whether the EW (Early Warning) feature is to be included in the parameters.
					*) Only for 1+1 hot standby / twinpath.
					[Byte Description]
					  Byte 0 = TX SW PRIORITY
					      (0:INVALID, 1:NON PRIORITY, 2:PRIORITY No.1)
					  Byte 1 = RX SW PRIORITY
					      (0:INVALID, 1:NON PRIORITY, 2:PRIORITY No.1)
					  Byte 2 = RX SW MAINTENANCE MODE
					      (0:INVALID, 1:MANUAL, 2:FORCED)
					  Byte 3 = RX SW CONDITION-EARLY WARNING
					      (0:INVALID, 1:INCLUDED EW, 2:EXCLUDED EW)
					  Byte 4 = RX SW CONDITION-XPIC RESET -- Not used
					      (0:INVALID, 1:INCLUDED CROSS RESET, 2:EXCLUDED CROSS RESET)
					TRAP=eventTrapPnSTDSWCondTxRx"
		::= { provSWCondGroup 1 }

	provSWCondAPS OBJECT-TYPE
		SYNTAX		OCTET STRING (SIZE (7))
		ACCESS		read-write
		STATUS		mandatory
		DESCRIPTION	"CONDITION for APS
					APS Condition-SF:For setting whether Signal Fail is to be included in the parameters.
					*) Only when ALS Function is enabled.
					APS Condition-Signal Degrade:
					For setting whether Signal Degrade is to be included in the parameters.
					*) Only when ALS Function is enabled.
					Lock-in Usage:Allows the Lock-in function to be 'enabled' or 'disabled'.
					Lock-in Count:
					For setting the number ('count') of oscillations (within the preset 'Detect[ion] Time') that will activate the Lock-in.
					*) Only when Lock-in function is enabled.
					Lock-in Detect Time:
					For setting the length of the time interval within which the Lock-in Count is conducted.
					*) Only when Lock-in function is enabled.
					Lock-in Hold Time:Sets the duration for maintaining ('holding') the Lock-in function.
					*) Only when Lock-in function is enabled.
					[Byte Description]
					  Byte 0 = APS ALARM PRIORITY 
					      (0:INVALID, 1:AUTO, 2:FORCED)
					  Byte 1 = APS CONDITION-SF
					      (0:INVALID, 1:PRIORITY HIGH, 2:PRIORITY LOW)
					  Byte 2 = APS CONDITION-SD
					      (0:INVALID, 1:INCLUDED SD, 2:EXCLUDED SD)
					  Byte 3 = LOCK IN USAGE (0:INVALID, 1:NOT USED, 2:USED)
					  Byte 4 = LOCK IN COUNT (VALUE(INT 0-255))
					  *) This value is fixed when 'LOCK IN USAGE' isn't 'USED'.
					  Byte 5 = LOCK IN DETECT TIME (VALUE(INT 0-60))
					  *) This value must be set a value same as SMU when 'LOCK IN USAGE' isn't 'USED'.
					  Byte 6 = LOCK IN HOLD TIME (VALUE(INT 0-48))
					  *) This value must be set a value same as SMU when 'LOCK IN USAGE' isn't 'USED'.
					TRAP=eventTrapPnSTDSWCondAPS"
		::= { provSWCondGroup 2 }

	provRelayGroup OBJECT IDENTIFIER
		::= { provisioningGroup 10 }

	provRelayConfigData OBJECT-TYPE
		SYNTAX		OCTET STRING (SIZE (48))
		ACCESS		read-write
		STATUS		mandatory
		DESCRIPTION	"RELAY CONFIGURATION
					Relay Configuration:The six relays in the IDU are each associated with a parallel alarm.
					Four can be configured and the other two (RL01 and RL02) have fixed alarms.
					[Bit Description]
					  (Relay x (x:1~6))
					   [START BIT] = 64 * (x - 1)
					
					    Bit (0 + [START BIT]) = MAINT (Remark1)
					    Bit (1 + [START BIT]) = PS ALARM1 (Remark2)
					    Bit (2 + [START BIT]) = PS ALARM2 (Remark2)
					    Bit (3 + [START BIT]) = (FIXED to 0)
					    Bit (4 + [START BIT]) = (FIXED to 0)
					    Bit (5 + [START BIT]) = (FIXED to 0)
					    Bit (6 + [START BIT]) = (FIXED to 0)
					    Bit (7 + [START BIT]) = CPU ALARM (Remark2)
					    Bit (8 + [START BIT]) = ODU ALARM1 (Remark7)
					    Bit (9 + [START BIT]) = ODU ALARM2 (Remark7)
					    Bit (10 + [START BIT]) = IDU ALARM (Remark7)
					    Bit (11 + [START BIT]) = (FIXED to 0)
					    Bit (12 + [START BIT]) = (FIXED to 0)
					    Bit (13 + [START BIT]) = (FIXED to 0)
					    Bit (14 + [START BIT]) = (FIXED to 0)
					    Bit (15 + [START BIT]) = (FIXED to 0)
					    Bit (16 + [START BIT]) = TX POWER ALARM1 (Remark7)
					    Bit (17 + [START BIT]) = TX POWER ALARM2 (Remark7)
					    Bit (18 + [START BIT]) = TX IN LEV ALARM1 (Remark7)
					    Bit (19 + [START BIT]) = TX IN LEV ALARM2 (Remark7)
					    Bit (20 + [START BIT]) = RX LEV ALARM1 (Remark7)
					    Bit (21 + [START BIT]) = RX LEV ALARM2 (Remark7)
					    Bit (22 + [START BIT]) = APC ALARM1 (Remark7)
					    Bit (23 + [START BIT]) = APC ALARM2 (Remark7)
					    Bit (24 + [START BIT]) = IF CABLE SHORT ALARM1 (Remark7)
					    Bit (25 + [START BIT]) = IF CABLE SHORT ALARM2 (Remark7)
					    Bit (26 + [START BIT]) = ODU CPU ALARM1 (Remark7)
					    Bit (27 + [START BIT]) = ODU CPU ALARM2 (Remark7)
					    Bit (28 + [START BIT]) = (FIXED to 0)
					    Bit (29 + [START BIT]) = (FIXED to 0)
					    Bit (30 + [START BIT]) = (FIXED to 0)
					    Bit (31 + [START BIT]) = (FIXED to 0)
					    Bit (32 + [START BIT]) = MOD ALARM1 (Remark7)
					    Bit (33 + [START BIT]) = MOD ALARM2 (Remark7)
					    Bit (34 + [START BIT]) = DEM ALARM1 (Remark7)
					    Bit (35 + [START BIT]) = DEM ALARM2 (Remark7)
					    Bit (36 + [START BIT]) = CH INPUT LOSS (Remark7)
					    Bit (37 + [START BIT]) = CH AIS RECEIVED (Remark7)
					    Bit (38 + [START BIT]) = CH AIS GENERATED (Remark7)
					    Bit (39 + [START BIT]) = CH USAGE ERROR (Remark7)
					    Bit (40 + [START BIT]) = LOW BER ALARM1 (Remark7)
					    Bit (41 + [START BIT]) = LOW BER ALARM2 (Remark7)
					    Bit (42 + [START BIT]) = HIGH BER ALARM1 (Remark7)
					    Bit (43 + [START BIT]) = HIGH BER ALARM2 (Remark7)
					    Bit (44 + [START BIT]) = STM-1 TF ALARM (Remark7)
					    Bit (45 + [START BIT]) = STM-1 SLOS (Remark7)
					    Bit (46 + [START BIT]) = STM-1 RLOS (Remark7)
					    Bit (47 + [START BIT]) = LAN LINK ALARM (Remark7)
					    Bit (48 + [START BIT]) = LOF1 (Remark7)
					    Bit (49 + [START BIT]) = LOF2 (Remark7)
					    Bit (50 + [START BIT]) = XREF ALARM1 (Remark7)
					    Bit (51 + [START BIT]) = XREF ALARM2 (Remark7)
					    Bit (52 + [START BIT]) = XCTRL ALARM (Remark7)
					    Bit (53 + [START BIT]) = XCTRL ALARM2 (Remark7) -- Not used
					    Bit (54 + [START BIT]) = SC LAN LINK ALARM (Remark7)
					    Bit (55 + [START BIT]) = WS INPUT LOSS (Remark7)
					    Bit (56 + [START BIT]) = CLUSTER ALARM1 (Remark6)
					    Bit (57 + [START BIT]) = CLUSTER ALARM2 (Remark5)
					    Bit (58 + [START BIT]) = CLUSTER ALARM3 (Remark4)
					    Bit (59 + [START BIT]) = CLUSTER ALARM4 (Remark3)
					    Bit (60 + [START BIT]) = HK1 OUTPUT (Remark6)
					    Bit (61 + [START BIT]) = HK2 OUTPUT (Remark5)
					    Bit (62 + [START BIT]) = HK3 OUTPUT (Remark4)
					    Bit (63 + [START BIT]) = HK4 OUTPUT (Remark3)
						
					  Remark1 : The value of Relay 1 is fixed to  1. 
					            The value of the other Relay is fixed to 0.
					  Remark2 : The value of Relay 2 is fixed to 1. 
					            The value of the other Relay is fixed to 0.
					  Remark3 : The value of Relay 3 is fixed to 1. 
					            The value of the other Relay is fixed to 0.
					  Remark4 : The value of Relay 4 is fixed to 1. 
					            The value of the other Relay is fixed to 0.
					  Remark5 : The value of Relay 5 is fixed to 1. 
					            The value of the other Relay is fixed to 0.
					  Remark6 : The value of Relay 6 is fixed to 1. 
					            The value of the other Relay is fixed to 0.
					  Remark7 : The value of Relay 1 and Relay 2 is fixed to 0. 
					            The value of the other Relay is 0 and 1.
					
					TRAP=eventTrapPnSTDRelayConfigData"
		::= { provRelayGroup 1 }

	provRelayClusterAssign OBJECT-TYPE
		SYNTAX		OCTET STRING (SIZE (4))
		ACCESS		read-write
		STATUS		mandatory
		DESCRIPTION	"CLUSTER INPUT
					Allows the cluster alarm input to be enabled/ disabled.
					  0:Invalid,
					  1:Disabled,
					  2:Enabled
						
					[Byte Description]
					  Byte 0 = CLUSTER1 INPUT (0:Invalid, 1:Disabled, 2:Enabled)
					  Byte 1 = CLUSTER2 INPUT
					  Byte 2 = CLUSTER3 INPUT
					  Byte 3 = CLUSTER4 INPUT
					TRAP=eventTrapPnSTDRelayClusterAssign"
		::= { provRelayGroup 2 }

	provTCNTresholdGroup OBJECT IDENTIFIER
		::= { provisioningGroup 11 }

	provTCNThreshold15minTotalTable OBJECT-TYPE
		SYNTAX		SEQUENCE OF ProvTCNThreshold15minTotalEntry
		ACCESS		not-accessible
		STATUS		mandatory
		DESCRIPTION	"PROV TCN Threshold 15min Total Table"
		::= { provTCNTresholdGroup 1 }

	provTCNThreshold15minTotalEntry OBJECT-TYPE
		SYNTAX		ProvTCNThreshold15minTotalEntry
		ACCESS		not-accessible
		STATUS		mandatory
		INDEX		{
						provTCNThreshold15minTotalWPIndex,provTCNThreshold15minTotalORIndex
					}
		::= { provTCNThreshold15minTotalTable 1 }

	ProvTCNThreshold15minTotalEntry ::= SEQUENCE {
					  provTCNThreshold15minTotalWPIndex  INTEGER,
					  provTCNThreshold15minTotalORIndex  INTEGER,
					  provTCNThreshold15minTotalValue    OCTET STRING
					}

	provTCNThreshold15minTotalWPIndex OBJECT-TYPE
		SYNTAX		INTEGER (1..4)
		ACCESS		read-only
		STATUS		mandatory
		DESCRIPTION	"TCN 15min Current Total Working/Protection Index
					  1:Working(MUX),
					  2:Protection(MUX),
					  3:Working(DMR)/Working(DIR-A)
					  4:Protection(DMR)/Working(DIR-B)
						
					*) MUX side is not used when using LAN.
					*) Protection is only used when APS function is used.
					*) DIR-* is only used when Redundancy is 2-Way."
		::= { provTCNThreshold15minTotalEntry 1 }

	provTCNThreshold15minTotalORIndex OBJECT-TYPE
		SYNTAX		INTEGER (1..2)
		ACCESS		read-only
		STATUS		mandatory
		DESCRIPTION	"TCN Threshold 15min Total Occur/Recover Index
					  1:Occur,
					  2:Recover"
		::= { provTCNThreshold15minTotalEntry 2 }

	provTCNThreshold15minTotalValue OBJECT-TYPE
		SYNTAX		OCTET STRING (SIZE (24))
		ACCESS		read-write
		STATUS		mandatory
		DESCRIPTION	"TCN THRESHOLD 15MIN TOTAL	
					[Byte Description]
					  Byte 0 - Byte 3   = OFS TCN THRESHOLD TOTAL-15min (0 - 900)
					  Byte 4 - Byte 7   = UAS TCN THRESHOLD TOTAL-15min (0 - 900)
					  Byte 8 - Byte 11 = ES TCN THRESHOLD TOTAL-15min  (0 - 900)
					  Byte 12 - Byte 15 = SES TCN THRESHOLD TOTAL-15min (0 - 900)
					  Byte 16 - Byte 19 = BBE TCN THRESHOLD TOTAL-15min 
					                       (PDH(Bit Rate = 5MB)   : 0 - 200700
					                        PDH(Bit Rate = 10MB)  : 0 - 402300   
					                        PDH(Bit Rate = 20MB)  : 0 - 804600
					                        PDH(Bit Rate = 40MB)  : 0 - 804600
					                        PDH(Bit Rate = 80MB)  : 0 - 1611000
					                        PDH(Bit Rate = 100MB) : 0 - 1611000
					                        SDH(Bit Rate = 156MB) : 0 - 2159100)
					  Byte 20 - Byte 23 = SEP TCN THRESHOLD TOTAL-15min (0 - 900)
					TRAP=eventTrapPnSTDTCNTreshold15minTotal"
		::= { provTCNThreshold15minTotalEntry 3 }

	provTCNThreshold1dayTotalTable OBJECT-TYPE
		SYNTAX		SEQUENCE OF ProvTCNThreshold1dayTotalEntry
		ACCESS		not-accessible
		STATUS		mandatory
		DESCRIPTION	"PROV TCN Threshold 1day Total Table"
		::= { provTCNTresholdGroup 3 }

	provTCNThreshold1dayTotalEntry OBJECT-TYPE
		SYNTAX		ProvTCNThreshold1dayTotalEntry
		ACCESS		not-accessible
		STATUS		mandatory
		INDEX		{
						provTCNThreshold1dayTotalWPIndex,provTCNThreshold1dayTotalORIndex
					}
		::= { provTCNThreshold1dayTotalTable 1 }

	ProvTCNThreshold1dayTotalEntry ::= SEQUENCE {
					  provTCNThreshold1dayTotalWPIndex  INTEGER,
					  provTCNThreshold1dayTotalORIndex  INTEGER,
					  provTCNThreshold1dayTotalValue    OCTET STRING
					}

	provTCNThreshold1dayTotalWPIndex OBJECT-TYPE
		SYNTAX		INTEGER (1..4)
		ACCESS		read-only
		STATUS		mandatory
		DESCRIPTION	"TCN 1day Current Total Working/Protection Index
					  1:Working(MUX),
					  2:Protection(MUX),
					  3:Working(DMR)/Working(DIR-A)
					  4:Protection(DMR)/Working(DIR-B)
					
					*) MUX side is not used when using LAN.
					*) Protection is only used when APS function is used.
					*) DIR-* is only used when Redundancy is 2-Way."
		::= { provTCNThreshold1dayTotalEntry 1 }

	provTCNThreshold1dayTotalORIndex OBJECT-TYPE
		SYNTAX		INTEGER (1..2)
		ACCESS		read-only
		STATUS		mandatory
		DESCRIPTION	"TCN Threshold 1day Total Occur/Recover Index
					  1:Occur,
					  2:Recover"
		::= { provTCNThreshold1dayTotalEntry 2 }

	provTCNThreshold1dayTotalValue OBJECT-TYPE
		SYNTAX		OCTET STRING (SIZE (24))
		ACCESS		read-write
		STATUS		mandatory
		DESCRIPTION	"TCN THRESHOLD 1DAY TOTAL	
					[Byte Description]
					  Byte 0 - Byte 3 = OFS TCN THRESHOLD TOTAL-15min (0 - 86400)
					  Byte 4 - Byte 7 = UAS TCN THRESHOLD TOTAL-15min (0 - 86400)
					  Byte 8 - Byte 11 = ES TCN THRESHOLD TOTAL-15min (0 - 86400)
					  Byte 12 - Byte 15 = SES TCN THRESHOLD TOTAL-15min (0 - 86400)
					  Byte 16 - Byte 19 = BBE TCN THRESHOLD TOTAL-15min 
					                       (PDH(Bit Rate = 5MB)   : 0 - 19267200
					                        PDH(Bit Rate = 10MB)  : 0 - 38620800
					                        PDH(Bit Rate = 20MB)  : 0 - 77241600
					                        PDH(Bit Rate = 40MB)  : 0 - 77241600
					                        PDH(Bit Rate = 80MB)  : 0 - 154656000
					                        PDH(Bit Rate = 100MB) : 0 - 154656000
					                        SDH(Bit Rate = 156MB) : 0 - 207273600)
					  Byte 20 - Byte 23 = SEP TCN THRESHOLD TOTAL-15min (0 - 86400)
					TRAP=eventTrapPnSTDTCNTreshold1dayTotal"
		::= { provTCNThreshold1dayTotalEntry 3 }

	provMDUCondSetGroup OBJECT IDENTIFIER
		::= { provisioningGroup 12 }

	xpicCondLOSignalFail OBJECT-TYPE
		SYNTAX		INTEGER (0..2)
		ACCESS		read-write
		STATUS		mandatory
		DESCRIPTION	"XPIC CONDITION-LOCAL FAIL 
					  0:Invalid,
					  1:From RF to Self LO Signal,
					  2:Mute
					TRAP=eventTrapPnSTDXpicCondLOSignalFail"
		::= { provMDUCondSetGroup 2 }

	eowIFType OBJECT-TYPE
		SYNTAX		INTEGER (0..2)
		ACCESS		read-write
		STATUS		mandatory
		DESCRIPTION	"EOW2 EXTERNAL SETTING
					Enables appropriate EOW2 calling system signal polarity to be set: 'normal' when the NEO IDU is connected to another NEO IDU or a PASOLINK IDU.
					'invert(ed)' when connected to PASOLINK+  IDU or Mx IDU
					  0:Invalid,
					  1:Normal,
					  2:Invert
					TRAP=eventTrapPnSTDEOWIntfcType"
		::= { provMDUCondSetGroup 3 }

	alarmCorrelationCapability OBJECT-TYPE
		SYNTAX		INTEGER (1..2)
		ACCESS		read-write
		STATUS		mandatory
		DESCRIPTION	"ALARM CORRELATION CAPABILITY
					Allows the suppression of secondary (downstream) alarms to be turned on/off.
					  1:Off,
					  2:On
					TRAP=eventTrapPnSTDAlarmCorrelation"
		::= { provMDUCondSetGroup 4 }

	provPMONSelectGroup OBJECT IDENTIFIER
	    ::= { provisioningGroup 13 }

	provPMONSelect OBJECT-TYPE
	    SYNTAX		OCTET STRING (SIZE (10))
	    ACCESS		read-write
	    STATUS		mandatory
	    DESCRIPTION	"PMON SELECT
					RX Level TCN Threshold:For setting the threshold at which the TCN is displayed.
		
		  			[Byte Description]
		    		Byte 0 = SES COUNT ACTIVATION(DIR-A) (1:30[%], 2:15[%])
	        		Byte 1 = SES COUNT ACTIVATION(DIR-B) (1:30[%], 2:15[%])
		    		Byte 2 = PMON E1-A SELECT (0:Not Select, x: CHx(x:1-48))
		    		 *) Set a value same as SMU.
					Byte 3 = PMON E1-B SELECT (0:Not Select, x: CHx(x:1-48))
		    		 *) Set a value same as SMU.
					Byte 4 = PMON E1-C SELECT (0:Not Select, x: CHx(x:1-48))
		    		 *) Set a value same as SMU.
					Byte 5 = PMON E1-D SELECT (0:Not Select, x: CHx(x:1-48))
		    		 *) Set a value same as SMU.
		    		Byte 6 = RX LEVEL TCN THRESHOLD(No.1/DIR-A) integral number
			     			(signed char: -128 - 127)
		    		Byte 7 = RX LEVEL TCN THRESHOLD(No.1/DIR-A)a place of decimal
			     			(0-9)
	            		Byte 8 = RX LEVEL TCN THRESHOLD(No.2/DIR-B) integral number
		             			(signed char: -128 - 127)
		    		Byte 9 = RX LEVEL TCN THRESHOLD(No.2/DIR-B)a place of decimal
		             		(0-9)
		    		 *) The values of No.2/DIR-B side are fixed to 0 when
		       	    	Redundancy is 1+0 TERM.
                   TRAP=eventTrapPnSTDPmonSelect"
  	     ::= { provPMONSelectGroup 1 }

	provVLANPortSetGroup OBJECT IDENTIFIER
		::= { provisioningGroup 14 }

	provVLANPortSet OBJECT-TYPE
		SYNTAX		OCTET STRING (SIZE (33))
		ACCESS		read-write
		STATUS		mandatory
		DESCRIPTION	"VLAN PORT SETTING
					  Byte 0 = SWITCHING FUNCTION
					       (0:INVALID, 1:DISABLED(No Report), 2:ENABLED(Report))
					  Byte 1 = MAC ADDRESS LEARNING
					       (0:INVALID, 1:OFF, 2:ON)
					  Byte 2 = 2M FRAMING
					  Byte 3 = 2M FRAMING --Not Used
					       (0:INVALID, 1:UNFRAMED, 2:PCM31C(FAS+CRC), 3:PCM31(FAS), 
					        4:PCM30C(MFAS+CRC), 5:PCM30(MFAS))
					  Byte 4 = MAIN LAN LINK DOWN CONTROL
					       (0:INVALID, 
					        1:DISABLED, 
					        2:RADIO ONLY, 
					        3:RADIO+LLF(ANY PORT), 
					        4:RADIO+LLF(ALL PORT), 
					        5-9:reserved, 
					        10:GbE RADIO ONLY, 
					        11:GbE RADIO+LLF(ANY PORT), 
					        12:GbE RADIO+LLF(ALL PORT), 
					        13-19:reserved, 
					        20:DIR-A RADIO ONLY, 
					        21:DIR-B RADIO ONLY, 
					        22:DIR-A/DIR-B RADIO ONLY, 
					        23:DIR-A RADIO+LLF(ANY PORT), 
					        24:DIR-B RADIO+LLF(ANY PORT), 
					        25:DIR-A RADIO+LLF(ALL PORT), 
					        26:DIR-B RADIO+LLF(ALL PORT), 
					        27:DIR-A/DIR-B RADIO+LLF(ALL PORT))
					  Byte 6 Not Used
					  Byte 7 Not Used
					
					  Byte 8 = LAN PORT1 USAGE
					        0:INVALID
					        1:NOT USED
					        2:USED
					  Byte 9 = SPEED & DUPLEX PORT1
					       (0:INVALID,2:AUTONEG(AUTO 1000M FULL DUPLEX),
					        3:AUTONEG(AUTO-MDI/MDIX),
					        6:100M-FULL(MDI),7:100M-FULL(MDIX), 
					        8:100M-HALF(MDI),9:100M-HALF(MDIX), 
					        10:10M-FULL(MDI),11:10M-FULL(MDIX), 
					        12:10M-HALF(MDI),13:10M-HALF(MDIX)) 
					  Byte 10 = LINK LOSS FORWARDING PORT1
					       (0:INVALID, 1:DISABLED, 2:ENABLED)
					  Byte 11 = COLLISION REPORT PORT1
					       (0:INVALID, 1:NOT REPORT, 2:REPORT)
					  Byte 12 = FLOW CONTROL PORT1
					       (0:INVALID, 1:OFF, 2:ON)
					
					  Byte 16 = LAN PORT2 USAGE
					        0:INVALID
					        1:NOT USED
					        2:USED
					  Byte 17 = SPEED & DUPLEX PORT2
					       (0:INVALID,3:AUTONEG(AUTO-MDI/MDIX),
					        6:100M-FULL(MDI),7:100M-FULL(MDIX), 
					        8:100M-HALF(MDI),9:100M-HALF(MDIX), 
					        10:10M-FULL(MDI),11:10M-FULL(MDIX), 
					        12:10M-HALF(MDI),13:10M-HALF(MDIX)) 
					  Byte 18 = LINK LOSS FORWARDING PORT2
					       (0:INVALID, 1:DISABLED, 2:ENABLED)
					  Byte 19 = COLLISION REPORT PORT2
					       (0:INVALID, 1:NOT REPORT, 2:REPORT)
					  Byte 20 = FLOW CONTROL PORT2
					       (0:INVALID, 1:OFF, 2:ON)
					
					  Byte 24 = LAN PORT3 USAGE
					        0:INVALID
					        1:NOT USED
					        2:USED
					  Byte 25 = SPEED & DUPLEX PORT3
					       (0:INVALID,3:AUTONEG(AUTO-MDI/MDIX),
					        6:100M-FULL(MDI),7:100M-FULL(MDIX), 
					        8:100M-HALF(MDI),9:100M-HALF(MDIX), 
					        10:10M-FULL(MDI),11:10M-FULL(MDIX), 
					        12:10M-HALF(MDI),13:10M-HALF(MDIX)) 
					  Byte 26 = LINK LOSS FORWARDING PORT3
					       (0:INVALID, 1:DISABLED, 2:ENABLED)
					  Byte 27 = COLLISION REPORT PORT3
					       (0:INVALID, 1:NOT REPORT, 2:REPORT)
					  Byte 28 = FLOW CONTROL PORT3
					       (0:INVALID, 1:OFF, 2:ON)
					
					  Byte 32 = GbE MEDIA TYPE
					       (0:INVALID, 1:SFP, 2:RJ-45)
					TRAP=eventTrapPnSTDVlanPortSetting"
		::= { provVLANPortSetGroup 1 }

	provVLANPort4Set OBJECT-TYPE
		SYNTAX		OCTET STRING (SIZE (8))
		ACCESS		read-write
		STATUS		mandatory
		DESCRIPTION	"VLAN PORT4 SETTING
					  Byte 0 = LAN PORT4 USAGE
					        0:INVALID
					        1:NOT USED
					        2:USED
					  Byte 1 = SPEED & DUPLEX PORT4
					       (0:INVALID,3:AUTONEG(AUTO-MDI/MDIX),
					        6:100M-FULL(MDI),7:100M-FULL(MDIX), 
					        8:100M-HALF(MDI),9:100M-HALF(MDIX), 
					        10:10M-FULL(MDI),11:10M-FULL(MDIX), 
					        12:10M-HALF(MDI),13:10M-HALF(MDIX)) 
					  Byte 2 = LINK LOSS FORWARDING PORT4
					       (0:INVALID, 1:DISABLED, 2:ENABLED)
					  Byte 3 = COLLISION REPORT PORT4
					       (0:INVALID, 1:NOT REPORT, 2:REPORT)
					  Byte 4 = FLOW CONTROL PORT4
						(0:INVALID, 1:OFF, 2:ON)
					TRAP=eventTrapPnSTDVlanPort4Setting"
		::= { provVLANPortSetGroup 2 }

	provVLANSettingGroup OBJECT IDENTIFIER
		::= { provisioningGroup 15 }

	provVLANSet OBJECT-TYPE
		SYNTAX		OCTET STRING (SIZE (352))
		ACCESS		read-write
		STATUS		mandatory
		DESCRIPTION	"VLAN SETTING
					  Byte 0 = VLAN MODE
					       (0:INVALID,1:DISABLE,2:PORT VLAN,
					        3:TAG VLAN,4:PORT VLAN + TAG VLAN,
					        5:DOUBLE TAG VLAN)
					  Byte 8 = PORT VLAN GROUP1
					  Byte 9 = PORT VLAN GROUP2
					    ...
					  Byte 14 = PORT VLAN GROUP7
					  Byte 15 = PORT VLAN GROUP8
					
					  Byte 24-27 = TAG VLAN GROUP1
					  Byte 28-31 = TAG VLAN GROUP2
					    ...
					  Byte 272-275 = TAG VLAN GROUP63
					  Byte 276-279 = TAG VLAN GROUP64
					
					  Byte 284-287 = DEFAULT TAG PORT1
					  Byte 288-291 = DEFAULT TAG PORT2
					  Byte 292-295 = DEFAULT TAG PORT3
					  Byte 296-299 = DEFAULT TAG PORT4
					
					  Byte 300 = INVALID VID FRAME HANDLING
					       (0:INVALID,1:DROP,2:FORWARD)
					  Byte 301 = NON TAG FRAME HANDLING
					       (0:INVALID,1:DROP,2:FORWARD)
					TRAP=eventTrapPnSTDVlanSetting"
		::= { provVLANSettingGroup 1 }

	provQoSSet OBJECT-TYPE
		SYNTAX		OCTET STRING (SIZE (128))
		ACCESS		read-write
		STATUS		mandatory
		DESCRIPTION	"QoS SETTING
					  Byte 0 = QoS MODE
					       (0:INVALID,1:DISABLE,2:802.1p CoS,3:DSCP,4:ToS)
					  Byte 1 = QUEUE CONTROL MODE
					       (0:INVALID,1:WRR,2:SP(PQ3)+WRR(PQ2-0))
					  Byte 2 = WRR WEIGHT
					       (0: INVALID,1: 6:3:2:1,2: 12:6:3:1,3: 24:12:6:1,4: 48:24:12:1)
					
					  Byte 3 = 802.1Q USER PRIORITY 000
					  :
					  Byte 10 = 802.1Q USER PRIORITY 111
					       (0:INVALID,1:PQ0,2:PQ1,3:PQ2,4:PQ3)
					
					  Byte 11 = DSCP PRIORITY 000000
					  :
					  Byte 74 = DSCP PRIORITY 111111
					       (0:INVALID,1:PQ0,2:PQ1,3:PQ2,4:PQ3)
					
					  Byte 75 = ToS PRIORITY 000
					  :
					  Byte 82 = ToS PRIORITY 111
					       (0:INVALID,1:PQ0,2:PQ1,3:PQ2,4:PQ3)
					TRAP=eventTrapPnSTDQosSetting"
		::= { provVLANSettingGroup 2 }

	provMainLANModeSettingGroup OBJECT IDENTIFIER
		::= { provisioningGroup 16 }

	provMainLANModeSetting OBJECT-TYPE
		SYNTAX		INTEGER (0..2)
		ACCESS		read-write
		STATUS		mandatory
		DESCRIPTION	"MAIN LAN MODE SETTING
					  0:Invalid,
					  1:ENH NODAL Mode,
					  2:STD Mode
					TRAP=eventTrapPnSTDMainLanModeSetting"
		::= { provMainLANModeSettingGroup 1 }

-----------------------------------------------
-- maintenanceGroup Group Definitions
-----------------------------------------------

	maintCommonGroup OBJECT IDENTIFIER
		::= { maintenanceGroup 1 }

	maintMode OBJECT-TYPE
		SYNTAX		INTEGER (0..1)
		ACCESS		read-write
		STATUS		mandatory
		DESCRIPTION	"MAINTENANCE
					Maintenance:To switch Maintenance mode to ON.
					  0:Off,
					  1:On
					TRAP=eventTrapPnSTDMaintMode"
		::= { maintCommonGroup 1 }

	maintTxSWControl OBJECT-TYPE
		SYNTAX		INTEGER (0..2)
		ACCESS		read-write
		STATUS		mandatory
		DESCRIPTION	"TX SW MANUAL CONTROL
					To control the TX switch manually (Only during hot-standby).
					  0:AUTO,
					  1:No.1,
					  2:No.2"
		::= { maintCommonGroup 2 }

	maintRxSWControl OBJECT-TYPE
		SYNTAX		INTEGER (0..2)
		ACCESS		read-write
		STATUS		mandatory
		DESCRIPTION	"RX SW MANUAL CONTROL
					To control the RX switch manually (Only for 1 + 1 systems).
					  0:AUTO,
					  1:No.1,
					  2:No.2"
		::= { maintCommonGroup 3 }

	maintAPSSWControl OBJECT-TYPE
		SYNTAX		INTEGER (0..2)
		ACCESS		read-write
		STATUS		mandatory
		DESCRIPTION	"APS MANUAL CONTROL
					Allows APS to be manually controlled (when APS is available).
					0:AUTO,
					1:WORKING,
					2:PROTECTION"
		::= { maintCommonGroup 4 }

	maintLoopback1CH OBJECT-TYPE
		SYNTAX		OCTET STRING (SIZE (6))
		ACCESS		read-only
		STATUS		mandatory
		DESCRIPTION	"MAIN CH LOOPBACK-1(CHxx)
					(xx:01-48)
					Allows the pinpointing of faulty sections causing signal interruption.
					  0:Off,
					  1:On
						
					[Bit Description]
						  Bit 0 = MAIN CH LOOPBACK-1(CH01) (0:Off, 1:On)
						  Bit 1 = MAIN CH LOOPBACK-1(CH02)
						  ...
						  Bit 46 = MAIN CH LOOPBACK-1(CH47)
						  Bit 47 = MAIN CH LOOPBACK-1(CH48)
						
						*) The value of CHxx is fixed to 0, when CHxx Usage is not used. (xx: 01 - 48)
				TRAP=eventTrapPnSTDMaintLoopback1CH"
		::= { maintCommonGroup 5 }

	maintLoopback2CH OBJECT-TYPE
		SYNTAX		OCTET STRING (SIZE (6))
		ACCESS		read-only
		STATUS		mandatory
		DESCRIPTION	"MAIN CH LOOPBACK-2(DIR-A)(CHxx)
				(xx:01-48)
				Allows the pinpointing of faulty sections causing signal interruption.
				  0:Off,
				  1:On
					
				[Bit Description]
				  Bit 0 = MAIN CH LOOPBACK-2(DIR-A)(CH01) (0:Off, 1:On)
				  Bit 1 = MAIN CH LOOPBACK-2(DIR-A)(CH02)
				  ...
				  Bit 46 = MAIN CH LOOPBACK-2(DIR-A)(CH47)
				  Bit 47 = MAIN CH LOOPBACK-2(DIR-A)(CH48)
				
				*) The value of CHxx is fixed to 0, when CHxx Usage is not used. (xx: 01 - 48)
				*) (DIR-A) is available when Redundancy is 2-WAY.
				TRAP=eventTrapPnSTDMaintLoopback2CH"
		::= { maintCommonGroup 6 }

	maintLoopback1Work OBJECT-TYPE
		SYNTAX		INTEGER (0..1)
		ACCESS		read-only
		STATUS		mandatory
		DESCRIPTION	"MAIN LOOPBACK-1
					Allows the pinpointing of signal interruption faults.
					  0:Off,
					  1:On
					TRAP=eventTrapPnSTDMaintLoopback1Work"
		::= { maintCommonGroup 7 }

	maintLoopback2 OBJECT-TYPE
		SYNTAX		INTEGER (0..1)
		ACCESS		read-write
		STATUS		mandatory
		DESCRIPTION	"MAIN LOOPBACK-2
					Allows the pinpointing of signal interruption faults.
					  0:Off,
					  1:On
					TRAP=eventTrapPnSTDMaintLoopback2"
		::= { maintCommonGroup 8 }

	maintDADEAdjust OBJECT-TYPE
		SYNTAX		INTEGER (1..3)
		ACCESS		read-write
		STATUS		mandatory
		DESCRIPTION	"DADE ADJUST
					Select the DADE for Hot-Standby / Twinpath configuration to	bring INTFC status back in phase.
					  1:DADE,
					  2:Off Set DADE,
					  3:DADE OFF
					TRAP=eventTrapPnSTDMaintDADEAdjust"
		::= { maintCommonGroup 9 }

	maintDADEAdjustEnable OBJECT-TYPE
		SYNTAX		INTEGER (0..1)
		ACCESS		read-only
		STATUS		mandatory
		DESCRIPTION	"DADE ADJUST ENABLE
					  0:Off,
					  1:ON Executing
					TRAP=eventTrapPnSTDMaintDADEAdjustEn"
		::= { maintCommonGroup 10 }

	maintLANDeviceReset OBJECT-TYPE
		SYNTAX		INTEGER (0..7)
		ACCESS		read-write
		STATUS		mandatory
		DESCRIPTION	"LAN DEVICE RESET
					Resets LAN INTFC ports (when LAN Port setting is 'used').
					  0:Not Selected,
					  1:INTFC(1)-PORT1,
					  2:INTFC(1)-PORT2,
					  3:INTFC(1)-PORT3,
					  4:INTFC(1)-PORT4,
					  5:INTFC(2)-PORT1,
					  6:INTFC(2)-PORT2,
					  7:INTFC(1)-ALL PORT
					TRAP=eventTrapPnSTDMaintLanDeviceReset"
		::= { maintCommonGroup 11 }

	maintAlsRestart OBJECT-TYPE
		SYNTAX		INTEGER (0..4)
		ACCESS		read-write
		STATUS		mandatory
		DESCRIPTION	"ALS RESTART
				 	For optical interfaces, the duration of laser emittance during ALS manual restart (for testing).
					  0:Not Selected,
					  1:2sec(INTFC1),
					  2:90sec(INTFC1)
					  3:2sec(INTFC2),
					  4:90sec(INTFC2)
					TRAP=eventTrapPnSTDMaintAlsRestart"
		::= { maintCommonGroup 12 }

	maintAlsManualRestart OBJECT-TYPE
		SYNTAX		INTEGER(0..2)
		ACCESS		read-only
		STATUS		mandatory
		DESCRIPTION	"MANUAL RESTART
					  0:OFF,
					  1:ON(EXECUTING)-INTFC(1),
					  2:ON(EXECUTING)-INTFC(2)
					TRAP=eventTrapPnSTDMaintAlsManualRestart"
		::= { maintCommonGroup 13 }

	maintLoopback1Prot OBJECT-TYPE
		SYNTAX		INTEGER(0..1)
		ACCESS		read-write
		STATUS		mandatory
		DESCRIPTION	"MAIN LOOPBACK-1 INTFC(2)
					Allows the pinpointing of signal interruption faults(when APS is available).
					  0:Off,
					  1:On
					TRAP=eventTrapPnSTDMaintLoopback1Prot"
		::= { maintCommonGroup 14 }

	maintTxSWMode OBJECT-TYPE
		SYNTAX		INTEGER(0..3)
		ACCESS		read-only
		STATUS		mandatory
		DESCRIPTION	"TX SW MODE
					  0:AUTO-No.1,
					  1:AUTO-No.2,
					  2:MANUAL-No.1,
					  3:MANUAL-No.2
					TRAP=eventTrapPnSTDMaintTxSWMode"
		::= { maintCommonGroup 15 }

	maintRxSWMode OBJECT-TYPE
		SYNTAX		INTEGER(0..3)
		ACCESS		read-only
		STATUS		mandatory
		DESCRIPTION	"RX SW MODE
					  0:AUTO-No.1,
					  1:AUTO-No.2,
					  2:MANUAL-No.1,
					  3:MANUAL-No.2
					TRAP=eventTrapPnSTDMaintRxSWMode"
		::= { maintCommonGroup 16 }

	maintAPSSWMode OBJECT-TYPE
		SYNTAX		INTEGER(0..3)
		ACCESS		read-only
		STATUS		mandatory
		DESCRIPTION	"APS SW MODE
					  0:AUTO-WORKING,
					  1:AUTO-PROTECTION,
					  2:MANUAL-WORKING,
					  3:MANUAL-PROTECTION
					TRAP=eventTrapPnSTDMaintAPSSWMode"
		::= { maintCommonGroup 17 }

	maintLoopback3CH OBJECT-TYPE
		SYNTAX		OCTET STRING (SIZE (6))
		ACCESS		read-write
		STATUS		mandatory
		DESCRIPTION	"MAIN LOOPBACK-2 (DIR-B) (CHxx) 
					(xx:01-48)
					Allows the pinpointing of signal interruption faults(when APS is available).
					  0:Off,
					  1:On
					[Bit Description]
					  Bit 0 = MAIN CH LOOPBACK-2(DIR-B)(CH01) (0:Off, 1:On)
					  Bit 1 = MAIN CH LOOPBACK-2(DIR-B)(CH02)
					  ...
					  Bit 46 = MAIN CH LOOPBACK-2(DIR-B)(CH47)
					  Bit 47 = MAIN CH LOOPBACK-2(DIR-B)(CH48)
					
					*) The value of CHxx is fixed to 0, when CHxx Usage is not used. (xx: 01 - 48)
					*) This item is available when Redundancy is 2-WAY.
					TRAP=eventTrapPnSTDMaintLoopback3CH"
		::= { maintCommonGroup 18 }

	maintSysTable OBJECT-TYPE
		SYNTAX		SEQUENCE OF MaintSysEntry
		ACCESS		not-accessible
		STATUS		mandatory
		DESCRIPTION	"MAINT SYS Table"
		::= { maintenanceGroup 2 }

	maintSysEntry OBJECT-TYPE
		SYNTAX		MaintSysEntry
		ACCESS		not-accessible
		STATUS		mandatory
		INDEX		{
						maintSysIndex
					}
		::= { maintSysTable 1 }

	MaintSysEntry ::= SEQUENCE {
					  maintSysIndex                  INTEGER,
					  maintSysATPCManualControl      INTEGER,
					  maintSysATPCManualContPower    INTEGER,
					  maintSysTxMuteControl          INTEGER,
					  maintSysTxMuteContReleaseTime  INTEGER,
					  maintSysCW                     INTEGER,
					  maintSysIFLoopback             INTEGER,
					  maintSysForcedXPICCont         INTEGER,
					  maintSysForcedLinearizerCont   INTEGER,
					  maintSysRFSubBandSelect        INTEGER,
					  maintSysRFShiftFreqSet         OCTET STRING,
					  maintSysAntennaAlignMode       INTEGER
					}

	maintSysIndex OBJECT-TYPE
		SYNTAX		INTEGER (1..2)
		ACCESS		read-only
		STATUS		mandatory
		DESCRIPTION	"Maint Sys Index
					 1:No. 1/DIR-A
					 2:No. 2/DIR-B
					
					 *)No.2 is available for 1+1 system.
					 *)DIR-A/DIR-B is available for 2-WAY system."
		::= { maintSysEntry 1 }

	maintSysATPCManualControl OBJECT-TYPE
		SYNTAX		INTEGER (0..1)
		ACCESS		read-write
		STATUS		mandatory
		DESCRIPTION	"ATPC MANUAL CONTROL
					Allows optional transmitting power when ATPC is in operation.
					  0:Off,
					  1:On
					TRAP=eventTrapPnSTDMaintATPCManualControl"
		::= { maintSysEntry 2 }

	maintSysATPCManualContPower OBJECT-TYPE
		SYNTAX		INTEGER
		ACCESS		read-write
		STATUS		mandatory
		DESCRIPTION	"ATPC MANUAL POWER[dB]
					TRAP=eventTrapPnSTDMaintATPCManualContPower"
		::= { maintSysEntry 3 }

	maintSysTxMuteControl OBJECT-TYPE
		SYNTAX		INTEGER (0..1)
		ACCESS		read-write
		STATUS		mandatory
		DESCRIPTION	"TX MUTE CONTROL
					To set TX Mute Control.
					*) Only possible for NE directly connected to PNMT.
					  0:Off,
					  1:On
					TRAP=eventTrapPnSTDMaintTxMuteControl"
		::= { maintSysEntry 4 }

	maintSysTxMuteContReleaseTime OBJECT-TYPE
		SYNTAX		INTEGER
		ACCESS		read-write
		STATUS		mandatory
		DESCRIPTION	"TX MUTE OFF TIMER[sec]
					TRAP=eventTrapPnSTDMaintTxMuteContReleaseTime"
		::= { maintSysEntry 5 }

	maintSysCW OBJECT-TYPE
		SYNTAX		INTEGER (0..1)
		ACCESS		read-write
		STATUS		mandatory
		DESCRIPTION	"CW CONTROL
					To turn on the Carrier Wave for measurements.
					*) Only possible for NE directly connected to PNMT.
					  0:Off,
					  1:On
					TRAP=eventTrapPnSTDMaintCW"
			::= { maintSysEntry 6 }

	maintSysIFLoopback OBJECT-TYPE
		SYNTAX		INTEGER (0..1)
		ACCESS		read-write
		STATUS		mandatory
		DESCRIPTION	"IF LOOPBACK
					To pinpoint faulty sections causing signal interruption.
					*) Only possible for NE directly connected to PNMT.
					  0:Off,
					  1:On
					TRAP=eventTrapPnSTDMaintIfLoopback"
		::= { maintSysEntry 7 }

	maintSysForcedXPICCont OBJECT-TYPE
		SYNTAX		INTEGER (0..1)
		ACCESS		read-write
		STATUS		mandatory
		DESCRIPTION	"XPIC CONTROL
					  0:Auto,
					  1:Force Reset
					TRAP=eventTrapPnSTDMaintForcedXPICCont"
		::= { maintSysEntry 8 }

	maintSysForcedLinearizerCont OBJECT-TYPE
		SYNTAX		INTEGER (0..1)
		ACCESS		read-write
		STATUS		mandatory
		DESCRIPTION	"LINEARIZER CONTROL
					  0:Auto,
					  1:Force Reset
					TRAP=eventTrapPnSTDMaintForcedLinearizerCont"
		::= { maintSysEntry 9 }

	maintSysRFSubBandSelect OBJECT-TYPE
		SYNTAX		INTEGER
		ACCESS		read-write
		STATUS		mandatory
		DESCRIPTION	"RF SUB BAND SELECT
					 Using only following Chars.
					  65:A,
					  66:B,
					  67:C,
					  68:D,
					  69:E,
					  70:F,
					  71:G,
					  72:H,
					  74:J,
					  75:K,
					  76:L,
					  77:M,
					  78:N,
					  80:P,
					  82:R,
					  88:X
					TRAP=eventTrapPnSTDMaintRFSubBandSelect"
		::= { maintSysEntry 10 }

	maintSysAntennaAlignMode OBJECT-TYPE
		SYNTAX		INTEGER (0..1)
		ACCESS		read-write
		STATUS		mandatory
		DESCRIPTION	"ANTENNA ALIGNMENT MODE
					To turn on Antenna Alignment Mode.
					(only available for specific ODU type)
					*) Only possible for NE directly connected to PNMT.
					  0:Off,
					  1:On
					TRAP=eventTrapPnSTDMaintAntennaAlignMode"
		::= { maintSysEntry 12 }


-----------------------------------------------
-- inventoryGroup Group Definitions
-----------------------------------------------

	invModuleInfoMDUTable OBJECT-TYPE
		SYNTAX		SEQUENCE OF InvModuleInfoMDUEntry
		ACCESS		not-accessible
		STATUS		mandatory
		DESCRIPTION	"Module Info MDU Table"
		::= { inventoryGroup 1 }

	invModuleInfoMDUEntry OBJECT-TYPE
		SYNTAX		InvModuleInfoMDUEntry
		ACCESS		not-accessible
		STATUS		mandatory
		INDEX		{
						invModuleInfoMDUIndex
					}
		::= { invModuleInfoMDUTable 1 }

	InvModuleInfoMDUEntry ::= SEQUENCE {
					  invModuleInfoMDUIndex  INTEGER,
					  invModuleInfoMDUData   OCTET STRING
					}

	invModuleInfoMDUIndex OBJECT-TYPE
		SYNTAX		INTEGER (1..5)
		ACCESS		read-only
		STATUS		mandatory
		DESCRIPTION	"Module Info MDU Index
					  1:MODEM(No.1)/(DIR-A),
					  2:MODEM(No.2)/(DIR-B),
					  3:CTRL,
					  4:MAIN(WORK),
					  5:SUB(PROT)
					
					  *) MODEM(No.2) is available for 1+1 system.
					  *) DIR-A/B is available for 2-WAY system.
					  *) SUB(PROT) is available only when System Architecture is SDH."
		::= { invModuleInfoMDUEntry 1 }

	invModuleInfoMDUData OBJECT-TYPE
		SYNTAX		OCTET STRING (SIZE (56))
		ACCESS		read-only
		STATUS		mandatory
		DESCRIPTION	"Module Info MDU Data
					[Byte Description]
					  Byte 0 - Byte 15  = CODE No. (VALUE(ASC(16))
					  Byte 16 - Byte 31 = PACKAGE NAME (VALUE(ASC(16))
					  Byte 32 - Byte 39 = SERIAL No. (VALUE(ASC(8))
					  Byte 40 - Byte 47 = DATE OF MANUFACTURE (VALUE(ASC(8))
					  Byte 48 - Byte 55 = H/W VERSION (VALUE(ASC(8))"
		::= { invModuleInfoMDUEntry 2 }

	invModuleInfoTRUTable OBJECT-TYPE
		SYNTAX		SEQUENCE OF InvModuleInfoTRUEntry
		ACCESS		not-accessible
		STATUS		mandatory
		DESCRIPTION	"Module Info ODU Table"
		::= { inventoryGroup 2 }

	invModuleInfoTRUEntry OBJECT-TYPE
		SYNTAX		InvModuleInfoTRUEntry
		ACCESS		not-accessible
		STATUS		mandatory
		INDEX		{
						invModuleInfoTRUSysIndex
					}
		::= { invModuleInfoTRUTable 1 }

	InvModuleInfoTRUEntry ::= SEQUENCE {
					  invModuleInfoTRUSysIndex  INTEGER,
					  invModuleInfoTRUData      OCTET STRING
					}

	invModuleInfoTRUSysIndex OBJECT-TYPE
		SYNTAX		INTEGER (1..2)
		ACCESS		read-only
		STATUS		mandatory
		DESCRIPTION	"Module Info ODU Sys Index
					 1:No. 1/DIR-A
					 2:No. 2/DIR-B
					
					 *)No.2 is available for 1+1 system.
					 *)DIR-A/B is available for 2-WAY system."
		::= { invModuleInfoTRUEntry 1 }

	invModuleInfoTRUData OBJECT-TYPE
		SYNTAX		OCTET STRING (SIZE (60))
		ACCESS		read-only
		STATUS		mandatory
		DESCRIPTION	"Module Info ODU Data
					[Byte Description]
					    Byte 0 - Byte 15  = CODE No. (VALUE(ASC(16))
					    Byte 16 - Byte 31 = PACKAGE NAME (VALUE(ASC(16))
					    Byte 32 - Byte 39 = SERIAL No. (VALUE(ASC(8))
					    Byte 40 - Byte 47 = DATE OF MANUFACTURE (VALUE(ASC(8))
					    Byte 48 - Byte 55 = H/W VERSION (VALUE(ASC(8))
					    Byte 56 - Byte 59 = F/W VERSION (VALUE(ASC(4))"
		::= { invModuleInfoTRUEntry 2 }

	invFPGAInfoTable OBJECT-TYPE
		SYNTAX		SEQUENCE OF InvFPGAInfoEntry
		ACCESS		not-accessible
		STATUS		mandatory
		DESCRIPTION	"FPGA Info Table"
		::= { inventoryGroup 3 }

	invFPGAInfoEntry OBJECT-TYPE
		SYNTAX		InvFPGAInfoEntry
		ACCESS		not-accessible
		STATUS		mandatory
		INDEX		{
						invFPGAInfoIndex
					}
		::= { invFPGAInfoTable 1 }

	InvFPGAInfoEntry ::= SEQUENCE {
					  invFPGAInfoIndex  INTEGER,
					  invFPGAInfoData   OCTET STRING
					}

	invFPGAInfoIndex OBJECT-TYPE
		SYNTAX		INTEGER (1..8)
		ACCESS		read-only
		STATUS		mandatory
		DESCRIPTION	"FPGA Info Index
					  1:MODEM No.1/DIR-A,
					  2:MODEM No.2/DIR-B,
					  3:CTRL,
					  4:Main(Work),
					  5:SUB(PROT),
					  6:SFP Module(Main - Work), -- Not used
					  7:SFP Module(Sub - PROT), -- Not used
					  8:CTRL PROGRAM VER
					
					  *) MODEM(No.2) is available for 1+1 system.
					  *) DIR-A/B is available for 2-WAY system.
					  *) SUB(PROT) is available only when System Architecture is SDH."
		::= { invFPGAInfoEntry 1 }

	invFPGAInfoData OBJECT-TYPE
		SYNTAX		OCTET STRING (SIZE (128))
		ACCESS		read-only
		STATUS		mandatory
		DESCRIPTION	"FPGA Info Data
					[Byte Description]
					    Byte 0 - Byte 15   = FPGA1 CODE No. (VALUE(ASC(16)))
					    Byte 16 - Byte 31  = FPGA1 NAME     (VALUE(ASC(16)))
					    Byte 32 - Byte 37  = FPGA1 VERSION  (VALUE(ASC(6)))
					    Byte 38 - Byte 53  = FPGA2 CODE No. (VALUE(ASC(16)))
					    Byte 54 - Byte 69  = FPGA2 NAME     (VALUE(ASC(16)))
					    Byte 70 - Byte 75  = FPGA2 VERSION  (VALUE(ASC(6)))
					    Byte 76 - Byte 128 = (Fixed to 0)"
		::= { invFPGAInfoEntry 2 }

	invTRUProvRangeInfo OBJECT IDENTIFIER
		::= { inventoryGroup 4 }

	invTRUProvRangeInfoValue OBJECT-TYPE
		SYNTAX		OCTET STRING (SIZE (32))
		ACCESS		read-only
		STATUS		mandatory
		DESCRIPTION	"ODU Prov Range Info Value
					[Byte Description]
					  Byte 0  = ATPC(MAX) (No.1/DIR-A) (VAL(INT))
					  Byte 1  = ATPC(MIN) (No.1/DIR-A) (VAL(INT))
					  Byte 2  = MTPC(MAX) (No.1/DIR-A) (VAL(INT))
					  Byte 3  = MTPC(MIN) (No.1/DIR-A) (VAL(INT))
					  Byte 4  = RX THRESHOLD LEVEL(MAX) (No.1/DIR-A) integral number(signed char) (VAL(INT))
					  Byte 5  = RX THRESHOLD LEVEL(MAX) (No.1/DIR-A) a place of decimal(0-9) (VAL(INT))
					  Byte 6  = RX THRESHOLD LEVEL(MIN) (No.1/DIR-A) integral number(signed char) (VAL(INT))
					  Byte 7  = RX THRESHOLD LEVEL(MIN) (No.1/DIR-A) a place of decimal(0-9) (VAL(INT))
					  Byte 8  = ADDITIONAL ATT(MAX) (No.1/DIR-A) (VAL(INT))
					  Byte 9  = ADDITIONAL ATT(MIN) (No.1/DIR-A) (VAL(INT))
					  Byte 10 = (Don't care)
					  Byte 11 = (Don't care)
					  Byte 12 = (Don't care)
					  Byte 13 = (Don't care)
					  Byte 14 = (Don't care)
					  Byte 15 = (Don't care)
					  Byte 16 = ATPC(MAX) (No.2/DIR-B) (VAL(INT))
					  Byte 17 = ATPC(MIN) (No.2/DIR-B) (VAL(INT))
					  Byte 18 = MTPC(MAX) (No.2/DIR-B) (VAL(INT))
					  Byte 19 = MTPC(MIN) (No.2/DIR-B) (VAL(INT))
					  Byte 20 = RX THRESHOLD LEVEL(MAX) (No.2/DIR-B) integral number(signed char) (VAL(INT))
					  Byte 21 = RX THRESHOLD LEVEL(MAX) (No.2/DIR-B) a place of decimal(0-9) (VAL(INT))
					  Byte 22 = RX THRESHOLD LEVEL(MIN) (No.2/DIR-B) integral number(signed char) (VAL(INT))
					  Byte 23 = RX THRESHOLD LEVEL(MIN) (No.2/DIR-B) a place of decimal(0-9) (VAL(INT))
					  Byte 24 = ADDITIONAL ATT(MAX) (No.2/DIR-B) (VAL(INT))
					  Byte 25 = ADDITIONAL ATT(MIN) (No.2/DIR-B) (VAL(INT))
					  Byte 26 = (Don't care)
					  Byte 27 = (Don't care)
					  Byte 28 = (Don't care)
					  Byte 29 = (Don't care)
					  Byte 30 = (Don't care)
					  Byte 31 = (Don't care)"
		::= { invTRUProvRangeInfo 1 }

	invTRUFreqInfoTable OBJECT-TYPE
		SYNTAX		SEQUENCE OF InvTRUFreqInfoEntry
		ACCESS		not-accessible
		STATUS		mandatory
		DESCRIPTION	"TRU(ODU) Freq Info Table"
		::= { inventoryGroup 5 }

	invTRUFreqInfoEntry OBJECT-TYPE
		SYNTAX		InvTRUFreqInfoEntry
		ACCESS		not-accessible
		STATUS		mandatory
		INDEX		{
						invTRUFreqInfoSysIndex
					}
		::= { invTRUFreqInfoTable 1 }

	InvTRUFreqInfoEntry ::= SEQUENCE {
					  invTRUFreqInfoSysIndex  INTEGER,
					  invTRUFreqInfoValue     OCTET STRING
					}

	invTRUFreqInfoSysIndex OBJECT-TYPE
		SYNTAX		INTEGER (1..2)
		ACCESS		read-only
		STATUS		mandatory
		DESCRIPTION	"TRU Freq Info Sys Index
					 1:No. 1/DIR-A
					 2:No. 2/DIR-B
					
					 *)No.2 is available for 1+1 system.
					 *)DIR-A/B is available for 2-WAY system."
		::= { invTRUFreqInfoEntry 1 }

	invTRUFreqInfoValue OBJECT-TYPE
		SYNTAX		OCTET STRING (SIZE (58))
		ACCESS		read-only
		STATUS		mandatory
		DESCRIPTION	"TRU Freq Info Value
					[Byte Description]
					    Byte 0 - Byte 8   = TX START FREQUNENCY[MHz] (VALUE(ASC 9))
					    Byte 9 - Byte 17  = TX STOP FREQUNENCY[MHz]  (VALUE(ASC 9))
					    Byte 18 - Byte 26 = RX START FREQUNENCY[MHz] (VALUE(ASC 9))
					    Byte 27 - Byte 35 = RX STOP FREQUNENCY[MHz]  (VALUE(ASC 9))
					    Byte 36 - Byte 42 = FREQUENCY STEP[MHz]      (VALUE(ASC 7))
					    Byte 43 - Byte 50 = SHIFT FREQUENCY[MHz]     (VALUE(ASC 8))
					    Byte 51           = UPPER/LOWER              (0:LOWER, 1:UPPER)
					    Byte 52 -Byte 54  = (Don't care)
					    Byte 55           = SUB BAND                 (VALUE(ASC 1))
					    Byte 56           = TX/RX INDEPENDENT INFO   (0: TX&RX, 1:TX/RX)
					    Byte 57           = (Don't care)"
		::= { invTRUFreqInfoEntry 2 }

	invEquipmentSupportabilityGroup OBJECT IDENTIFIER
		::= { inventoryGroup 6 }

	invEquipmentSupportabilityInfo OBJECT-TYPE
		SYNTAX		OCTET STRING (SIZE (7))
		ACCESS		read-only
		STATUS		mandatory
		DESCRIPTION	"Equipment Supportability Info"
		::= { invEquipmentSupportabilityGroup 1 }

	invEquipmentSupportabilityInfo2 OBJECT-TYPE
		SYNTAX		OCTET STRING (SIZE (16))
		ACCESS		read-only
		STATUS		mandatory
		DESCRIPTION	"Equipment Supportability Info2"
		::= { invEquipmentSupportabilityGroup 2 }

	invUpdateInfo OBJECT IDENTIFIER
		::= { inventoryGroup 7 }

	invUpdateInfoMainWorkModule OBJECT-TYPE
		SYNTAX		INTEGER (0..16)
		ACCESS		read-only
		STATUS		mandatory
		DESCRIPTION	"INTFC(1) PKG CHANGED
					  0:BLANK,
					  1:16xE1 BASIC PKG,
					  2:16xE1 STANDARD PKG(E/W LAN),
					  3:32xE1 PKG(E/W LAN),
					  4:48xE1 PKG,
					  5:4PORT LAN WITH E1,
					  6:STM-1(OPTICAL),
					  7:STM-1(ELECTRICAL),
					  8:2PORT LAN OVER STM-1,
					  9:GbE OVER STM-1,
					  10:E3 PKG(E/W LAN),
					  11:16E1 2-WAY/XC PKG(E/W LAN),
					  12:-,
					  13:GbE(10/100/1000B) OVER STM-1,
					  14:32E1 XC PKG,
					  15:4PORT LAN WITH E1(VLAN),
					  16:GbE OVER STM-1(VLAN)
					TRAP=eventTrapPnSTDinvUpdateMainWorkModule"
		::= { invUpdateInfo 1 }

	invUpdateInfoSubProtModule OBJECT-TYPE
		SYNTAX		INTEGER (0..3)
		ACCESS		read-only
		STATUS		mandatory
		DESCRIPTION	"INTFC(2) PKG CHANGED
					  0:BLANK,
					  1:STM-1(OPTICAL),
					  2:WS/LAN,
					  3:WS
					TRAP=eventTrapPnSTDinvUpdateSubProtModule"
		::= { invUpdateInfo 2 }

	invUpdateInfoSummary OBJECT-TYPE
		SYNTAX		OCTET STRING (SIZE (2))
		ACCESS		read-only
		STATUS		mandatory
		DESCRIPTION	"INVENTORY UPDATE INFO SUMMARY
					[Bit Description]
					  Bit 0 = CTRL (0:Not Changed, 1:Updated)
					  Bit 1 = MODEM1
					  Bit 2 = MODEM2
					  Bit 3 = MAIN(WORK)
					  Bit 4 = SUB(PROT)
					  Bit 5 = TRU1
					  Bit 6 = TRU2
					  Bit 7 = CTRL PROGRAM VERSION
					  Bit 8 = TRU PROVISIONING INFO
					  Bit 9 = TRU FREQ INFO
					  Bit 10 = SUPPORTABILITY
					  Bit 11 = (Fixed to 0)
					  Bit 12 = (Fixed to 0)
					  Bit 13 = (Fixed to 0)
					  Bit 14 = (Fixed to 0)
					  Bit 15 = (Fixed to 0)
					
					TRAP=eventTrapPnSTDinvUpdateSummary"
		::= { invUpdateInfo 3 }


-----------------------------------------------
-- meteringGroup Group Definitions
-----------------------------------------------

	meteringSysTable OBJECT-TYPE
		SYNTAX		SEQUENCE OF MeteringSysEntry
		ACCESS		not-accessible
		STATUS		mandatory
		DESCRIPTION	"Metering Sys Table"
		::= { meteringGroup 1 }

	meteringSysEntry OBJECT-TYPE
		SYNTAX		MeteringSysEntry
		ACCESS		not-accessible
		STATUS		mandatory
		INDEX		{
						metSysIndex
					}
		::= { meteringSysTable 1 }

	MeteringSysEntry ::= SEQUENCE {
					  metSysIndex               INTEGER,
					  metSysTxPowerStatus       INTEGER,
					  metSysTxPowerValue        DisplayString,
					  metSysRxLevelStatus       INTEGER,
					  metSysRxLevelValue        DisplayString,
					  metSysPSVoltageStasus     INTEGER,
					  metSysPSVoltageValue      DisplayString,
					  metSysBitErrorRateStatus  INTEGER,
					  metSysBitErrorRateXValue  INTEGER,
					  metSysBitErrorRateYValue  INTEGER
					}

	metSysIndex OBJECT-TYPE
		SYNTAX		INTEGER (1..2)
		ACCESS		read-only
		STATUS		mandatory
		DESCRIPTION	"Metering Sys Index
					 1:No. 1/DIR-A
					 2:No. 2/DIR-B
					
					 *)No.2 is available for 1+1 system.
					 *)DIR-A/B is available for 2-WAY system."
		::= { meteringSysEntry 1 }

	metSysTxPowerStatus OBJECT-TYPE
		SYNTAX		INTEGER (0..2)
		ACCESS		read-only
		STATUS		mandatory
		DESCRIPTION	"TX POWER Status
					  0:Invalid(Not obtained, Over range),
					  1:Invalid(Index No.2, when Redundancy is 1+0 term.),
					  2:Valid"
		::= { meteringSysEntry 2 }

	metSysTxPowerValue OBJECT-TYPE
		SYNTAX		DisplayString (SIZE (0..5))
		ACCESS		read-only
		STATUS		mandatory
		DESCRIPTION	"TX POWER [dBm]
					  expression: +/-**.*(5bytes)
					
					 *) This value is not guaranteed when metSysTxPowerStatus is Invalid(0 and 1)."
		::= { meteringSysEntry 3 }

	metSysRxLevelStatus OBJECT-TYPE
		SYNTAX		INTEGER (0..2)
		ACCESS		read-only
		STATUS		mandatory
		DESCRIPTION	"RX Level Status
					  0:Invalid(Not obtained, Over range),
					  1:Invalid(Index No.2, when Redundancy is 1+0 term.),
					  2:Valid"
		::= { meteringSysEntry 4 }

	metSysRxLevelValue OBJECT-TYPE
		SYNTAX		DisplayString (SIZE (0..5))
		ACCESS		read-only
		STATUS		mandatory
		DESCRIPTION	"RX Level [dBm]
					  expression: +/-**.*(5bytes)
					
					 *) This value is not guaranteed when metSysTxPowerStatus is Invalid(0 and 1)."
		::= { meteringSysEntry 5 }

	metSysPSVoltageStasus OBJECT-TYPE
		SYNTAX		INTEGER (0..2)
		ACCESS		read-only
		STATUS		mandatory
		DESCRIPTION	"ODU PS Status
					  0:Invalid(Not obtained, Over range),
					  1:Invalid(Index No.2, when Redundancy is 1+0 term.),
					  2:Valid"
		::= { meteringSysEntry 6 }

	metSysPSVoltageValue OBJECT-TYPE
		SYNTAX		DisplayString
		ACCESS		read-only
		STATUS		mandatory
		DESCRIPTION	"ODU PS [V]
					  expression: -**(3bytes)
					
					 *) This value is not guaranteed when metSysTxPowerStatus is Invalid(0 and 1)."
		::= { meteringSysEntry 7 }

	metSysBitErrorRateStatus OBJECT-TYPE
		SYNTAX		INTEGER (0..255)
		ACCESS		read-only
		STATUS		mandatory
		DESCRIPTION	"Bit Error Rate Status
					  0:Invalid,
					  42:Invalid(Equipment Level),
					  127:Calculating,
					  255:Fixed"
		::= { meteringSysEntry 12 }

	metSysBitErrorRateXValue OBJECT-TYPE
		SYNTAX		INTEGER (-1..99)
		ACCESS		read-only
		STATUS		mandatory
		DESCRIPTION	"BER (Significand Part)
					  This Value shows significant Value for BER times 10.
					  This stautus is invalid when value is -1.
					
					  (Example)
					   BER = 1.2E-6
					
					   This value is '12'."
		::= { meteringSysEntry 13 }

	metSysBitErrorRateYValue OBJECT-TYPE
		SYNTAX		INTEGER (-1..99)
		ACCESS		read-only
		STATUS		mandatory
		DESCRIPTION	"BER (Exponential Part)
					  This Value shows Exponential Part for BER.
					  This stautus is invalid when value is -1.
					
					  (Example)
					   BER = 1.2E-6
					
					   This value is '6'."
		::= { meteringSysEntry 14 }


-----------------------------------------------
-- pmonGroup Group Definitions
-----------------------------------------------

	pmon15minCurrentDataGroup OBJECT IDENTIFIER
		::= { pmonGroup 1 }

	pmon15minCurrentDataTime OBJECT-TYPE
		SYNTAX		INTEGER
		ACCESS		read-only
		STATUS		mandatory
		DESCRIPTION	"PMON 15min Current Date Time
					  Bit 0 - Bit 10 = Time (0x00 - 0x05a0 = 0:00 - 23:45, This value unit is minute.)
					  Bit 11 - Bit 15 = Day (0x01 - 0x1F  = 1 - 31)
					  Bit 16 - Bit 19 = Month (0x01 - 0x0C = 1 - 12)
					  Bit 20 - Bit 31 = Year (0x00 - 0xFFF = 0 - 4095)"
		::= { pmon15minCurrentDataGroup 1 }

	pmon15minCurrentDataStatus OBJECT-TYPE
		SYNTAX		INTEGER (0..4)
		ACCESS		read-only
		STATUS		mandatory
		DESCRIPTION	"PMON 15min Current Data Status
					  0:Not Obtained
					  1:Valid (Without Maintenace)
					  2:Valid (With Maintenace)
					  3:Invalid (Without Maintenace)
					  4:Invalid (With Maintenace)"
		::= { pmon15minCurrentDataGroup 2 }

	pmon15minCurrentDataTotalTable OBJECT-TYPE
		SYNTAX		SEQUENCE OF Pmon15minCurrentDataTotalEntry
		ACCESS		not-accessible
		STATUS		mandatory
		DESCRIPTION	"PMON 15min Current Data Total Table4"
		::= { pmon15minCurrentDataGroup 3 }

	pmon15minCurrentDataTotalEntry OBJECT-TYPE
		SYNTAX		Pmon15minCurrentDataTotalEntry
		ACCESS		not-accessible
		STATUS		mandatory
		INDEX		{
						pmon15minCurrentDataTotalName,pmon15minCurrentDataTotalWPIndex
					}
		::= { pmon15minCurrentDataTotalTable 1 }

	Pmon15minCurrentDataTotalEntry ::= SEQUENCE {
					  pmon15minCurrentDataTotalName     INTEGER,
					  pmon15minCurrentDataTotalWPIndex  INTEGER,
					  pmon15minCurrentDataTotalValue    INTEGER,
					  pmon15minCurrentDataTotalAlarm    NormalAlarmValue
					}

	pmon15minCurrentDataTotalName OBJECT-TYPE
		SYNTAX		INTEGER (1..6)
		ACCESS		read-only
		STATUS		mandatory
		DESCRIPTION	"PMON 15min Current Data Total Name Index
					Out of Frame Second (OFS)
					 - the total number of seconds the 'out of frame' condition is generated in 15 minute-blocks.
					 (OFS is applied to the Total only)
					Severely Errored Period (SEP)
					 - the cumulative time in which the BER of a one-second period exceeded 10E-3.
					Background Block Error (BBE)
					 - the sum of the B1 background block error.
					Errored Second (ES)
					 - the cumulative time in which more than one B1 error pulse per second was detected.
					Severely Errored Second (SES)
					 - the cumulative time in which the BER of a one-second period exceeded a set percentage (15% or 30%).
					Unavailable Second (UAS)
					 -the cumulative time in which the unit remained inoperative.
					RX Level monitors
					 -the minimum and maximum reception level.
					  (when there are two routes it does so for No. 1 and 2 respectively)
					
					  1:OFS,
					  2:UAS,
					  3:ES,
					  4:SES,
					  5:BBE,
					  6:SEP"
		::= { pmon15minCurrentDataTotalEntry 1 }

	pmon15minCurrentDataTotalWPIndex OBJECT-TYPE
		SYNTAX		INTEGER (1..4)
		ACCESS		read-only
		STATUS		mandatory
		DESCRIPTION	"PMON 15min Current Data Total Work Protection Index
					  1:Working(MUX),
					  2:Protection(MUX),
					  3:Working(DMR)/Working(DIR-A),
					  4:Protection(DMR)/Working(DIR-B)
					
					*) MUX side is not used when using LAN.
					*) Protection is only used when APS function is used.
					*) DIR-* is only used when Redundancy is 2-Way."
		::= { pmon15minCurrentDataTotalEntry 2 }

	pmon15minCurrentDataTotalValue OBJECT-TYPE
		SYNTAX		INTEGER (0..32)
		ACCESS		read-only
		STATUS		mandatory
		DESCRIPTION	"PMON 15min Current Data Total Value"
		::= { pmon15minCurrentDataTotalEntry 3 }

	pmon1dayCurrentDataGroup OBJECT IDENTIFIER
		::= { pmonGroup 2 }

	pmon1dayCurrentDataTime OBJECT-TYPE
		SYNTAX		INTEGER
		ACCESS		read-only
		STATUS		mandatory
		DESCRIPTION	"PMON 1day Current Date Time
					  Bit 0 - Bit 10 = Time (0x00 - 0x05a0 = 0:00 - 23:45, This value unit is minute.)
					  Bit 11 - Bit 15 = Day (0x01 - 0x1F  = 1 - 31)
					  Bit 16 - Bit 19 = Month (0x01 - 0x0C = 1 - 12)
					  Bit 20 - Bit 31 = Year (0x00 - 0xFFF = 0 - 4095)"
		::= { pmon1dayCurrentDataGroup 1 }

	pmon1dayCurrentDataStatus OBJECT-TYPE
		SYNTAX		INTEGER (0..4)
		ACCESS		read-only
		STATUS		mandatory
		DESCRIPTION	"PMON 1day Current Data Status
					  0:Not Obtained,
					  1:Valid (Without Maintenace),
					  2:Valid (With Maintenace),
					  3:Invalid (Without Maintenace),
					  4:Invalid (With Maintenace)"
		::= { pmon1dayCurrentDataGroup 2 }

	pmon1dayCurrentDataTotalTable OBJECT-TYPE
		SYNTAX		SEQUENCE OF Pmon1dayCurrentDataTotalEntry
		ACCESS		not-accessible
		STATUS		mandatory
		DESCRIPTION	"PMON 1day Current Data Total Table"
		::= { pmon1dayCurrentDataGroup 3 }

	pmon1dayCurrentDataTotalEntry OBJECT-TYPE
		SYNTAX		Pmon1dayCurrentDataTotalEntry
		ACCESS		not-accessible
		STATUS		mandatory
		INDEX		{
						pmon1dayCurrentDataTotalName,pmon1dayCurrentDataTotalWPIndex
					}
		::= { pmon1dayCurrentDataTotalTable 1 }

	Pmon1dayCurrentDataTotalEntry ::= SEQUENCE {
					  pmon1dayCurrentDataTotalName     INTEGER,
					  pmon1dayCurrentDataTotalWPIndex  INTEGER,
					  pmon1dayCurrentDataTotalValue    INTEGER,
					  pmon1dayCurrentDataTotalAlarm    INTEGER
					}

	pmon1dayCurrentDataTotalName OBJECT-TYPE
		SYNTAX		INTEGER (1..6)
		ACCESS		read-only
		STATUS		mandatory
		DESCRIPTION	"PMON 1day Current Data Total Name Index
					Out of Frame Second (OFS)
					 - the total number of seconds the 'out of frame' condition is generated in 15 minute-blocks.
					 (OFS is applied to the Total only)
					Severely Errored Period (SEP)
					 - the cumulative time in which the BER of a one-second period exceeded 10E-3.
					Background Block Error (BBE)
					 - the sum of the B1 background block error.
					Errored Second (ES)
					 - the cumulative time in which more than one B1 error pulse per second was detected.
					Severely Errored Second (SES)
					 - the cumulative time in which the BER of a one-second period exceeded a set percentage (15% or 30%).
					Unavailable Second (UAS)
					 -the cumulative time in which the unit remained inoperative.
					RX Level monitors
					 -the minimum and maximum reception level.
					  (when there are two routes it does so for No. 1 and 2 respectively)
					
					  1:OFS,
					  2:UAS,
					  3:ES,
					  4:SES,
					  5:BBE,
					  6:SEP"
		::= { pmon1dayCurrentDataTotalEntry 1 }

	pmon1dayCurrentDataTotalWPIndex OBJECT-TYPE
		SYNTAX		INTEGER (1..4)
		ACCESS		read-only
		STATUS		mandatory
		DESCRIPTION	"PMON 1day Current Data Total Work Protection Index
					  1:Working(MUX),
					  2:Protection(MUX),
					  3:Working(DMR)/Working(DIR-A),
					  4:Protection(DMR)/Working(DIR-B)
					
					*) MUX side is not used when using LAN.
					*) Protection is only used when APS function is used.
					*) DIR-* is only used when Redundancy is 2-Way."
		::= { pmon1dayCurrentDataTotalEntry 2 }

	pmon1dayCurrentDataTotalValue OBJECT-TYPE
		SYNTAX		INTEGER
		ACCESS		read-only
		STATUS		mandatory
		DESCRIPTION	"PMON 1day Current Data Total Value"
		::= { pmon1dayCurrentDataTotalEntry 3 }

	pmonTxRxLev15minCurrentDataGroup OBJECT IDENTIFIER
		::= { pmonTxRxLevGroup 1 }

	pmonTxRxLev15minCurrentDataTime OBJECT-TYPE
		SYNTAX		INTEGER
		ACCESS		read-only
		STATUS		mandatory
		DESCRIPTION	"PMON 1day Current Date Time
					  Bit 0 - Bit 10 = Time (0x00 - 0x05a0 = 0:00 - 23:45, This value unit is minute.)
					  Bit 11 - Bit 15 = Day (0x01 - 0x1F  = 1 - 31)
					  Bit 16 - Bit 19 = Month (0x01 - 0x0C = 1 - 12)
					  Bit 20 - Bit 31 = Year (0x00 - 0xFFF = 0 - 4095)"
		::= { pmonTxRxLev15minCurrentDataGroup 1 }

	pmonTxRxLev15minCurrentDataStatus OBJECT-TYPE
		SYNTAX		INTEGER (0..4)
		ACCESS		read-only
		STATUS		mandatory
		DESCRIPTION	"PMON 1day Current Data Status
					  0:Not Obtained,
					  1:Valid (Without Maintenace),
					  2:Valid (With Maintenace),
					  3:Invalid (Without Maintenace),
					  4:Invalid (With Maintenace)"
		::= { pmonTxRxLev15minCurrentDataGroup 2 }

	pmonTxRxLev15minCurrentDataTable OBJECT-TYPE
		SYNTAX		SEQUENCE OF PmonTxRxLev15minCurrentDataEntry
		ACCESS		not-accessible
		STATUS		mandatory
		DESCRIPTION	"PMON TX RX LEVEL 15min Current Data Table"
		::= { pmonTxRxLev15minCurrentDataGroup 3 }

	pmonTxRxLev15minCurrentDataEntry OBJECT-TYPE
		SYNTAX		PmonTxRxLev15minCurrentDataEntry
		ACCESS		not-accessible
		STATUS		mandatory
		INDEX		{
						pmonTxRxLev15minCurrentDataSysIndex,pmonTxRxLev15minCurrentDataItemIndex
					}
		::= { pmonTxRxLev15minCurrentDataTable 1 }

	PmonTxRxLev15minCurrentDataEntry ::= SEQUENCE {
					  pmonTxRxLev15minCurrentDataSysIndex   INTEGER,
					  pmonTxRxLev15minCurrentDataItemIndex  INTEGER,
					  pmonTxRxLev15minCurrentData           DisplayString
					}

	pmonTxRxLev15minCurrentDataSysIndex OBJECT-TYPE
		SYNTAX		INTEGER (1..2)
		ACCESS		read-only
		STATUS		mandatory
		DESCRIPTION	"PMON TX RX LEVEL 15min Current Data Index
					 1:No. 1/DIR-A
					 2:No. 2/DIR-B
					
					 *)No.2 is available for 1+1 system.
					 *)DIR-A/B is available for 2-WAY system."
		::= { pmonTxRxLev15minCurrentDataEntry 1 }

	pmonTxRxLev15minCurrentDataItemIndex OBJECT-TYPE
		SYNTAX		INTEGER (1..2)
		ACCESS		read-only
		STATUS		mandatory
		DESCRIPTION	"PMON TX RX LEVEL 15min Current Data Item Index
					  1:RX LEVEL - MAX,
					  2:RX LEBEL - MIN"
		::= { pmonTxRxLev15minCurrentDataEntry 2 }

	pmonTxRxLev15minCurrentData OBJECT-TYPE
		SYNTAX		DisplayString (SIZE(5))
		ACCESS		read-only
		STATUS		mandatory
		DESCRIPTION	"PMON TX RX Level 15min Current Data
					  [Format]
					  -**.*"
		::= { pmonTxRxLev15minCurrentDataEntry 3 }

	pmonTxRxLev1dayCurrentDataGroup OBJECT IDENTIFIER
		::= { pmonTxRxLevGroup 2 }

	pmonTxRxLev1dayCurrentDataTime OBJECT-TYPE
		SYNTAX		INTEGER
		ACCESS		read-only
		STATUS		mandatory
		DESCRIPTION	"PMON TX RX Level 1day Current Date Time
					(Bit 0 - Bit 10) = Time (0x00 - 0x05a0 = 0:00 - 23:45, This value unit is minute.)
					(Bit 11 - Bit 15) = Day (0x01 - 0x1F  = 1 - 31)
					(Bit 16 - Bit 19) = Month (0x01 - 0x0C = 1 - 12)
					(Bit 20 - Bit 31) = Year (0x00 - 0xFFF = 0 - 4095)"
		::= { pmonTxRxLev1dayCurrentDataGroup 1 }

	pmonTxRxLev1dayCurrentDataStatus OBJECT-TYPE
		SYNTAX		INTEGER(0..4)
		ACCESS		read-only
		STATUS		mandatory
		DESCRIPTION	"PMON TX RX Level Current Data Status
					  0:Not Obtained,
					  1:Valid (Without Maintenace),
					  2:Valid (With Maintenace),
					  3:Invalid (Without Maintenace),
					  4:Invalid (With Maintenace)"
		::= { pmonTxRxLev1dayCurrentDataGroup 2 }

	pmonTxRxLev1dayCurrentDataTable OBJECT-TYPE
		SYNTAX		SEQUENCE OF PmonTxRxLev1dayCurrentDataEntry
		ACCESS		not-accessible
		STATUS		mandatory
		DESCRIPTION	"PMON TX RX Level 1day Current Data Table"
		::= { pmonTxRxLev1dayCurrentDataGroup 3 }

	pmonTxRxLev1dayCurrentDataEntry OBJECT-TYPE
		SYNTAX		PmonTxRxLev1dayCurrentDataEntry
		ACCESS		not-accessible
		STATUS		mandatory
		INDEX		{
						pmonTxRxLev1dayCurrentDataSysIndex,pmonTxRxLev1dayCurrentDataItemIndex
					}
		::= { pmonTxRxLev1dayCurrentDataTable 1 }

	PmonTxRxLev1dayCurrentDataEntry ::= SEQUENCE {
					  pmonTxRxLev1dayCurrentDataSysIndex   INTEGER,
					  pmonTxRxLev1dayCurrentDataItemIndex  INTEGER,
					  pmonTxRxLev1dayCurrentData           DisplayString
					}

	pmonTxRxLev1dayCurrentDataSysIndex OBJECT-TYPE
		SYNTAX		INTEGER (1..2)
		ACCESS		read-only
		STATUS		mandatory
		DESCRIPTION	"PMON TX RX Level 1day Current Data Index
					 1:No. 1/DIR-A
					 2:No. 2/DIR-B
					
					 *)No.2 is available for 1+1 system.
					 *)DIR-A/B is available for 2-WAY system."
		::= { pmonTxRxLev1dayCurrentDataEntry 1 }

	pmonTxRxLev1dayCurrentDataItemIndex OBJECT-TYPE
		SYNTAX		INTEGER (1..2)
		ACCESS		read-only
		STATUS		mandatory
		DESCRIPTION	"PMON TX RX LEVEL 1day Current Data Item Index
					  1:RX LEVEL - MAX,
					  2:RX LEBEL - MIN"
		::= { pmonTxRxLev1dayCurrentDataEntry 2 }

	pmonTxRxLev1dayCurrentData OBJECT-TYPE
		SYNTAX		DisplayString(SIZE(5))
		ACCESS		read-only
		STATUS		mandatory
		DESCRIPTION	"PMON TX RX Level 1day Current Data
					  [Format]
					  -**.*"
		::= { pmonTxRxLev1dayCurrentDataEntry 3 }


-----------------------------------------------
-- rmonGroup Group Definitions
-----------------------------------------------

	rmon15minCurrentDataGroup OBJECT IDENTIFIER
		::= { rmonGroup 1 }

	rmon15minCurrentDataTime OBJECT-TYPE
		SYNTAX		INTEGER
		ACCESS		read-only
		STATUS		mandatory
		::= { rmon15minCurrentDataGroup 1 }

	rmon15minCurrentDataStatus OBJECT-TYPE
		SYNTAX		INTEGER
		ACCESS		read-only
		STATUS		mandatory
		::= { rmon15minCurrentDataGroup 2 }

	rmon15minCurrentDataTable OBJECT-TYPE
		SYNTAX		SEQUENCE OF Rmon15minCurrentDataEntry
		ACCESS		not-accessible
		STATUS		mandatory
		DESCRIPTION	"RMON 15min Current Data Table"
		::= { rmon15minCurrentDataGroup 3 }

	rmon15minCurrentDataEntry OBJECT-TYPE
		SYNTAX		Rmon15minCurrentDataEntry
		ACCESS		not-accessible
		STATUS		mandatory
		INDEX		{
						rmon15minCurrentDataPortIndex
					}
		::= { rmon15minCurrentDataTable 1 }

	Rmon15minCurrentDataEntry ::= SEQUENCE {
					  rmon15minCurrentDataPortIndex              INTEGER,
					  rmon15minCurrentDataRxUnicast              OCTET STRING,
					  rmon15minCurrentDataRxBroadcast            OCTET STRING,
					  rmon15minCurrentDataRxMulticast            OCTET STRING,
					  rmon15minCurrentDataRxPause                OCTET STRING,
					  rmon15minCurrentDataRxCrcError             OCTET STRING,
					  rmon15minCurrentDataRxAlignmentError       OCTET STRING,
					  rmon15minCurrentDataRxSymbolError          OCTET STRING,
					  rmon15minCurrentDataRxUndersize            OCTET STRING,
					  rmon15minCurrentDataRxFragments            OCTET STRING,
					  rmon15minCurrentDataRx64Octets             OCTET STRING,
					  rmon15minCurrentDataRx65to127Octets        OCTET STRING,
					  rmon15minCurrentDataRx128to255Octets       OCTET STRING,
					  rmon15minCurrentDataRx256to511Octets       OCTET STRING,
					  rmon15minCurrentDataRx512to1023Octets      OCTET STRING,
					  rmon15minCurrentDataRx1024to1536Octets     OCTET STRING,
					  rmon15minCurrentDataRx1537toMaxSizeOctets  OCTET STRING,
					  rmon15minCurrentDataRxJabbers              OCTET STRING,
					  rmon15minCurrentDataTxUnicast              OCTET STRING,
					  rmon15minCurrentDataTxBroadcast            OCTET STRING,
					  rmon15minCurrentDataTxMulticast            OCTET STRING,
					  rmon15minCurrentDataTxPause                OCTET STRING,
					  rmon15minCurrentDataTxTotalCollision       OCTET STRING
					}

	rmon15minCurrentDataPortIndex OBJECT-TYPE
		SYNTAX		INTEGER (1..10)
		ACCESS		read-only
		STATUS		mandatory
		DESCRIPTION "RMON 15min Current Data Port Index
     				  1:port1-LINE,
     				  2:port2-LINE,
     				  3:port3-LINE,
     				  4:port4-LINE,
     				  5:scLan-LINE,
     				  6:port1-DMR,
     				  7:port2-DMR,
     				  8:port3-DMR,
     				  9:port4-DMR,
     				  10:scLan-DMR"
		::= { rmon15minCurrentDataEntry 1 }

	rmon15minCurrentDataRxUnicast OBJECT-TYPE
		SYNTAX		OCTET STRING (SIZE (5))
		ACCESS		read-only
		STATUS		mandatory
		DESCRIPTION	"RMON 15min Current Date Rx Unicast
					RX Unicast Pkts
					 - the total number of unicast packets received.
					 This item measures from 64 octets to 1536 octets."
		::= { rmon15minCurrentDataEntry 2 }

	rmon15minCurrentDataRxBroadcast OBJECT-TYPE
		SYNTAX		OCTET STRING (SIZE (5))
		ACCESS		read-only
		STATUS		mandatory
		DESCRIPTION	"RMON 15min Current Date RX Broadcast
					RX Broadcast Pkts
					 - the total number of packets received that were directed to the broadcast address.
					  This item measures from 64 to 1536 octets in length."
		::= { rmon15minCurrentDataEntry 3 }

	rmon15minCurrentDataRxMulticast OBJECT-TYPE
		SYNTAX		OCTET STRING (SIZE (5))
		ACCESS		read-only
		STATUS		mandatory
		DESCRIPTION	"RMON 15min Current Date Rx Multicast
					RX Multicast Pkts
					 - the total number of packets received that were directed to a multicast address.
					  This item measures from 64 to 1536 octets in length."
		::= { rmon15minCurrentDataEntry 4 }

	rmon15minCurrentDataRxPause OBJECT-TYPE
		SYNTAX		OCTET STRING (SIZE (5))
		ACCESS		read-only
		STATUS		mandatory
		DESCRIPTION	"RMON 15min Current Date Rx Pause
					RX Pause Pkts - the total number of packets received that were paused."
		::= { rmon15minCurrentDataEntry 5 }

	rmon15minCurrentDataRxCrcError OBJECT-TYPE
		SYNTAX		OCTET STRING (SIZE (5))
		ACCESS		read-only
		STATUS		mandatory
		DESCRIPTION	"RMON 15min Current Date RX CRC Errors
					RX CRC Errors
					 - the total number of packets received that detected FCS error.
					  This item measures from 64 to 1536 octets in length."
		::= { rmon15minCurrentDataEntry 6 }

	rmon15minCurrentDataRxAlignmentError OBJECT-TYPE
		SYNTAX		OCTET STRING (SIZE (5))
		ACCESS		read-only
		STATUS		mandatory
		DESCRIPTION	"RMON 15min Current Date RX Align Errors
					RX Align Errors
					 - the total number of packets received that detected Alignment error.
					  This item measures from 64 to 1536 octets in length."
		::= { rmon15minCurrentDataEntry 7 }

	rmon15minCurrentDataRxSymbolError OBJECT-TYPE
		SYNTAX		OCTET STRING (SIZE (5))
		ACCESS		read-only
		STATUS		mandatory
		DESCRIPTION	"RMON 15min Current Date RX Symbol Errors
					RX Symbol Errors
					 - the total number of packets received that detected Symbol error.
					  This item measures from 64 to 1536 octets in length."
		::= { rmon15minCurrentDataEntry 8 }

	rmon15minCurrentDataRxUndersize OBJECT-TYPE
		SYNTAX		OCTET STRING (SIZE (5))
		ACCESS		read-only
		STATUS		mandatory
		DESCRIPTION	"RMON 15min Current Date RX Undersize
					RX Undersize Pkts
					 - the total number of good packets received that were less than 64 octets in length."
		::= { rmon15minCurrentDataEntry 9 }

	rmon15minCurrentDataRxFragments OBJECT-TYPE
		SYNTAX		OCTET STRING (SIZE (5))
		ACCESS		read-only
		STATUS		mandatory
		DESCRIPTION	"RMON 15min Current Date RX Fragments
					RX Fragments
					 - the total number of packets (Including bad packets) received that were less than 64 octets in length."
		::= { rmon15minCurrentDataEntry 10 }

	rmon15minCurrentDataRx64Octets OBJECT-TYPE
		SYNTAX		OCTET STRING (SIZE (5))
		ACCESS		read-only
		STATUS		mandatory
		DESCRIPTION	"RMON 15min Current Date RX Pkts 64
					RX Pkts 64 - the total number of packets (Including bad packets) received that were 64 octets in length."
		::= { rmon15minCurrentDataEntry 11 }

	rmon15minCurrentDataRx65to127Octets OBJECT-TYPE
		SYNTAX		OCTET STRING (SIZE (5))
		ACCESS		read-only
		STATUS		mandatory
		DESCRIPTION	"RMON 15min Current Date RX Pkts 65-127
					RX Pkts 65-127
					 - the total number of packets (Including bad packets) received that were between 65 and 127 octets in length."
		::= { rmon15minCurrentDataEntry 12 }

	rmon15minCurrentDataRx128to255Octets OBJECT-TYPE
		SYNTAX		OCTET STRING (SIZE (5))
		ACCESS		read-only
		STATUS		mandatory
		DESCRIPTION	"RMON 15min Current Date RX Pkts 128-255
					RX Pkts 128-255
					 - the total number of packets (Including bad packets) received that were between 128 and 255 octets in length."
		::= { rmon15minCurrentDataEntry 13 }

	rmon15minCurrentDataRx256to511Octets OBJECT-TYPE
		SYNTAX		OCTET STRING (SIZE (5))
		ACCESS		read-only
		STATUS		mandatory
		DESCRIPTION	"RMON 15min Current Date RX Pkts 256-511
					RX Pkts 256-511
					 - the total number of packets (Including bad packets) received that were between 256 and 511 octets in length."
		::= { rmon15minCurrentDataEntry 14 }

	rmon15minCurrentDataRx512to1023Octets OBJECT-TYPE
		SYNTAX		OCTET STRING (SIZE (5))
		ACCESS		read-only
		STATUS		mandatory
		DESCRIPTION	"RMON 15min Current Date RX Pkts 512-1023
					RX Pkts 512-1023
					 - the total number of packets (Including bad packets) received that were between 512 and 1023 octets in length."
		::= { rmon15minCurrentDataEntry 15 }

	rmon15minCurrentDataRx1024to1536Octets OBJECT-TYPE
		SYNTAX		OCTET STRING (SIZE (5))
		ACCESS		read-only
		STATUS		mandatory
		DESCRIPTION	"RMON 15min Current Date RX Pkts 1024-1536
					RX Pkts 1024-1536
					 - the total number of packets (Including bad packets) received that were between 1024 and 1536 octets in length."
		::= { rmon15minCurrentDataEntry 16 }

	rmon15minCurrentDataRx1537toMaxSizeOctets OBJECT-TYPE
		SYNTAX		OCTET STRING (SIZE (5))
		ACCESS		read-only
		STATUS		mandatory
		DESCRIPTION	"RMON 15min Current Date RX Pkts 1537-MAX
					RX Pkts 1537-MAX
					 - the total number of good packets received that were between 1537 and 1916 octets in length."
		::= { rmon15minCurrentDataEntry 17 }

	rmon15minCurrentDataRxJabbers OBJECT-TYPE
		SYNTAX		OCTET STRING (SIZE (5))
		ACCESS		read-only
		STATUS		mandatory
		DESCRIPTION	"RMON 15min Current Date RX Jabbers
					RX Jabbers
					 - the total number of packets received (Including bad packets) that were longer than 1537 octets."
		::= { rmon15minCurrentDataEntry 18 }

	rmon15minCurrentDataTxUnicast OBJECT-TYPE
		SYNTAX		OCTET STRING (SIZE (5))
		ACCESS		read-only
		STATUS		mandatory
		DESCRIPTION	"RMON 15min Current Date TX Unicast Pkts
					TX Unicast Pkts
					 - the total number of unicast packets transmitted.
					  This item measures from 64 to 1916 octets in length."
		::= { rmon15minCurrentDataEntry 19 }

	rmon15minCurrentDataTxBroadcast OBJECT-TYPE
		SYNTAX		OCTET STRING (SIZE (5))
		ACCESS		read-only
		STATUS		mandatory
		DESCRIPTION	"RMON 15min Current Date TX Broadcast Pkts
					TX Broadcast Pkts
					 - the total number of packets transmitted that were directed to the broadcast address.
					  This item measures from 64 to 1916 octets in length."
		::= { rmon15minCurrentDataEntry 20 }

	rmon15minCurrentDataTxMulticast OBJECT-TYPE
		SYNTAX		OCTET STRING (SIZE (5))
		ACCESS		read-only
		STATUS		mandatory
		DESCRIPTION	"RMON 15min Current Date TX Multicast Pkts
					TX Multicast Pkts
					 - the total number of packets transmitted that were directed to a multicast address.
					  This item measures from 64 to 1916 octets in length."
		::= { rmon15minCurrentDataEntry 21 }

	rmon15minCurrentDataTxPause OBJECT-TYPE
		SYNTAX		OCTET STRING (SIZE (5))
		ACCESS		read-only
		STATUS		mandatory
		DESCRIPTION	"RMON 15min Current Date TX Pause Pkts
					TX Pause Pkts - the total number of packets transmitted that were paused."
		::= { rmon15minCurrentDataEntry 22 }

	rmon15minCurrentDataTxTotalCollision OBJECT-TYPE
		SYNTAX		OCTET STRING (SIZE (5))
		ACCESS		read-only
		STATUS		mandatory
		DESCRIPTION	"RMON 15min Current Date TX Total Collisions
					TX Total Collisions - the total number of collisions when it is transmitting."
		::= { rmon15minCurrentDataEntry 23 }

	rmon15minCurrentDataAllValueTable OBJECT-TYPE
		SYNTAX		SEQUENCE OF Rmon15minCurrentDataAllValueEntry
		ACCESS		read-only
		STATUS		mandatory
		DESCRIPTION	"RMON 15min Current Data All Value Table"
		::= { rmon15minCurrentDataGroup 4 }

	rmon15minCurrentDataAllValueEntry OBJECT-TYPE
		SYNTAX		Rmon15minCurrentDataAllValueEntry
		ACCESS		not-accessible
		STATUS		mandatory
		INDEX		{
						rmon15minCurrentDataAllValuePortIndex
					}
		::= { rmon15minCurrentDataAllValueTable 1 }

	Rmon15minCurrentDataAllValueEntry ::= SEQUENCE {
					  rmon15minCurrentDataAllValuePortIndex  INTEGER,
					  rmon15minCurrentDataAllValue           OCTET STRING
					}

	rmon15minCurrentDataAllValuePortIndex OBJECT-TYPE
		SYNTAX		INTEGER (1..10)
		ACCESS		read-only
		STATUS		mandatory
		DESCRIPTION "RMON 15min Current Data All Value Port Index
					  1:port1-LINE,
					  2:port2-LINE,
					  3:port3-LINE,
					  4:port4-LINE,
					  5:scLan-LINE,
	 				  6:port1-DMR,
					  7:port2-DMR,
					  8:port3-DMR,
					  9:port4-DMR,
					  10:scLan-DMR"
		::= { rmon15minCurrentDataAllValueEntry 1 }

	rmon15minCurrentDataAllValue OBJECT-TYPE
		SYNTAX		OCTET STRING (SIZE (110))
		ACCESS		read-only
		STATUS		mandatory
		::= { rmon15minCurrentDataAllValueEntry 2 }

	rmon1dayCurrentDataGroup OBJECT IDENTIFIER
		::= { rmonGroup 2 }

	rmon1dayCurrentDataTime OBJECT-TYPE
		SYNTAX		INTEGER
		ACCESS		read-only
		STATUS		mandatory
		::= { rmon1dayCurrentDataGroup 1 }

	rmon1dayCurrentDataStatus OBJECT-TYPE
		SYNTAX		INTEGER
		ACCESS		read-only
		STATUS		mandatory
		::= { rmon1dayCurrentDataGroup 2 }

	rmon1dayCurrentDataTable OBJECT-TYPE
		SYNTAX		SEQUENCE OF Rmon1dayCurrentDataEntry
		ACCESS		not-accessible
		STATUS		mandatory
		DESCRIPTION	""
		::= { rmon1dayCurrentDataGroup 3 }

	rmon1dayCurrentDataEntry OBJECT-TYPE
		SYNTAX		Rmon1dayCurrentDataEntry
		ACCESS		not-accessible
		STATUS		mandatory
		INDEX		{
						rmon1dayCurrentDataPortIndex
					}
		::= { rmon1dayCurrentDataTable 1 }

	Rmon1dayCurrentDataEntry ::= SEQUENCE {
					  rmon1dayCurrentDataPortIndex              INTEGER,
					  rmon1dayCurrentDataRxUnicast              OCTET STRING,
					  rmon1dayCurrentDataRxBroadcast            OCTET STRING,
					  rmon1dayCurrentDataRxMulticast            OCTET STRING,
					  rmon1dayCurrentDataRxPause                OCTET STRING,
					  rmon1dayCurrentDataRxCrcError             OCTET STRING,
					  rmon1dayCurrentDataRxAlignmentError       OCTET STRING,
					  rmon1dayCurrentDataRxSymbolError          OCTET STRING,
					  rmon1dayCurrentDataRxUndersize            OCTET STRING,
					  rmon1dayCurrentDataRxFragments            OCTET STRING,
					  rmon1dayCurrentDataRx64Octets             OCTET STRING,
					  rmon1dayCurrentDataRx65to127Octets        OCTET STRING,
					  rmon1dayCurrentDataRx128to255Octets       OCTET STRING,
					  rmon1dayCurrentDataRx256to511Octets       OCTET STRING,
					  rmon1dayCurrentDataRx512to1023Octets      OCTET STRING,
					  rmon1dayCurrentDataRx1024to1536Octets     OCTET STRING,
					  rmon1dayCurrentDataRx1537toMaxSizeOctets  OCTET STRING,
					  rmon1dayCurrentDataRxJabbers              OCTET STRING,
					  rmon1dayCurrentDataTxUnicast              OCTET STRING,
					  rmon1dayCurrentDataTxBroadcast            OCTET STRING,
					  rmon1dayCurrentDataTxMulticast            OCTET STRING,
					  rmon1dayCurrentDataTxPause                OCTET STRING,
					  rmon1dayCurrentDataTxTotalCollision       OCTET STRING
					}

	rmon1dayCurrentDataPortIndex OBJECT-TYPE
		SYNTAX		INTEGER (1..10)
		ACCESS		read-only
		STATUS		mandatory
		DESCRIPTION "RMON 1day Current Data Port Index
					  1:port1-LINE,
					  2:port2-LINE,
					  3:port3-LINE,
					  4:port4-LINE,
					  5:scLan-LINE,
					  6:port1-DMR,
					  7:port2-DMR,
					  8:port3-DMR,
					  9:port4-DMR,
					  10:scLan-DMR"
		::= { rmon1dayCurrentDataEntry 1 }

	rmon1dayCurrentDataRxUnicast OBJECT-TYPE
		SYNTAX		OCTET STRING (SIZE (5))
		ACCESS		read-only
		STATUS		mandatory
		DESCRIPTION	"RMON 1day Current Date RX Unicast
					RX Unicast Pkts
					 - the total number of unicast packets received.
					  This item measures from 64 octets to 1536 octets. "
		::= { rmon1dayCurrentDataEntry 2 }

	rmon1dayCurrentDataRxBroadcast OBJECT-TYPE
		SYNTAX		OCTET STRING (SIZE (5))
		ACCESS		read-only
		STATUS		mandatory
		DESCRIPTION	"RMON 1day Current Date RX Broadcast
					RX Broadcast Pkts
					 - the total number of packets received that were directed to the broadcast address.
					  This item measures from 64 to 1536 octets in length."
		::= { rmon1dayCurrentDataEntry 3 }

	rmon1dayCurrentDataRxMulticast OBJECT-TYPE
		SYNTAX		OCTET STRING (SIZE (5))
		ACCESS		read-only
		STATUS		mandatory
		DESCRIPTION	"RMON 1day Current Date RX Multicast
					RX Multicast Pkts
					 - the total number of packets received that were directed to a multicast address.
					  This item measures from 64 to 1536 octets in length."
		::= { rmon1dayCurrentDataEntry 4 }

	rmon1dayCurrentDataRxPause OBJECT-TYPE
		SYNTAX		OCTET STRING (SIZE (5))
		ACCESS		read-only
		STATUS		mandatory
		DESCRIPTION	"RMON 1day Current Date RX Pause
					RX Pause Pkts - the total number of packets received that were paused."
		::= { rmon1dayCurrentDataEntry 5 }

	rmon1dayCurrentDataRxCrcError OBJECT-TYPE
		SYNTAX		OCTET STRING (SIZE (5))
		ACCESS		read-only
		STATUS		mandatory
		DESCRIPTION	"RMON 1day Current Date RX CRC Errors
					RX CRC Errors
					 - the total number of packets received that detected FCS error.
					  This item measures from 64 to 1536 octets in length."
		::= { rmon1dayCurrentDataEntry 6 }

	rmon1dayCurrentDataRxAlignmentError OBJECT-TYPE
		SYNTAX		OCTET STRING (SIZE (5))
		ACCESS		read-only
		STATUS		mandatory
		DESCRIPTION	"RMON 1day Current Date RX Align Errors
					RX Align Errors
					 - the total number of packets received that detected Alignment error.
					  This item measures from 64 to 1536 octets in length."
		::= { rmon1dayCurrentDataEntry 7 }

	rmon1dayCurrentDataRxSymbolError OBJECT-TYPE
		SYNTAX		OCTET STRING (SIZE (5))
		ACCESS		read-only
		STATUS		mandatory
		DESCRIPTION	"RMON 1day Current Date RX Symbol Errors
					RX Symbol Errors
					 - the total number of packets received that detected Symbol error.
					  This item measures from 64 to 1536 octets in length."
		::= { rmon1dayCurrentDataEntry 8 }

	rmon1dayCurrentDataRxUndersize OBJECT-TYPE
		SYNTAX		OCTET STRING (SIZE (5))
		ACCESS		read-only
		STATUS		mandatory
		DESCRIPTION	"RMON 1day Current Date RX Undersize Pkts
					RX Undersize Pkts
					 - the total number of good packets received that were less than 64 octets in length."
		::= { rmon1dayCurrentDataEntry 9 }

	rmon1dayCurrentDataRxFragments OBJECT-TYPE
		SYNTAX		OCTET STRING (SIZE (5))
		ACCESS		read-only
		STATUS		mandatory
		DESCRIPTION	"RMON 1day Current Date RX Fragments
					RX Fragments
					 - the total number of packets (Including bad packets) received that were less than 64 octets in length."
		::= { rmon1dayCurrentDataEntry 10 }

	rmon1dayCurrentDataRx64Octets OBJECT-TYPE
		SYNTAX		OCTET STRING (SIZE (5))
		ACCESS		read-only
		STATUS		mandatory
		DESCRIPTION	"RMON 1day Current Date RX Pkts 64
					RX Pkts 64
					 - the total number of packets (Including bad packets) received that were 64 octets in length."
		::= { rmon1dayCurrentDataEntry 11 }

	rmon1dayCurrentDataRx65to127Octets OBJECT-TYPE
		SYNTAX		OCTET STRING (SIZE (5))
		ACCESS		read-only
		STATUS		mandatory
		DESCRIPTION	"RMON 1day Current Date RX Pkts 65-127
					RX Pkts 65-127
					 - the total number of packets (Including bad packets) received that were between 65 and 127 octets in length."
		::= { rmon1dayCurrentDataEntry 12 }

	rmon1dayCurrentDataRx128to255Octets OBJECT-TYPE
		SYNTAX		OCTET STRING (SIZE (5))
		ACCESS		read-only
		STATUS		mandatory
		DESCRIPTION	"RMON 1day Current Date RX Pkts 128-255
					RX Pkts 128-255
					 - the total number of packets (Including bad packets) received that were between 128 and 255 octets in length."
		::= { rmon1dayCurrentDataEntry 13 }

	rmon1dayCurrentDataRx256to511Octets OBJECT-TYPE
		SYNTAX		OCTET STRING (SIZE (5))
		ACCESS		read-only
		STATUS		mandatory
		DESCRIPTION	"RMON 1day Current Date RX Pkts 256-511
					RX Pkts 256-511
					 - the total number of packets (Including bad packets) received that were between 256 and 511 octets in length."
		::= { rmon1dayCurrentDataEntry 14 }

	rmon1dayCurrentDataRx512to1023Octets OBJECT-TYPE
		SYNTAX		OCTET STRING (SIZE (5))
		ACCESS		read-only
		STATUS		mandatory
		DESCRIPTION	"RMON 1day Current Date RX Pkts 512-1023
					RX Pkts 512-1023
					 - the total number of packets (Including bad packets) received that were between 512 and 1023 octets in length."
		::= { rmon1dayCurrentDataEntry 15 }

	rmon1dayCurrentDataRx1024to1536Octets OBJECT-TYPE
		SYNTAX		OCTET STRING (SIZE (5))
		ACCESS		read-only
		STATUS		mandatory
		DESCRIPTION	"RMON 1day Current Date RX Pkts 1024-1536
					RX Pkts 1024-1536
					 - the total number of packets (Including bad packets) received that were between 1024 and 1536 octets in length."
		::= { rmon1dayCurrentDataEntry 16 }

	rmon1dayCurrentDataRx1537toMaxSizeOctets OBJECT-TYPE
		SYNTAX		OCTET STRING (SIZE (5))
		ACCESS		read-only
		STATUS		mandatory
		DESCRIPTION	"RMON 1day Current Date RX Pkts 1537-MAX
					RX Pkts 1537-MAX
					 - the total number of good packets received that were between 1537 and 1916 octets in length."
		::= { rmon1dayCurrentDataEntry 17 }

	rmon1dayCurrentDataRxJabbers OBJECT-TYPE
		SYNTAX		OCTET STRING (SIZE (5))
		ACCESS		read-only
		STATUS		mandatory
		DESCRIPTION	"RMON 1day Current Date RX Jabbers
					RX Jabbers
					 - the total number of packets received (Including bad packets) that were longer than 1537 octets."
		::= { rmon1dayCurrentDataEntry 18 }

	rmon1dayCurrentDataTxUnicast OBJECT-TYPE
		SYNTAX		OCTET STRING (SIZE (5))
		ACCESS		read-only
		STATUS		mandatory
		DESCRIPTION	"RMON 1day Current Date TX Unicast
					TX Unicast Pkts
					 - the total number of unicast packets transmitted. This item measures from 64 to 1916 octets in length."
		::= { rmon1dayCurrentDataEntry 19 }

	rmon1dayCurrentDataTxBroadcast OBJECT-TYPE
		SYNTAX		OCTET STRING (SIZE (5))
		ACCESS		read-only
		STATUS		mandatory
		DESCRIPTION	"RMON 1day Current Date TX Broadcast
					TX Broadcast Pkts
					 - the total number of packets transmitted that were directed to the broadcast address.
					  This item measures from 64 to 1916 octets in length."
		::= { rmon1dayCurrentDataEntry 20 }

	rmon1dayCurrentDataTxMulticast OBJECT-TYPE
		SYNTAX		OCTET STRING (SIZE (5))
		ACCESS		read-only
		STATUS		mandatory
		DESCRIPTION	"RMON 1day Current Date TX Multicast
					TX Multicast Pkts
					 - the total number of packets transmitted that were directed to a multicast address.
					  This item measures from 64 to 1916 octets in length."
		::= { rmon1dayCurrentDataEntry 21 }

	rmon1dayCurrentDataTxPause OBJECT-TYPE
		SYNTAX		OCTET STRING (SIZE (5))
		ACCESS		read-only
		STATUS		mandatory
		DESCRIPTION	"RMON 1day Current Date TX Pause
					TX Pause Pkts - the total number of packets transmitted that were paused."
		::= { rmon1dayCurrentDataEntry 22 }

	rmon1dayCurrentDataTxTotalCollision OBJECT-TYPE
		SYNTAX		OCTET STRING (SIZE (5))
		ACCESS		read-only
		STATUS		mandatory
		DESCRIPTION	"RMON 1day Current Date TX Total Collisions
					TX Total Collisions - the total number of collisions when it is transmitting."
		::= { rmon1dayCurrentDataEntry 23 }

	rmon1dayCurrentDataAllValueTable OBJECT-TYPE
		SYNTAX		SEQUENCE OF Rmon1dayCurrentDataAllValueEntry
		ACCESS		read-only
		STATUS		mandatory
		DESCRIPTION	"RMON 1day Current Data Value Table"
		::= { rmon1dayCurrentDataGroup 4 }

	rmon1dayCurrentDataAllValueEntry OBJECT-TYPE
		SYNTAX		Rmon1dayCurrentDataAllValueEntry
		ACCESS		not-accessible
		STATUS		mandatory
		INDEX		{
						rmon1dayCurrentDataAllValuePortIndex
					}
		::= { rmon1dayCurrentDataAllValueTable 1 }

	Rmon1dayCurrentDataAllValueEntry ::= SEQUENCE {
					  rmon1dayCurrentDataAllValuePortIndex  INTEGER,
					  rmon1dayCurrentDataAllValue           OCTET STRING
					}

	rmon1dayCurrentDataAllValuePortIndex OBJECT-TYPE
		SYNTAX		INTEGER (1..10)
		ACCESS		read-only
		STATUS		mandatory
		DESCRIPTION "RMON 1day Current Data All Value Port Index
					  1:port1-LINE,
					  2:port2-LINE,
					  3:port3-LINE,
					  4:port4-LINE,
					  5:scLan-LINE,
					  6:port1-DMR,
					  7:port2-DMR,
					  8:port3-DMR,
					  9:port4-DMR,
					  10:scLan-DMR"
		::= { rmon1dayCurrentDataAllValueEntry 1 }

	rmon1dayCurrentDataAllValue OBJECT-TYPE
		SYNTAX		OCTET STRING (SIZE (110))
		ACCESS		read-only
		STATUS		mandatory
		DESCRIPTION 	"RMON 1day Current Data All Value"
		::= { rmon1dayCurrentDataAllValueEntry 2 }


-----------------------------------------------
-- End User MIB Object Definitions
-----------------------------------------------
END
