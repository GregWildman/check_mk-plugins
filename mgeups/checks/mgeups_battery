#!/usr/bin/python
# -*- encoding: utf-8; py-indent-offset: 4 -*-
# +------------------------------------------------------------------+
# |             ____ _               _        __  __ _  __           |
# |            / ___| |__   ___  ___| | __   |  \/  | |/ /           |
# |           | |   | '_ \ / _ \/ __| |/ /   | |\/| | ' /            |
# |           | |___| | | |  __/ (__|   <    | |  | | . \            |
# |            \____|_| |_|\___|\___|_|\_\___|_|  |_|_|\_\           |
# |                                                                  |
# | Copyright Mathias Kettner 2018             mk@mathias-kettner.de |
# +------------------------------------------------------------------+
#
# This file is part of Check_MK.
# The official homepage is at http://mathias-kettner.de/check_mk.
#
# check_mk is free software;  you can redistribute it and/or modify it
# under the  terms of the  GNU General Public License  as published by
# the Free Software Foundation in version 2.  check_mk is  distributed
# in the hope that it will be useful, but WITHOUT ANY WARRANTY;  with-
# out even the implied warranty of  MERCHANTABILITY  or  FITNESS FOR A
# PARTICULAR PURPOSE. See the  GNU General Public License for more de-
# tails. You should have  received  a copy of the  GNU  General Public
# License along with GNU Make; see the file  COPYING.  If  not,  write
# to the Free Software Foundation, Inc., 51 Franklin St,  Fifth Floor,
# Boston, MA 02110-1301 USA.

# Techfu / Greg Wildman <greg.wildman@techfu.co.za> - 2018

# Example Output
#
# MG-SNMP-UPS-MIB::upsmgIdenmgBattery
# .1.3.6.1.4.1.705.1.5.1.0 = INTEGER: 0
# .1.3.6.1.4.1.705.1.5.2.0 = INTEGER: 100
# .1.3.6.1.4.1.705.1.5.5.0 = INTEGER: 810
# .1.3.6.1.4.1.705.1.5.6.0 = INTEGER: 0
# .1.3.6.1.4.1.705.1.5.9.0 = INTEGER: 2
# .1.3.6.1.4.1.705.1.5.11.0 = INTEGER: 2
# .1.3.6.1.4.1.705.1.5.14.0 = INTEGER: 2
# .1.3.6.1.4.1.705.1.5.15.0 = INTEGER: 2
# .1.3.6.1.4.1.705.1.5.16.0 = INTEGER: 2

mgeups_battery_scan = lambda oid: oid(".1.3.6.1.2.1.1.2.0") == ".1.3.6.1.4.1.705.1.2"

mgeups_battery_info = (".1.3.6.1.4.1.705.1.5", [   # MG-SNMP-UPS-MIB::upsmgIdenmgBattery
                            "1.0",    # upsmgBatteryRemainingTime
                            "2.0",    # upsmgBatteryLevel
                            "5.0",    # upsmgBatteryVoltage
                            "6.0",    # upsmgBatteryCurrent
                            "9.0",    # upsmgBatteryFaultBattery
                           "11.0",    # upsmgBatteryReplacement
                           "14.0",    # upsmgBatteryLowBattery
                           "15.0",    # upsmgBatteryChargerFault
                           "16.0",    # upsmgBatteryLowCondition
                          ])

mgeups_battery_default_levels = { 'capacity': (95, 90), 'voltage': (50, 48) }

def inventory_mgeups_battery(info):
    if len(info) > 0:
        yield None, 'mgeups_battery_default_levels'

def check_mgeups_battery(item, params, info):
    time_remain, batt_level_raw, voltage_raw, current_raw, batt_fault, batt_replace, batt_low, charger_fault, batt_low = info[0]
    load_voltage = float(voltage_raw) / 100.0
    load_current = float(current_raw) / 100.0
    batt_level = int(batt_level_raw)

    warn, crit = params.get('capacity', (95, 90))
    state = 0
    if batt_level < crit:
        state = 2
    elif batt_level < warn:
        state = 1
    if state:
        levelstext = " (warn/crit at %d/%d%%)" % (warn, crit)
    else:
        levelstext = ""
    yield state, ("Capacity at %d%%" % batt_level) + levelstext

    infotext = ", Load: %.2fV / %.2fA" % (load_voltage, load_current)
    perfdata = [ ("battery_capacity", batt_level, warn, crit, 0, 100),
                 ("load_voltage", load_voltage),
                 ("load_current", load_current), ]

    yield state, infotext, perfdata

check_info["mgeups_battery"] = {
    "check_function"            : check_mgeups_battery,
    "inventory_function"        : inventory_mgeups_battery,
    "service_description"       : "Battery",
    "has_perfdata"              : True,
    "snmp_info"                 : mgeups_battery_info,
    "snmp_scan_function"        : mgeups_battery_scan,
}

# Fin.

