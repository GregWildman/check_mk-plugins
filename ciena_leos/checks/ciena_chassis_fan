#!/usr/bin/python
# -*- encoding: utf-8; py-indent-offset: 4 -*-
# +------------------------------------------------------------------+
# |             ____ _               _        __  __ _  __           |
# |            / ___| |__   ___  ___| | __   |  \/  | |/ /           |
# |           | |   | '_ \ / _ \/ __| |/ /   | |\/| | ' /            |
# |           | |___| | | |  __/ (__|   <    | |  | | . \            |
# |            \____|_| |_|\___|\___|_|\_\___|_|  |_|_|\_\           |
# |                                                                  |
# | Copyright Mathias Kettner 2018             mk@mathias-kettner.de |
# +------------------------------------------------------------------+
#
# This file is part of Check_MK.
# The official homepage is at http://mathias-kettner.de/check_mk.
#
# check_mk is free software;  you can redistribute it and/or modify it
# under the  terms of the  GNU General Public License  as published by
# the Free Software Foundation in version 2.  check_mk is  distributed
# in the hope that it will be useful, but WITHOUT ANY WARRANTY;  with-
# out even the implied warranty of  MERCHANTABILITY  or  FITNESS FOR A
# PARTICULAR PURPOSE. See the  GNU General Public License for more de-
# tails. You should have  received  a copy of the  GNU  General Public
# License along with GNU Make; see the file  COPYING.  If  not,  write
# to the Free Software Foundation, Inc., 51 Franklin St,  Fifth Floor,
# Boston, MA 02110-1301 USA.

# Techfu / Greg Wildman <greg.wildman@techfu.co.za> - 2018

# Example Output
#
# +------------ FAN SPEED STATUS -------------+
# | FanId | Current   | Average   | Minimum   |
# +-------+-----------+-----------+-----------+
# | 1     | 4560  rpm | 4560  rpm | 4500  rpm |
# | 2     | 4950  rpm | 4920  rpm | 4860  rpm |
# +-------+-----------+-----------+-----------+
#
# .1.3.6.1.4.1.6141.2.60.11.1.1.4.1.1.1.1 = INTEGER: 1
# .1.3.6.1.4.1.6141.2.60.11.1.1.4.1.1.1.2 = INTEGER: 2
# .1.3.6.1.4.1.6141.2.60.11.1.1.4.1.1.2.1 = INTEGER: 1
# .1.3.6.1.4.1.6141.2.60.11.1.1.4.1.1.2.2 = INTEGER: 1
# .1.3.6.1.4.1.6141.2.60.11.1.1.4.1.1.3.1 = INTEGER: 1
# .1.3.6.1.4.1.6141.2.60.11.1.1.4.1.1.3.2 = INTEGER: 1
# .1.3.6.1.4.1.6141.2.60.11.1.1.4.1.1.5.1 = INTEGER: 4560
# .1.3.6.1.4.1.6141.2.60.11.1.1.4.1.1.5.2 = INTEGER: 4950
# .1.3.6.1.4.1.6141.2.60.11.1.1.4.1.1.6.1 = INTEGER: 4500
# .1.3.6.1.4.1.6141.2.60.11.1.1.4.1.1.6.2 = INTEGER: 4860

ciena_chassis_fan_scan = lambda oid: oid(".1.3.6.1.2.1.1.2.0").startswith(".1.3.6.1.4.1.6141.1")

def inventory_ciena_chassis_fan(info):
    for fan_id, fan_type, status, current_speed, min_speed in info:
        if fan_id.isdigit():
            yield fan_id, {}

def check_ciena_chassis_fan(item, params, info):
    map_types = {
       "1": ('fixed'),
       "2": ('hotswop'),
       "3": ('not installed'),
    }
    map_status = {
       "1": ("ok"),
       "2": ("pending"),
       "3": ("failure"),
    }

    for fan_id, fan_type, fan_status_raw, current_speed, min_speed in info:
        if fan_id == item:
            rpm = int(current_speed)
            fan_status = map_status.get(fan_status_raw)

            perfdata = []
            if params.get("output_metrics"):
                perfdata = [ ("fan", rpm)]

            if fan_status == "ok":
                status = 0
                if rpm > 0:
                    infotext = "Speed at %d RPM" % (rpm)
                else:
                    infotext = "Fans Stopped (low chassis temp)"
            else:
                infotext = "Fan has failed"
                status = 2

            infotext += ", Module Type: %s" % (map_types.get(fan_type))
            yield status, infotext, perfdata

check_info["ciena_chassis_fan"] = {
    "inventory_function"      : inventory_ciena_chassis_fan,
    "check_function"          : check_ciena_chassis_fan,
    "service_description"     : "Fan %s",
    "snmp_info"               : (".1.3.6.1.4.1.6141.2.60.11.1.1.4", [ # WWP-LEOS-CHASSIS-MIB::wwpLeosChassisFanModule
                                     "1.1.1",   #  wwpLeosChassisFanModuleNum               0
                                     "1.1.2",   #  wwpLeosChassisFanModuleType              1
                                     "1.1.3",   #  wwpLeosChassisFanModuleStatus            2
                                     "1.1.5",   #  wwpLeosChassisFanCurrentSpeed            3
                                     "1.1.6",   #  wwpLeosChassisFanMinSpeed                4
                                ]),
    "snmp_scan_function"      : ciena_chassis_fan_scan,
    "has_perfdata"            : True,
    "group"                   : "hw_fans",
}

# Fin.

