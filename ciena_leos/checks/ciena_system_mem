#!/usr/bin/python
# -*- encoding: utf-8; py-indent-offset: 4 -*-
# +------------------------------------------------------------------+
# |             ____ _               _        __  __ _  __           |
# |            / ___| |__   ___  ___| | __   |  \/  | |/ /           |
# |           | |   | '_ \ / _ \/ __| |/ /   | |\/| | ' /            |
# |           | |___| | | |  __/ (__|   <    | |  | | . \            |
# |            \____|_| |_|\___|\___|_|\_\___|_|  |_|_|\_\           |
# |                                                                  |
# | Copyright Mathias Kettner 2018             mk@mathias-kettner.de |
# +------------------------------------------------------------------+
#
# This file is part of Check_MK.
# The official homepage is at http://mathias-kettner.de/check_mk.
#
# check_mk is free software;  you can redistribute it and/or modify it
# under the  terms of the  GNU General Public License  as published by
# the Free Software Foundation in version 2.  check_mk is  distributed
# in the hope that it will be useful, but WITHOUT ANY WARRANTY;  with-
# out even the implied warranty of  MERCHANTABILITY  or  FITNESS FOR A
# PARTICULAR PURPOSE. See the  GNU General Public License for more de-
# tails. You should have  received  a copy of the  GNU  General Public
# License along with GNU Make; see the file  COPYING.  If  not,  write
# to the Free Software Foundation, Inc., 51 Franklin St,  Fifth Floor,
# Boston, MA 02110-1301 USA.

# Techfu / Greg Wildman <greg.wildman@techfu.co.za> - 2018

# Example Output
#
# .1.3.6.1.4.1.6141.2.60.12.1.7.1.0 = INTEGER: 106
# .1.3.6.1.4.1.6141.2.60.12.1.7.3.0 = INTEGER: 93
# .1.3.6.1.4.1.6141.2.60.12.1.7.4.0 = INTEGER: 90

ciena_system_mem_scan = lambda oid: oid(".1.3.6.1.2.1.1.2.0").startswith(".1.3.6.1.4.1.6141.1")

ciena_system_mem_info = ( ".1.3.6.1.4.1.6141.2.60.12.1.13", [ # WWP-LEOS-SYSTEM-CONFIG-MIB::wwpLeosSystemMemoryUtilization
                                "1.0",    # wwpLeosSystemMemoryUtilizationUsedMemoryCurrent
                                "4.0",    # wwpLeosSystemMemoryUtilizationAvailableMemoryCurrent
                                "7.0",    # wwpLeosSystemMemoryUtilizationAvailableMemoryState
                        ])

factory_settings["ciena_system_mem_default_levels"] = {"levels": ("perc_used", (80.0, 90.0))}

def inventory_ciena_system_mem(info):
    if len(info) > 0:
        return [ (None, {})]

def check_ciena_system_mem(item, params, info):
    mem_used_bytes = int(info[0][0])
    mem_avail_bytes = int(info[0][1])
    mem_total_bytes = mem_used_bytes + mem_avail_bytes

    return check_memory_simple(mem_used_bytes, mem_total_bytes, params)

check_info["ciena_system_mem"] = {
    "inventory_function"      : inventory_ciena_system_mem,
    "check_function"          : check_ciena_system_mem,
    "service_description"     : "Memory utilization",
    "has_perfdata"            : True,
    "snmp_info"               : ciena_system_mem_info,
    "snmp_scan_function"      : ciena_system_mem_scan,
    "default_levels_variable" : "ciena_system_mem_default_levels",
    "group"                   : "memory_simple",
    "includes"                : [ "memory.include" ],
}

# Fin.

