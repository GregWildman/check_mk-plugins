#!/usr/bin/python
# -*- encoding: utf-8; py-indent-offset: 4 -*-
# +------------------------------------------------------------------+
# |             ____ _               _        __  __ _  __           |
# |            / ___| |__   ___  ___| | __   |  \/  | |/ /           |
# |           | |   | '_ \ / _ \/ __| |/ /   | |\/| | ' /            |
# |           | |___| | | |  __/ (__|   <    | |  | | . \            |
# |            \____|_| |_|\___|\___|_|\_\___|_|  |_|_|\_\           |
# |                                                                  |
# | Copyright Mathias Kettner 2018             mk@mathias-kettner.de |
# +------------------------------------------------------------------+
#
# This file is part of Check_MK.
# The official homepage is at http://mathias-kettner.de/check_mk.
#
# check_mk is free software;  you can redistribute it and/or modify it
# under the  terms of the  GNU General Public License  as published by
# the Free Software Foundation in version 2.  check_mk is  distributed
# in the hope that it will be useful, but WITHOUT ANY WARRANTY;  with-
# out even the implied warranty of  MERCHANTABILITY  or  FITNESS FOR A
# PARTICULAR PURPOSE. See the  GNU General Public License for more de-
# tails. You should have  received  a copy of the  GNU  General Public
# License along with GNU Make; see the file  COPYING.  If  not,  write
# to the Free Software Foundation, Inc., 51 Franklin St,  Fifth Floor,
# Boston, MA 02110-1301 USA.

# Techfu / Greg Wildman <greg.wildman@techfu.co.za> - 2018

# Example Output
#
# .1.3.6.1.4.1.4458.1000.1.6.1.1.1.101 = Gauge32: 0
# .1.3.6.1.4.1.4458.1000.1.6.1.1.2.101 = Gauge32: 709
# .1.3.6.1.4.1.4458.1000.1.6.1.1.3.101 = Gauge32: 0
# .1.3.6.1.4.1.4458.1000.1.6.1.1.4.101 = Gauge32: 50639


radwin_2000_odu_scan = lambda oid: ".1.3.6.1.4.1.4458.20.3.1.1" in oid(".1.3.6.1.2.1.1.2.0")

radwin_2000_odu_info = ( ".1.3.6.1.4.1.4458.1000.1.6.1.1", [ # RADWIN-MIB-WINLINK1000::winlink1000OduPerfMonCurrTable
                            "1.101",    # unavailable seconds
                            "2.101",    # errored seconds
                            "3.101",    # severly errored seconds
                            "4.101",    # background block errors
                            ]
                       )

factory_settings["radwin_2000_odu_default_levels"] = {
    "uas_secs": (2, 4),
    "ers_secs": (2, 4),
    "ses_secs": (2, 4),
    "bbe_secs": (800, 900),
}

def inventory_radwin_2000_odu(info):
    if len(info) > 0:
        yield "Performance", {}

def check_radwin_2000_odu(item, params, info):
    unavail_sec, err_sec, serv_err_sec, bg_block_err = info[0]
    this_time = int(time.time())
    state = 0

    uas_rate = get_rate("uas_secs", this_time, saveint(unavail_sec))
    ers_rate = get_rate("ers_secs", this_time, saveint(err_sec))
    ses_rate = get_rate("ses_secs", this_time, saveint(serv_err_sec))
    bbe_rate = get_rate("bbe_secs", this_time, saveint(bg_block_err))
    perfdata = [ ("UAS", uas_rate), ("ES", ers_rate), ("SRS", ses_rate), ("BBE", bbe_rate) ]
    infotext = "(15 min.) "
    
    infotext += "UAS: %.1f" % (uas_rate)
    warn, crit = params.get("uas_secs")
    if uas_rate >= crit:
        infotext += "(!!)"
        state = 2
    elif uas_rate >= warn:
        infotext += "(!)"
        state = 1

    infotext += ", ES: %.1f" % (ers_rate)
    warn, crit = params.get("ers_secs")
    if ers_rate >= crit:
        infotext += "(!!)"
        state = 2
    elif ers_rate >= warn:
        infotext += "(!)"
        state = 1

    infotext += ", SES: %.1f" % (ses_rate)
    warn, crit = params.get("ses_secs")
    if ses_rate >= crit:
        infotext += "(!!)"
        state = 2
    elif ses_rate >= warn:
        infotext += "(!)"
        state = 1

    infotext += ", BBE: %.1f" % (bbe_rate)
    warn, crit = params.get("bbe_secs")
    if bbe_rate >= crit:
        infotext += "(!!)"
        state = 2
    elif bbe_rate >= warn:
        infotext += "(!)"
        state = 1

    return (state, infotext, perfdata)

check_info["radwin_2000_odu"] = {
    "inventory_function"        : inventory_radwin_2000_odu,
    "check_function"            : check_radwin_2000_odu,
    "service_description"       : 'ODU',
    'has_perfdata'              : True,
    "snmp_info"                 : radwin_2000_odu_info,
    "snmp_scan_function"        : radwin_2000_odu_scan,
    "default_levels_variable"   : "radwin_2000_odu_default_levels",
}

# Fin.

