#!/usr/bin/env python
# -*- encoding: utf-8; py-indent-offset: 4 -*-
# +------------------------------------------------------------------+
# |             ____ _               _        __  __ _  __           |
# |            / ___| |__   ___  ___| | __   |  \/  | |/ /           |
# |           | |   | '_ \ / _ \/ __| |/ /   | |\/| | ' /            |
# |           | |___| | | |  __/ (__|   <    | |  | | . \            |
# |            \____|_| |_|\___|\___|_|\_\___|_|  |_|_|\_\           |
# |                                                                  |
# | Copyright Mathias Kettner 2018             mk@mathias-kettner.de |
# +------------------------------------------------------------------+
#
# This file is part of Check_MK.
# The official homepage is at http://mathias-kettner.de/check_mk.
#
# check_mk is free software;  you can redistribute it and/or modify it
# under the  terms of the  GNU General Public License  as published by
# the Free Software Foundation in version 2.  check_mk is  distributed
# in the hope that it will be useful, but WITHOUT ANY WARRANTY;  with-
# out even the implied warranty of  MERCHANTABILITY  or  FITNESS FOR A
# PARTICULAR PURPOSE. See the  GNU General Public License for more de-
# tails. You should have  received  a copy of the  GNU  General Public
# License along with GNU Make; see the file  COPYING.  If  not,  write
# to the Free Software Foundation, Inc., 51 Franklin St,  Fifth Floor,
# Boston, MA 02110-1301 USA.

# Techfu / Greg Wildman <greg.wildman@techfu.co.za> - 2018

# Example Output
#
# .1.3.6.1.4.1.46242.2.1.1.1 = INTEGER: 1
# .1.3.6.1.4.1.46242.2.1.2.1 = INTEGER: 4680

def inventory_netonix_wisp_fan(info):
    for fan_idx, fan_speed in info:
        if fan_speed != "":
            yield fan_idx, {}

def check_netonix_wisp_fan(item, params, info):
    for fan_idx, fan_speed in info:
        if item == fan_idx:
            rpm = int(fan_speed)

            perfdata = []
            if params.get("output_metrics"):
                perfdata = [ ("fan", rpm)]

            status = 0
            if rpm > 0:
                infotext = "Speed at %d RPM" % (rpm)
            else:
                infotext = "Fan is currently off"

            return status, infotext, perfdata

check_info["netonix_wisp_fan"] = {
    "inventory_function"        : inventory_netonix_wisp_fan,
    "check_function"            : check_netonix_wisp_fan,
    "service_description"       : 'Fan %s',
    "has_perfdata"              : True,
    "group"                     : "hw_fans",
    "snmp_info"                 : (".1.3.6.1.4.1.46242.2", [   # NETONIX-SWITCH-MIB::fanTable
                                         "1.1",    # index
                                         "1.2",    # fanSpeed
                                  ]),
    "snmp_scan_function"        : lambda oid: oid(".1.3.6.1.2.1.1.2.0") == ".1.3.6.1.4.1.46242" and \
                                              oid(".1.3.6.1.4.1.46242.2.1.1.1") != None,

}


# Fin.

