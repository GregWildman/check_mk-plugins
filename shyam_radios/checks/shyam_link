#!/usr/bin/python
# -*- encoding: utf-8; py-indent-offset: 4 -*-
# +------------------------------------------------------------------+
# |             ____ _               _        __  __ _  __           |
# |            / ___| |__   ___  ___| | __   |  \/  | |/ /           |
# |           | |   | '_ \ / _ \/ __| |/ /   | |\/| | ' /            |
# |           | |___| | | |  __/ (__|   <    | |  | | . \            |
# |            \____|_| |_|\___|\___|_|\_\___|_|  |_|_|\_\           |
# |                                                                  |
# | Copyright Mathias Kettner 2018             mk@mathias-kettner.de |
# +------------------------------------------------------------------+
#
# This file is part of Check_MK.
# The official homepage is at http://mathias-kettner.de/check_mk.
#
# check_mk is free software;  you can redistribute it and/or modify it
# under the  terms of the  GNU General Public License  as published by
# the Free Software Foundation in version 2.  check_mk is  distributed
# in the hope that it will be useful, but WITHOUT ANY WARRANTY;  with-
# out even the implied warranty of  MERCHANTABILITY  or  FITNESS FOR A
# PARTICULAR PURPOSE. See the  GNU General Public License for more de-
# tails. You should have  received  a copy of the  GNU  General Public
# License along with GNU Make; see the file  COPYING.  If  not,  write
# to the Free Software Foundation, Inc., 51 Franklin St,  Fifth Floor,
# Boston, MA 02110-1301 USA.

# Techfu / Greg Wildman <greg.wildman@techfu.co.za> - 2018

# Example Output
#
#
# RU_73_2.88.MIB::peerConfigTable
# .1.3.6.1.4.1.26149.2.2.13.9.1.1.2.1.2 = STRING: "F8:52:DF:1C:4D:27"
# .1.3.6.1.4.1.26149.2.2.13.9.1.1.3.1.2 = INTEGER: 512
# .1.3.6.1.4.1.26149.2.2.13.9.1.1.4.1.2 = INTEGER: 512
#
# RU_73_2.88.MIB::peerNodeStatusTable
# .1.3.6.1.4.1.26149.2.2.13.9.2.1.2.1.2 = INTEGER: 2
# .1.3.6.1.4.1.26149.2.2.13.9.2.1.4.1.2 = INTEGER: -72
# .1.3.6.1.4.1.26149.2.2.13.9.2.1.6.1.2 = STRING: "MP11096-0-1,"
# .1.3.6.1.4.1.26149.2.2.13.9.2.1.10.1.2 = INTEGER: 65000
# .1.3.6.1.4.1.26149.2.2.13.9.2.1.11.1.2 = INTEGER: 65000
# .1.3.6.1.4.1.26149.2.2.13.9.2.1.12.1.2 = INTEGER: 582
# .1.3.6.1.4.1.26149.2.2.13.9.2.1.13.1.2 = INTEGER: 2439
# .1.3.6.1.4.1.26149.2.2.13.9.2.1.14.1.2 = INTEGER: 0
# .1.3.6.1.4.1.26149.2.2.13.9.2.1.15.1.2 = INTEGER: 0
# .1.3.6.1.4.1.26149.2.2.13.9.2.1.17.1.2 = INTEGER: -71
# .1.3.6.1.4.1.26149.2.2.13.9.2.1.19.1.2 = INTEGER: 88
#
# RU_73_2.88.MIB::peerTunnelStatisticsTable
# .1.3.6.1.4.1.26149.2.2.13.9.3.1.2.1.2 = Counter64: 389228
# .1.3.6.1.4.1.26149.2.2.13.9.3.1.3.1.2 = Counter64: 499428
#
# RU_73_2.88.MIB::peerLinkStatisticsTable
# .1.3.6.1.4.1.26149.2.2.13.9.4.1.14.1.2 = Counter64: 429335
# .1.3.6.1.4.1.26149.2.2.13.9.4.1.15.1.2 = Counter64: 354642

shyam_link_scan = lambda oid: oid(".1.3.6.1.2.1.1.2.0") == ".1.3.6.1.4.1" and \
                              oid(".1.3.6.1.4.1.26149.2.2.13.9.1.1.2.1.1") != None

shyam_link_info = [ (".1.3.6.1.4.1.26149.2.2.13.9.1", [   # RU_73_2.88.MIB::peerConfigTable
                            OID_END,
                            "1.2",    # peerMacAddress
                            "1.3",    # guaranteedUplinkBW
                            "1.4",    # guaranteedDownlinkBW
                            ]),
                    (".1.3.6.1.4.1.26149.2.2.13.9.2", [   # RU_73_2.88.MIB::peerNodeStatusTable
                            "1.2",    # linkStatus
                            "1.4",    # sigStrength1
                            "1.6",    # ssIdentifier
                           "1.10",    # peerNodeStatusrxRate
                           "1.11",    # peerNodeStatustxRate
                           "1.12",    # allocatedTxBW
                           "1.13",    # allocatedRxBW
                           "1.14",    # usedTxBW
                           "1.15",    # usedRxBW
                           "1.17",    # sigStrength2
                           "1.19",    # txLinkQuality
                            ]),
                    (".1.3.6.1.4.1.26149.2.2.13.9.3", [   # RU_73_2.88.MIB::peerTunnelStatisticsTable
                            "1.2",    # rxPacket
                            "1.3",    # txPacket
                            ]),
                    (".1.3.6.1.4.1.26149.2.2.13.9.4", [   # RU_73_2.88.MIB::peerLinkStatisticsTable
                            "1.14",    # rxDataSubFrames
                            "1.20",    # txDataSubFrames
                            ]),
                ]

def parse_shyam_link(info):
    parsed = []
    num_of_peers = len(info[0])   # peerConfigTable
    config, node_stats, tunnel_stats, link_stats = info

    for x in range(0, num_of_peers):
        peer_idx = int(config[x][0].split(".")[1])
        parsed.append( [ "%02d" % peer_idx ] + config[x][1:] + node_stats[x] + tunnel_stats[x] + link_stats[x])

    return parsed

def inventory_shyam_link(info):
    parsed = parse_shyam_link(info)
    for line in parsed:
        if line[4] == "2":  # peer is connected
            yield line[0], {}

def check_shyam_link(item, params, info):
    parsed = parse_shyam_link(info)
    state = 0
    infotext = ""
    perfdata = []
    map_status = {
        "0": ("not assigned"),
        "1": ("assigned"),
        "2": ("connected"),
    }

    for peer_id, mac, bw_up, bw_down, status, signal1, ssid, rx_rate, tx_rate, allocated_bw_tx, allocated_bw_rx, \
        used_bw_tx, used_bw_rx, signal2, link_quality, packets_rx, packets_tx, frames_rx, frames_tx in parsed:
        if item == peer_id:
            infotext = "(%s)" % map_status.get(status)
            if status == "0":
                state = 2
                infotext += "(!!)"
            elif status == "1":
                state = 1
                infotext += "(!)"
            
            sector_id = ssid.rstrip(',')
            infotext += " MAC: %s, Sector: %s, RSL1: %sdBm, RSL2: %sdBm, Quality: %s%%" % \
                       (mac.upper(), sector_id, signal1, signal2, link_quality)
            perfdata = [("rsl1", "%.1fdBm" % float(signal1)), ("rsl2", "%.1fdBm" % float(signal2)),
                        ("quality", "%d" % int(link_quality), None, None, 0, 100)]

            return (state, infotext, perfdata)


check_info["shyam_link"] = {
    "inventory_function"        : inventory_shyam_link,
    "check_function"            : check_shyam_link,
    "service_description"       : 'Peer %s',
    "has_perfdata"              : True,
    "snmp_info"                 : shyam_link_info,
    "snmp_scan_function"        : shyam_link_scan,
}

# Fin.

