#!/usr/bin/env python
# -*- encoding: utf-8; py-indent-offset: 4 -*-
# +------------------------------------------------------------------+
# |             ____ _               _        __  __ _  __           |
# |            / ___| |__   ___  ___| | __   |  \/  | |/ /           |
# |           | |   | '_ \ / _ \/ __| |/ /   | |\/| | ' /            |
# |           | |___| | | |  __/ (__|   <    | |  | | . \            |
# |            \____|_| |_|\___|\___|_|\_\___|_|  |_|_|\_\           |
# |                                                                  |
# | Copyright Mathias Kettner 2014             mk@mathias-kettner.de |
# +------------------------------------------------------------------+
#
# this file is part of mkp package "mikrotik"
# see package description and ~/local/share/doc/check_mk/mikrotik
# for details and maintainer
#
# check_mk is free software;  you can redistribute it and/or modify it
# under the  terms of the  GNU General Public License  as published by
# the Free Software Foundation in version 2.  check_mk is  distributed
# in the hope that it will be useful, but WITHOUT ANY WARRANTY;  with-
# out even the implied warranty of  MERCHANTABILITY  or  FITNESS FOR A
# PARTICULAR PURPOSE. See the  GNU General Public License for more de-
# tails. You should have  received  a copy of the  GNU  General Public
# License along with GNU Make; see the file  COPYING.  If  not,  write
# to the Free Software Foundation, Inc., 51 Franklin St,  Fifth Floor,
# Boston, MA 02110-1301 USA.

#<<<mikrotik_api_ppp_sessions>>>
#name 0083n2o                          <- new user
#service pppoe       
#address 10.0.248.219
#uptime 3m51s        
#...

#
# parse function
#
def parse_mikrotik_api_ppp_sessions(info):
    data = {}
    for line in info:
        if line[0] == 'name':
            session = ' '.join(line[1:])
            data[session]={}
        if line[0] == 'service':
            line[1] = line[1].upper() 
        data[session][line[0]] = ' '.join(line[1:])

    return data

#
# inventory function
#
def inventory_mikrotik_api_ppp_sessions(parsed):
    service = {}
    for session in parsed.keys():
        service[parsed[session]['service']]=""
    for svc in service.keys():
        yield svc, {}

#
# check function
#
def check_mikrotik_api_ppp_sessions(item, params, parsed):

    perfdata = []
    count = {}

    #
    # prepare
    #
    count[item] = 0
    for session in parsed.keys():
        session_type = parsed[session]['service']
        count[session_type] = count[session_type] + 1


    if count[item] == 0:
        return 3, 'item not found in agent output'

    perfdata.append(("sessions",       count[item]))

    return 0, 'Active %s' % (
        count[item]), perfdata

#
# declare to checkmk
#
check_info["mikrotik_api_ppp_sessions"] = {
        'parse_function'            : parse_mikrotik_api_ppp_sessions,
        'inventory_function'        : inventory_mikrotik_api_ppp_sessions,
        'check_function'            : check_mikrotik_api_ppp_sessions,
        'service_description'       : "Sessions %s",
        'has_perfdata'              : True,
}

