#!/usr/bin/env python
# -*- encoding: utf-8; py-indent-offset: 4 -*-
# +------------------------------------------------------------------+
# |             ____ _               _        __  __ _  __           |
# |            / ___| |__   ___  ___| | __   |  \/  | |/ /           |
# |           | |   | '_ \ / _ \/ __| |/ /   | |\/| | ' /            |
# |           | |___| | | |  __/ (__|   <    | |  | | . \            |
# |            \____|_| |_|\___|\___|_|\_\___|_|  |_|_|\_\           |
# |                                                                  |
# | Copyright Mathias Kettner 2014             mk@mathias-kettner.de |
# +------------------------------------------------------------------+
#
# this file is part of mkp package "mikrotik"
# see package description and ~/local/share/doc/check_mk/mikrotik
# for details and maintainer
#
# check_mk is free software;  you can redistribute it and/or modify it
# under the  terms of the  GNU General Public License  as published by
# the Free Software Foundation in version 2.  check_mk is  distributed
# in the hope that it will be useful, but WITHOUT ANY WARRANTY;  with-
# out even the implied warranty of  MERCHANTABILITY  or  FITNESS FOR A
# PARTICULAR PURPOSE. See the  GNU General Public License for more de-
# tails. You should have  received  a copy of the  GNU  General Public
# License along with GNU Make; see the file  COPYING.  If  not,  write
# to the Free Software Foundation, Inc., 51 Franklin St,  Fifth Floor,
# Boston, MA 02110-1301 USA.

#<<<mikrotik_api_power>>>
#power-consumption 40
#current 1647
#voltage 24.3
#
#<<<mikrotik_api_power>>>
#power-consumption 46.8
#psu2-voltage 12
#psu1-voltage 12
#psu1-current 0
#psu2-current 3.9

def inventory_mikrotik_api_power(info):
    if info:
        yield None, {}

def check_mikrotik_api_power(item, params, info):
    if info:
        perfdata = []
        pscount = 0
        infotext = ""
        stateval = 0
        power = 0
        current = 0
        for name, value in info:
            if name == 'power-consumption':
                power = value
            elif name == 'voltage':
                voltage = value
                pscount += 1
            elif name == 'current':
                current = float(value)/1000
            elif name == 'psu1-voltage':
                voltage1 = float(value)
                pscount += 1
                if voltage1 < 10:
                    infotext += "PSU 1 fail (!!), "
                    stateval = 2
            elif name == 'psu2-voltage':
                voltage2 = float(value)
                pscount += 1
                if voltage2 < 10:
                    infotext += "PSU 2 fail (!!), "
                    stateval = 2
            elif name == 'psu1-current':
                current1 = float(value)
            elif name == 'psu2-current':
                current2 = float(value)

        if pscount == 2:
            current = float(current1 + current2)
            voltage = float(max(voltage1, voltage2))

        perfdata.append(("power", power))
        perfdata.append(("voltage", voltage))
        perfdata.append(("current", current))

        infotext += "%s PSU, Voltage: %s V, Current: %.1f A, Power: %s W" % ( pscount, voltage, current, power )

        return stateval, infotext, perfdata

check_info['mikrotik_api_power'] = {
    'inventory_function'        : inventory_mikrotik_api_power,
    'check_function'            : check_mikrotik_api_power,
    'service_description'       : 'Power Usage',
    'has_perfdata'              : True,
}

