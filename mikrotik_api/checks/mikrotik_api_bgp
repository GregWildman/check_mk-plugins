#!/usr/bin/env python
# -*- encoding: utf-8; py-indent-offset: 4 -*-
# +------------------------------------------------------------------+
# |             ____ _               _        __  __ _  __           |
# |            / ___| |__   ___  ___| | __   |  \/  | |/ /           |
# |           | |   | '_ \ / _ \/ __| |/ /   | |\/| | ' /            |
# |           | |___| | | |  __/ (__|   <    | |  | | . \            |
# |            \____|_| |_|\___|\___|_|\_\___|_|  |_|_|\_\           |
# |                                                                  |
# | Copyright Mathias Kettner 2014             mk@mathias-kettner.de |
# +------------------------------------------------------------------+
#
# this file is part of mkp package "mikrotik"
# see package description and ~/local/share/doc/check_mk/mikrotik
# for details and maintainer
#
# check_mk is free software;  you can redistribute it and/or modify it
# under the  terms of the  GNU General Public License  as published by
# the Free Software Foundation in version 2.  check_mk is  distributed
# in the hope that it will be useful, but WITHOUT ANY WARRANTY;  with-
# out even the implied warranty of  MERCHANTABILITY  or  FITNESS FOR A
# PARTICULAR PURPOSE. See the  GNU General Public License for more de-
# tails. You should have  received  a copy of the  GNU  General Public
# License along with GNU Make; see the file  COPYING.  If  not,  write
# to the Free Software Foundation, Inc., 51 Franklin St,  Fifth Floor,
# Boston, MA 02110-1301 USA.

#<<<mikrotik_api_bgp>>>
#name IPTRANSIT_MYPROVIDER_IPv4        <- new session
#nexthop-choice default
#hold-time 3m
#.id *0
#multihop False
#default-originate never
#ttl 255
#established True
#uptime 1w8h59m15s
#tcp-md5-key
#remove-private-as False
#address-families ip
#passive False
#instance default
#state established
#withdrawn-sent 0
#prefix-count 808307
#out-filter MYPROVIDER_IPv4-OUT
#local-address 1.2.3.4
#as-override False
#in-filter MYPROVIDER_IPv4-IN
#refresh-capability True
#updates-sent 4
#use-bfd False
#remote-address 5.6.7.8
#route-reflect False
#remote-hold-time 1m30s
#used-hold-time 1m30s
#disabled False
#updates-received 10722516
#used-keepalive-time 30s
#as4-capability True
#remote-id 9.8.7.6
#withdrawn-received 846199
#remote-as 12345
#name IPTRANSIT_MYPROVIDER_IPv6        <- new session
#...

#
# parse function
#
def parse_mikrotik_api_bgp(info):
    data = {}
    for line in info:
#        if line[0] == 'name':
#            session = ' '.join(line[1:])
#            data[session]={}
        data[session][line[0]] = ' '.join(line[1:])

    return data

#
# inventory function
#
def inventory_mikrotik_api_bgp(parsed):
    for session in parsed.keys():
        yield session, {}

#
# check function
#
def check_mikrotik_api_bgp(item, params, parsed):

    now = int(time.time())
    perfdata = []

    #
    # prepare
    #
    try:
        data   = parsed[item]
    except:
        return 3, 'item not found in agent output'

    #
    # disabled?
    #
    if data['disabled'] != 'false':
        return 1, 'BGP %s, disabled: %s(!)' % (
	    item,
	    data['disabled']), perfdata

    #
    # established?
    #
    if data['established'] != 'true':
        return 2, 'BGP %s, established: %s(!!)' % (
	    item,
	    data['established']), perfdata


    store = "mikrotik_bgp_%s" % item.replace(' ', '_').lower()
    updates_sent       = get_rate(store+"_us", now, int(data['updates-sent']))
    updates_received   = get_rate(store+"_ur", now, int(data['updates-received']))
    withdrawn_sent     = get_rate(store+"_ws", now, int(data['withdrawn-sent']))
    withdrawn_received = get_rate(store+"_wr", now, int(data['withdrawn-received']))

    perfdata.append(("prefix-count",       data['prefix-count']))
    perfdata.append(("updates-sent",       updates_sent))
    perfdata.append(("updates-received",   updates_received))
    perfdata.append(("withdrawn-sent",     withdrawn_sent))
    perfdata.append(("withdrawn-received", withdrawn_received))

    return 0, 'BGP %s, Remote-Address: %s, Remote-AS: %s' % (
        item,
	data['remote-address'],
	data['remote-as']), perfdata

#
# declare to checkmk
#
check_info["mikrotik_api_bgp"] = {
        'parse_function'            : parse_mikrotik_api_bgp,
        'inventory_function'        : inventory_mikrotik_api_bgp,
        'check_function'            : check_mikrotik_api_bgp,
        'service_description'       : "BGP %s",
        'has_perfdata'              : True,

}

