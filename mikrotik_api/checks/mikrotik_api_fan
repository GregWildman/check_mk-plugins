#!/usr/bin/env python
# -*- encoding: utf-8; py-indent-offset: 4 -*-
# +------------------------------------------------------------------+
# |             ____ _               _        __  __ _  __           |
# |            / ___| |__   ___  ___| | __   |  \/  | |/ /           |
# |           | |   | '_ \ / _ \/ __| |/ /   | |\/| | ' /            |
# |           | |___| | | |  __/ (__|   <    | |  | | . \            |
# |            \____|_| |_|\___|\___|_|\_\___|_|  |_|_|\_\           |
# |                                                                  |
# | Copyright Mathias Kettner 2014             mk@mathias-kettner.de |
# +------------------------------------------------------------------+
#
# this file is part of mkp package "mikrotik"
# see package description and ~/local/share/doc/check_mk/mikrotik
# for details and maintainer
#
# check_mk is free software;  you can redistribute it and/or modify it
# under the  terms of the  GNU General Public License  as published by
# the Free Software Foundation in version 2.  check_mk is  distributed
# in the hope that it will be useful, but WITHOUT ANY WARRANTY;  with-
# out even the implied warranty of  MERCHANTABILITY  or  FITNESS FOR A
# PARTICULAR PURPOSE. See the  GNU General Public License for more de-
# tails. You should have  received  a copy of the  GNU  General Public
# License along with GNU Make; see the file  COPYING.  If  not,  write
# to the Free Software Foundation, Inc., 51 Franklin St,  Fifth Floor,
# Boston, MA 02110-1301 USA.

#<<<mikrotik_api_fan>>>
#fan1-speed 4062
#use-fan main
#fan-mode auto
#fan2-speed 4062
#active-fan main
#

from cmk.base.check_legacy_includes.fan import *  # pylint: disable=wildcard-import,unused-wildcard-import

#
# defaults
#
factory_settings["mikrotik_api_fan"] = {
    "lower" : (2000, 1000),
    "output_metrics": True
}

#
# parse function
#
def parse_mikrotik_api_fan(info):
    data = {}
    for line in info:
        if 'speed' in line[0]:
            s                  = line[0]
            fan                = s.split('-')[0]
            data[fan]          = {}
            data[fan]['speed'] = line[1]

    return data


#
# inventory function
#
def inventory_mikrotik_api_fan(parsed):
    for fan in parsed.keys():

        #
        # skip fans with zero speed on discovery
        # they are more likely absent than defective
        #
        if int(parsed[fan]['speed']) > 0:
            yield fan, 'mikrotik_api_fan'


#
# check function
#
def check_mikrotik_api_fan(item, params, parsed):

    #
    # parse info from agent
    #
    data = parsed[item]
    
    #
    # this is the end
    #
    return check_fan(int(data['speed']), params)

check_info['mikrotik_api_fan'] = {
    'parse_function'            : parse_mikrotik_api_fan,
    'inventory_function'        : inventory_mikrotik_api_fan,
    'check_function'            : check_mikrotik_api_fan,
    'service_description'       : 'FAN %s',
    'has_perfdata'              : True,
    'group'                     : 'hw_fans',
    'default_levels_variable'   : 'mikrotik_api_fan',
}

