#!/usr/bin/env python3
# -*- encoding: utf-8; py-indent-offset: 4 -*-
# +------------------------------------------------------------------+
# |             ____ _               _        __  __ _  __           |
# |            / ___| |__   ___  ___| | __   |  \/  | |/ /           |
# |           | |   | '_ \ / _ \/ __| |/ /   | |\/| | ' /            |
# |           | |___| | | |  __/ (__|   <    | |  | | . \            |
# |            \____|_| |_|\___|\___|_|\_\___|_|  |_|_|\_\           |
# |                                                                  |
# | Copyright Mathias Kettner 2014             mk@mathias-kettner.de |
# +------------------------------------------------------------------+
#
# this file is part of mkp package "mikrotik"
# see package description and ~/local/share/doc/check_mk/mikrotik
# for details and maintainer
#
# check_mk is free software;  you can redistribute it and/or modify it
# under the  terms of the  GNU General Public License  as published by
# the Free Software Foundation in version 2.  check_mk is  distributed
# in the hope that it will be useful, but WITHOUT ANY WARRANTY;  with-
# out even the implied warranty of  MERCHANTABILITY  or  FITNESS FOR A
# PARTICULAR PURPOSE. See the  GNU General Public License for more de-
# tails. You should have  received  a copy of the  GNU  General Public
# License along with GNU Make; see the file  COPYING.  If  not,  write
# to the Free Software Foundation, Inc., 51 Franklin St,  Fifth Floor,
# Boston, MA 02110-1301 USA.

# Example with NTP package
# <<<mikrotik_api_ntp>>>
# enabled true
# mode unicast
# primary-ntp 10.99.80.1
# secondary-ntp 0.0.0.0
# dynamic-servers 
# status synchronized
# time 15:13:34
# date jun/02/2021
# time-zone-name Africa/Johannesburg

# Example with only SNTP client
# <<<mikrotik_api_ntp>>>
# enabled true
# primary-ntp 10.99.80.1
# secondary-ntp 0.0.0.0
# server-dns-names 
# mode unicast
# poll-interval 8m32s
# active-server 10.99.80.1
# last-update-from 10.99.80.1
# last-update-before 2m26s820ms
# last-adjustment 1ms185us
# time 15:13:06
# date jun/02/2021
# time-zone-name Africa/Johannesburg

# RouterOS v7
# <<<mikrotik_api_ntp>>>
# enabled true
# mode unicast
# servers 194.0.5.123,197.84.150.123
# freq-drift 8.008
# status synchronized
# synced-server 194.0.5.123
# synced-stratum 2
# system-offset -0.372
# time 08:59:24
# date nov/01/2022
# time-zone-name Africa/Johannesburg

import time, datetime


#
# parse function
#
def parse_mikrotik_api_ntp(info):
    data = {}
    for line in info:
        for what in ['enabled', 'mode', 'primary-ntp', 'secondary-ntp', 'servers', 'status', 'time-zone-name', 'date', 'time', 'system-offset']:
            if what in line[0]:
                data[line[0]] = ' '.join(line[1:])                     

    return data


#
# inventory function
#
def inventory_mikrotik_api_ntp(parsed):
    if parsed:
        yield None, {}

#
# check function
#
def check_mikrotik_api_ntp(item, params, parsed):

    #
    # disabled?
    #
    if parsed['enabled'] != 'true':
        return 1, 'disabled (!)'


    #
    # NTP server (ntp package installed) retuen status,
    # otherwise it's normal SNTP client
    #
    if 'status' in parsed:
        infotext= 'Server %s' % parsed['status']
    else:
        infotext = 'Client only'

    for what in ['mode', 'primary-ntp', 'secondary-ntp', 'servers', 'time-zone-name']:
        for i in parsed.keys():
            if what in i:
                if i == 'time-zone-name':
                    what = 'TZ'
                infotext += ', %s: %s' % (what, parsed[i])

    #
    # Check the time delta
    #
    if 'system-offset' in parsed:
        infotext += ', offset %s seconds' % parsed['system-offset']
    else:
        router_timestamp = "%s %s" % (parsed["date"], parsed["time"])
        d1 = datetime.datetime.strptime(router_timestamp, '%b/%d/%Y %H:%M:%S')
        d2 = datetime.datetime.now()
        difference = d2 - d1
        infotext += ', delta %s seconds' % difference.seconds

    #
    # This is the end
    #
    return 0, infotext

#
# check info
#
check_info['mikrotik_api_ntp'] = {
    'parse_function'            : parse_mikrotik_api_ntp,
    'inventory_function'        : inventory_mikrotik_api_ntp,
    'check_function'            : check_mikrotik_api_ntp,
    'service_description'       : 'NTP',
    'has_perfdata'              : False,
}

