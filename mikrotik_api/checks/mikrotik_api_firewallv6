#!/usr/bin/env python3
# -*- encoding: utf-8; py-indent-offset: 4 -*-
# +------------------------------------------------------------------+
# |             ____ _               _        __  __ _  __           |
# |            / ___| |__   ___  ___| | __   |  \/  | |/ /           |
# |           | |   | '_ \ / _ \/ __| |/ /   | |\/| | ' /            |
# |           | |___| | | |  __/ (__|   <    | |  | | . \            |
# |            \____|_| |_|\___|\___|_|\_\___|_|  |_|_|\_\           |
# |                                                                  |
# | Copyright Mathias Kettner 2014             mk@mathias-kettner.de |
# +------------------------------------------------------------------+
#
# this file is part of mkp package "mikrotik"
# see package description and ~/local/share/doc/check_mk/mikrotik
# for details and maintainer
#
# check_mk is free software;  you can redistribute it and/or modify it
# under the  terms of the  GNU General Public License  as published by
# the Free Software Foundation in version 2.  check_mk is  distributed
# in the hope that it will be useful, but WITHOUT ANY WARRANTY;  with-
# out even the implied warranty of  MERCHANTABILITY  or  FITNESS FOR A
# PARTICULAR PURPOSE. See the  GNU General Public License for more de-
# tails. You should have  received  a copy of the  GNU  General Public
# License along with GNU Make; see the file  COPYING.  If  not,  write
# to the Free Software Foundation, Inc., 51 Franklin St,  Fifth Floor,
# Boston, MA 02110-1301 USA.


#<<<mikrotik_api_firewallv6>>>
#comment anti-spoofing - permit customer prefixes to outside only
#.id *22
#chain forward
#bytes 3865890417
#packets 4148355
#disabled None
#comment None
#.id *23
#chain forward
#bytes 46066785198
#packets 156794722
#disabled None
#comment blacklist rules based on address list (checkmk: blacklist)
#.id *19
#chain deny_src
#bytes 1092346897
#packets 10988418
#disabled None

# - comment is always first, followed by k/v of this rule
#   - becomes item
#   - can be shortend by keyword "checkmk: "
#   - above examples:
#     "comment anti-spoofing - permit customer prefixes to outside only"
#        -> "Firewall Filter comment anti-spoofing - permit customer prefixes to outside only"
#     "comment blacklist rules based on address list (checkmk: blacklist)"
#        -> "Firewall Filter blacklist"
# - 'None' means no info from api for that key
# - 'comment None' will not inventarize


#
# parse function
#
def parse_mikrotik_api_firewallv6(info):
    data = {}
    for line in info:
        if line[0] == 'comment':

            #
            # use rule comment for item
            # no other way to identify rule: id changes with position
            #
            rule = ' '.join(line[1:])

            #
            # use a short name if configured
            # trim off trailiung close bracket if specified.
            #
            if 'checkmk:' in rule:
                rule = rule.split('checkmk: ')[1].rstrip(')')
            else:
                rule = 'None'

            data[rule] = {}

        data[rule][line[0]] = ' '.join(line[1:])

    return data

#
# inventory function
# only return rules with comments
# 
def inventory_mikrotik_api_firewallv6(parsed):
    for rule in parsed.keys():
        if rule != 'None' and parsed[rule]['disabled'] != 'true':
            yield rule, {'disabled': parsed[rule]['disabled']}

#
# check function
#
def check_mikrotik_api_firewallv6(item, params, parsed):

    #
    # prepare
    #
    perfdata = []
    try:
        data   = parsed[item]
    except:
        return 3, 'item not found in agent output'

    #
    # wtf: api returns id in hex, cli in dec
    #
    infotext  = 'chain: %s' % (data['chain'])
    multiline = '\ndisabled: %s, id: %s' % (data['disabled'], int(data['.id'][1:], 16))


    #
    # state is WARN if differs from inventory
    #
    if params['disabled'] != data['disabled']:
        infotext += ', disabled state: %s (expected: %s)(!)' % (data['disabled'], params['disabled'])


    #
    # perfata if not disabled:
    if data['disabled'] != 'true':

        #
        # time, he's waiting in the wings
        #
        now = time.time()

        #
        # get rates
        #
        byterate   = get_rate("byterate.%s" % item, now, int(data['bytes']))
        packetrate = get_rate("packetrate.%s" % item, now, int(data['packets']))

        infotext += ', %s/s, %.0f packets/s' % (get_bytes_human_readable(byterate), packetrate)

        #
        # perfdata
        #
        perfdata.append(("bps", byterate*8))
        perfdata.append(("packetsps", packetrate))



    #
    # determine state
    #
    infotext += multiline
    if '!!' in infotext:
        stateval = 2
    elif '!' in infotext:
        stateval = 1
    else:
        stateval = 0


    #
    # this is the end
    #
    return 0, infotext, perfdata


#
# declare to checkmk
#
check_info["mikrotik_api_firewallv6"] = {
        "parse_function"            : parse_mikrotik_api_firewallv6,
        "check_function"            : check_mikrotik_api_firewallv6,
        "service_description"       : "Firewall Filter v6 %s",
        "inventory_function"        : inventory_mikrotik_api_firewallv6,
        "has_perfdata"              : True,
}

